<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IdentityState_Approved" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="IdentityState_Compromised" xml:space="preserve">
    <value>Compromised</value>
  </data>
  <data name="IdentityState_Created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="IdentityState_Obsoleted" xml:space="preserve">
    <value>Obsoleted</value>
  </data>
  <data name="IdentityState_Rejected" xml:space="preserve">
    <value>Rejected</value>
  </data>
  <data name="TagEngraved" xml:space="preserve">
    <value>Tag Engraved with link to {0}.</value>
  </data>
  <data name="TagNotEngraved" xml:space="preserve">
    <value>Unable to engrave tag with link to {0}.</value>
  </data>
  <data name="PinIsInvalid" xml:space="preserve">
    <value>PIN is invalid. You have {0} remaining attempts.</value>
  </data>
  <data name="PinIsInvalidAplicationBlockedForever" xml:space="preserve">
    <value>PIN attempts entering is exceded. Your application has been blocked forever</value>
  </data>
  <data name="PinIsInvalidAplicationBlocked" xml:space="preserve">
    <value>PIN attempts entering is exceded. Your application has been blocked till {0}.</value>
  </data>
  <data name="PinIsInvalidAplicationBlockedTillTomorrow" xml:space="preserve">
    <value>PIN attempts entering is exceded. Your application has been blocked till tomorrow at {0}.</value>
  </data>
  <data name="PinIsInvalidAplicationBlockedForOneWeek" xml:space="preserve">
    <value>PIN attempts entering is exceded. Your application has been blocked for one week</value>
  </data>
  <data name="PinTooShort" xml:space="preserve">
    <value>PIN length must be at least {0} characters.</value>
  </data>
  <data name="PinContainsName" xml:space="preserve">
    <value>A PIN must not contain any word from the identity names.</value>
  </data>
  <data name="PinContainsPersonalNumber" xml:space="preserve">
    <value>A PIN must not contain the identity personal number.</value>
  </data>
  <data name="PinContainsAddress" xml:space="preserve">
    <value>A PIN must not contain any word from the identity address lines.</value>
  </data>
  <data name="PinContainsEMail" xml:space="preserve">
    <value>A PIN must not contain the identity e-mail address.</value>
  </data>
  <data name="PinContainsPhoneNumber" xml:space="preserve">
    <value>A PIN must not contain the identity phone number.</value>
  </data>
  <data name="PinWithNotEnoughDigitsLettersSigns" xml:space="preserve">
    <value>At least {0} letters, digits or symbols must be used.</value>
  </data>
  <data name="PinWithNotEnoughDigitsOrSigns" xml:space="preserve">
    <value>You must also use at least {0} digits or symbols.</value>
  </data>
  <data name="PinWithNotEnoughLettersOrDigits" xml:space="preserve">
    <value>You must also use at least {0} letters or digits.</value>
  </data>
  <data name="PinWithNotEnoughLettersOrSigns" xml:space="preserve">
    <value>You must also use at least {0} letters or symbols.</value>
  </data>
  <data name="PinWithTooManyIdenticalSymbols" xml:space="preserve">
    <value>A PIN must not contain more than {0} identical symbols.</value>
  </data>
  <data name="PinWithTooManySequencedSymbols" xml:space="preserve">
    <value>A PIN must not contain more than {0} sequenced symbols, e.g. "12" or "ab".</value>
  </data>
  <data name="ThereIsNoNetwork" xml:space="preserve">
    <value>There is no network</value>
  </data>
  <data name="RequestTimedOut" xml:space="preserve">
    <value>The request timed out</value>
  </data>
  <data name="RequestWasCancelled" xml:space="preserve">
    <value>The request was cancelled</value>
  </data>
  <data name="XmppState_Authenticating" xml:space="preserve">
    <value>Authenticating network identity</value>
  </data>
  <data name="XmppState_Binding" xml:space="preserve">
    <value>Binding connection</value>
  </data>
  <data name="XmppState_Connected" xml:space="preserve">
    <value>Connected</value>
  </data>
  <data name="XmppState_Connecting" xml:space="preserve">
    <value>Establishing connection</value>
  </data>
  <data name="XmppState_Error" xml:space="preserve">
    <value>Connection error</value>
  </data>
  <data name="XmppState_FetchingRoster" xml:space="preserve">
    <value>Fetching roster</value>
  </data>
  <data name="XmppState_Offline" xml:space="preserve">
    <value>Disconnected</value>
  </data>
  <data name="XmppState_Registering" xml:space="preserve">
    <value>Registering with broker</value>
  </data>
  <data name="XmppState_RequestingSession" xml:space="preserve">
    <value>Requesting session</value>
  </data>
  <data name="XmppState_SettingPresence" xml:space="preserve">
    <value>Setting presence</value>
  </data>
  <data name="XmppState_StartingEncryption" xml:space="preserve">
    <value>Encrypting connection</value>
  </data>
  <data name="XmppState_StreamNegotiation" xml:space="preserve">
    <value>Negotiating stream</value>
  </data>
  <data name="XmppState_StreamOpened" xml:space="preserve">
    <value>Stream established</value>
  </data>
  <data name="YourLegalIdentity" xml:space="preserve">
    <value>Your legal identity</value>
  </data>
  <data name="YourLegalIdentityHasBeenCompromised" xml:space="preserve">
    <value>Your legal identity has been marked as compromised. You have therefore been redirected to create a new account.</value>
  </data>
  <data name="YourLegalIdentityHasBeenObsoleted" xml:space="preserve">
    <value>Your legal identity has been marked obsolete. You have therefore been redirected to create a new account.</value>
  </data>
  <data name="ClientMessageAuthenticationTimeout" xml:space="preserve">
    <value>Response not returned within configured time.</value>
  </data>
  <data name="ClientMessageCountryCodeMismatch" xml:space="preserve">
    <value>Country Code does not match.</value>
  </data>
  <data name="ClientMessageCountryCodeNotVerified" xml:space="preserve">
    <value>Country code not verified.</value>
  </data>
  <data name="ClientMessageFirstNameNotVerified" xml:space="preserve">
    <value>First name not verified.</value>
  </data>
  <data name="ClientMessageLastNameNotVerified" xml:space="preserve">
    <value>Last name not verified.</value>
  </data>
  <data name="ClientMessageNotValid" xml:space="preserve">
    <value>Identity not valid.</value>
  </data>
  <data name="ClientMessagePersonalNumberMismatch" xml:space="preserve">
    <value>Personal Number does not match.</value>
  </data>
  <data name="ClientMessagePersonalNumberNotVerified" xml:space="preserve">
    <value>Personal number not verified.</value>
  </data>
  <data name="ClientMessageReferenceMismatch" xml:space="preserve">
    <value>Returned reference did not match request reference.</value>
  </data>
  <data name="ClientMessageUnexpectedDocumentInformation" xml:space="preserve">
    <value>Document information not returned as expected.</value>
  </data>
  <data name="ClientMessageUnexpectedEventResult" xml:space="preserve">
    <value>Event result not returned as expected.</value>
  </data>
  <data name="ClientMessageUnexpectedResult" xml:space="preserve">
    <value>Unexpected response returned.</value>
  </data>
  <data name="ErrorTitle" xml:space="preserve">
    <value>An error has occurred</value>
  </data>
  <data name="WarningTitle" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="SuccessTitle" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="Repair" xml:space="preserve">
    <value>Repair</value>
  </data>
  <data name="CantConnectTo" xml:space="preserve">
    <value>Can't connect to {0}</value>
  </data>
  <data name="DomainDoesNotFollowEncryptionPolicy" xml:space="preserve">
    <value>{0} does not follow the ubiquitous encryption policy</value>
  </data>
  <data name="DomainIsNotAValidOperator" xml:space="preserve">
    <value>{0} is not a valid operator</value>
  </data>
  <data name="UnableToAuthenticateWith" xml:space="preserve">
    <value>Unable to authenticate with {0}</value>
  </data>
  <data name="OperatorDoesNotSupportRegisteringNewAccounts" xml:space="preserve">
    <value>The operator {0} does not support registration of new accounts</value>
  </data>
  <data name="AccountNameAlreadyTaken" xml:space="preserve">
    <value>Account name {0} is already taken. Choose another.</value>
  </data>
  <data name="InvalidUsernameOrPassword" xml:space="preserve">
    <value>Invalid username or password</value>
  </data>
  <data name="UnableToConnectTo" xml:space="preserve">
    <value>Unable to connect to {0}</value>
  </data>
  <data name="UnableToConnect" xml:space="preserve">
    <value>Unable to connect.</value>
  </data>
</root>