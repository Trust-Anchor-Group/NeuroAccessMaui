<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
					xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
					xmlns:controls="clr-namespace:NeuroAccessMaui.UI.Controls">

	<!-- Base Entry styling -->
	<Style ApplyToDerivedTypes="True"
		   TargetType="Entry">
		<Setter Property="TextColor"
				Value="{DynamicResource InputFieldsContentPrimary}" />
		<Setter Property="PlaceholderColor"
				Value="{DynamicResource InputFieldsContentSecondary}" />
		<Setter Property="FontFamily"
				Value="HaasGroteskRegular" />
		<Setter Property="FontSize"
				Value="18" />
	</Style>

	<!-- Styles for CompositeInputView label and validation when used with entries -->
	<Style x:Key="RegularCompositeInputViewValidationLabel"
		   TargetType="Label"
		   BaseResourceKey="BoldItemTitleLabel">
		<Setter Property="FontSize"
				Value="14" />
		<Setter Property="FontFamily"
				Value="SpaceGroteskSemiBold" />
		<Setter Property="LineBreakMode"
				Value="WordWrap" />
		<Setter Property="VerticalTextAlignment"
				Value="Center" />
		<Setter Property="HorizontalTextAlignment"
				Value="Start" />
	</Style>

	<Style x:Key="RegularCompositeEntryLabel"
		   TargetType="Label"
		   BaseResourceKey="BoldItemTitleLabel">
		<Setter Property="TextColor"
				Value="{DynamicResource InputFieldsContentPrimary}" />
		<Setter Property="FontSize"
				Value="15" />
		<Setter Property="FontFamily"
				Value="SpaceGroteskSemiBold" />
		<Setter Property="LineBreakMode"
				Value="WordWrap" />
		<Setter Property="VerticalTextAlignment"
				Value="Center" />
		<Setter Property="HorizontalTextAlignment"
				Value="Start" />
	</Style>

	<Style x:Key="RegularCompositeEntryEntry"
		   TargetType="Entry">
		<Setter Property="PlaceholderColor"
				Value="{DynamicResource InputFieldsContentSecondary}" />
		<Setter Property="FontFamily"
				Value="HaasGroteskRegular" />
		<Setter Property="FontSize"
				Value="18" />
	</Style>

	<!-- Regular CompositeEntry style, based on BaseCompositeInputView -->
	<Style x:Key="RegularCompositeEntry"
		   TargetType="controls:CompositeEntry"
		   BaseResourceKey="BaseCompositeInputView">
		<Setter Property="TextColor"
				Value="{DynamicResource InputFieldsContentPrimary}" />
		<Setter Property="EntryStyle"
				Value="{DynamicResource RegularCompositeEntryEntry}" />
		<Setter Property="ValidationColor"
				Value="{DynamicResource InputFieldsContentDangerv500}" />
		<!-- Border properties are inherited from BaseCompositeInputView -->

		<Style.Triggers>
			<Trigger TargetType="controls:CompositeEntry"
					 Property="IsValid"
					 Value="False">
				<Setter Property="TextColor"
						Value="{DynamicResource InputFieldsContentDangerv500}" />
			</Trigger>
			<Trigger TargetType="controls:CompositeEntry"
					 Property="IsValid"
					 Value="True">
				<Setter Property="TextColor"
						Value="{DynamicResource InputFieldsContentPrimary}" />
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>
