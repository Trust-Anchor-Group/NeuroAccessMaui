<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
					xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
					xmlns:controls="clr-namespace:NeuroAccessMaui.UI.Controls"
					xmlns:helpers="clr-namespace:NeuroAccessMaui.Helpers">

	<!-- Common -->
	<Style x:Key="ButtonBorderBase"
		   ApplyToDerivedTypes="True"
		   TargetType="Border">
		<Setter Property="Stroke"
				Value="Transparent" />
		<Setter Property="Padding"
				Value="16,8" />
		<Setter Property="StrokeShape">
			<RoundRectangle CornerRadius="{DynamicResource MediumCornerRadius}" />
		</Setter>
	</Style>

	<Style x:Key="ButtonDisabledBorder"
		   TargetType="Border"
		   BaseResourceKey="ButtonBorderBase">
		<Setter Property="BackgroundColor"
				Value="{DynamicResource ButtonUniversalbgInactiveWL}" />
	</Style>

	<Style x:Key="ButtonDisabledLabel"
		   TargetType="Label">
		<Setter Property="TextColor"
				Value="{DynamicResource ButtonUniversalContentInactiveWL}" />
	</Style>

	<Style x:Key="PathDisabled"
		   TargetType="Path">
		<Setter Property="Fill"
				Value="{DynamicResource ContentPrimaryWL}" />
	</Style>

	<Style x:Key="ButtonLabelBase"
		   ApplyToDerivedTypes="True"
		   TargetType="Label">
		<Setter Property="FontFamily"
				Value="SpaceGroteskBold" />
	</Style>

	<!-- Primary -->
	<!-- Access Button -->
	<Style x:Key="PrimaryButtonActiveBorder"
		   TargetType="Border"
		   BaseResourceKey="ButtonBorderBase">
		<Setter Property="BackgroundColor"
				Value="{DynamicResource ButtonAccessPrimarybgWL}" />
	</Style>

	<Style x:Key="PrimaryButtonActiveLabel"
		   TargetType="Label"
		   BaseResourceKey="ButtonLabelBase">
		<Setter Property="TextColor"
				Value="{DynamicResource ButtonAccessPrimaryContentWL}" />
	</Style>

	<Style x:Key="PrimaryPath"
		   TargetType="Path">
		<Setter Property="Fill"
				Value="{DynamicResource ButtonAccessPrimaryContentWL}" />
	</Style>

	<Style x:Key="PrimaryButton"
		   TargetType="controls:TextButton">
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BorderStyle"
									Value="{DynamicResource PrimaryButtonActiveBorder}" />
							<Setter Property="LabelStyle"
									Value="{DynamicResource PrimaryButtonActiveLabel}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BorderStyle"
									Value="{DynamicResource ButtonDisabledBorder}" />
							<Setter Property="LabelStyle"
									Value="{DynamicResource ButtonDisabledLabel}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<!-- Svg Button -->
	<Style x:Key="PrimaryIconButtonBorder"
		   ApplyToDerivedTypes="False"
		   TargetType="Border">
		<Setter Property="BackgroundColor"
				Value="{DynamicResource ButtonAccessPrimarybgWL}" />
		<Setter Property="Padding"
				Value="{DynamicResource SmallMargins}" />
		<Setter Property="StrokeThickness"
				Value="{DynamicResource MediumStrokeThickness}" />
		<Setter Property="Stroke"
				Value="{DynamicResource ButtonAccessPrimaryStrokeWL}" />
		<Setter Property="StrokeShape">
			<RoundRectangle CornerRadius="8" />
		</Setter>
		<Setter Property="HorizontalOptions"
				Value="Fill" />
	</Style>

	<Style x:Key="PrimaryIconButtonSvg"
		   ApplyToDerivedTypes="False"
		   TargetType="controls:SvgView">
		<Setter Property="HeightRequest"
				Value="20" />
		<Setter Property="WidthRequest"
				Value="20" />
	</Style>

	<Style x:Key="PrimaryIconButton"
		   ApplyToDerivedTypes="False"
		   TargetType="controls:SvgButton">
		<Setter Property="BorderStyle"
				Value="{DynamicResource PrimaryIconButtonBorder}" />
		<Setter Property="SvgTintColor"
				Value="{DynamicResource ButtonAccessPrimaryContentWL}" />
		<Setter Property="SvgStyle"
				Value="{DynamicResource PrimaryIconButtonSvg}" />
		<Setter Property="LabelStyle"
				Value="{DynamicResource PrimaryButtonActiveLabel}" />
		<Setter Property="SvgAspect"
				Value="AspectFit" />
	</Style>

	<!-- Secondary -->
	<Style x:Key="SecondaryButtonActiveBorder"
		   TargetType="Border"
		   BaseResourceKey="ButtonBorderBase">
		<Setter Property="BackgroundColor"
				Value="{DynamicResource ButtonAccessSecondarybgWL}" />
	</Style>

	<Style x:Key="SecondaryButtonActiveLabel"
		   TargetType="Label"
		   BaseResourceKey="ButtonLabelBase">
		<Setter Property="TextColor"
				Value="{DynamicResource ButtonAccessSecondaryContentWL}" />
		<Setter Property="VerticalOptions"
				Value="Center" />
		<Setter Property="VerticalTextAlignment"
				Value="Center" />
	</Style>

	<Style x:Key="SecondaryPath"
		   TargetType="Path">
		<Setter Property="Fill"
				Value="{DynamicResource ButtonAccessSecondaryContentWL}" />
	</Style>

	<Style x:Key="SecondaryButton"
		   TargetType="controls:TextButton">
		<Setter Property="BorderStyle"
				Value="{DynamicResource SecondaryButtonActiveBorder}" />
		<Setter Property="LabelStyle"
				Value="{DynamicResource SecondaryButtonActiveLabel}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BorderStyle"
									Value="{DynamicResource SecondaryButtonActiveBorder}" />
							<Setter Property="LabelStyle"
									Value="{DynamicResource SecondaryButtonActiveLabel}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BorderStyle"
									Value="{DynamicResource ButtonDisabledBorder}" />
							<Setter Property="LabelStyle"
									Value="{DynamicResource ButtonDisabledLabel}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="SecondaryImageButton"
		   TargetType="controls:ImageButton">
		<Setter Property="BorderStyle"
				Value="{DynamicResource SecondaryButtonActiveBorder}" />
		<Setter Property="PathStyle"
				Value="{DynamicResource SecondaryPath}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BorderStyle"
									Value="{DynamicResource SecondaryButtonActiveBorder}" />
							<Setter Property="PathStyle"
									Value="{DynamicResource SecondaryPath}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BorderStyle"
									Value="{DynamicResource ButtonDisabledBorder}" />
							<Setter Property="PathStyle"
									Value="{DynamicResource SecondaryPath}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<!-- Tertiary -->
	<!-- Access Button -->
	<Style x:Key="TertiaryButtonActiveBorder"
		   TargetType="Border"
		   BaseResourceKey="ButtonBorderBase">
		<Setter Property="BackgroundColor"
				Value="{DynamicResource ButtonAccessTertiarybgWL}" />
	</Style>

	<Style x:Key="TertiaryButtonActiveLabel"
		   TargetType="Label"
		   BaseResourceKey="ButtonLabelBase">
		<Setter Property="TextColor"
				Value="{DynamicResource ButtonAccessTertiaryContentWL}" />
	</Style>

	<Style x:Key="TertiaryPath"
		   TargetType="Path">
		<Setter Property="Fill"
				Value="{DynamicResource ButtonAccessTertiaryContentWL}" />
	</Style>

	<Style x:Key="TertiaryButton"
		   TargetType="controls:TextButton">
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BorderStyle"
									Value="{DynamicResource TertiaryButtonActiveBorder}" />
							<Setter Property="LabelStyle"
									Value="{DynamicResource TertiaryButtonActiveLabel}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BorderStyle"
									Value="{DynamicResource ButtonDisabledBorder}" />
							<Setter Property="LabelStyle"
									Value="{DynamicResource ButtonDisabledLabel}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<!-- Gray -->
	<Style x:Key="GrayButtonActiveBorder"
		   TargetType="Border"
		   BaseResourceKey="ButtonBorderBase">
		<Setter Property="BackgroundColor"
				Value="{DynamicResource ButtonNeutralGreybg}" />
	</Style>

	<Style x:Key="GrayButtonActiveLabel"
		   TargetType="Label">
		<Setter Property="TextColor"
				Value="{DynamicResource ButtonNeutralGreyContent}" />
	</Style>

	<Style x:Key="GrayPath"
		   TargetType="Path">
		<Setter Property="Fill"
				Value="{DynamicResource ButtonNeutralGreyContent}" />
	</Style>

	<Style x:Key="GrayButton"
		   TargetType="controls:TextButton">
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BorderStyle"
									Value="{DynamicResource GrayButtonActiveBorder}" />
							<Setter Property="LabelStyle"
									Value="{DynamicResource GrayButtonActiveLabel}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BorderStyle"
									Value="{DynamicResource ButtonDisabledBorder}" />
							<Setter Property="LabelStyle"
									Value="{DynamicResource ButtonDisabledLabel}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<!-- Red -->
	<Style x:Key="RedButtonActiveBorder"
		   TargetType="Border"
		   BaseResourceKey="ButtonBorderBase">
		<Setter Property="Stroke"
				Value="{DynamicResource ButtonDangerPrimaryContentWL}" />
		<Setter Property="BackgroundColor"
				Value="{DynamicResource ButtonDangerPrimarybgWL}" />
	</Style>

	<Style x:Key="RedButtonActiveLabel"
		   TargetType="Label">
		<Setter Property="TextColor"
				Value="{DynamicResource ButtonDangerPrimaryContentWL}" />
	</Style>

	<Style x:Key="RedPath"
		   TargetType="Path">
		<Setter Property="Fill"
				Value="{DynamicResource ButtonDangerPrimaryContentWL}" />
	</Style>

	<Style x:Key="RedButton"
		   TargetType="controls:TextButton">
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BorderStyle"
									Value="{DynamicResource RedButtonActiveBorder}" />
							<Setter Property="LabelStyle"
									Value="{DynamicResource RedButtonActiveLabel}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BorderStyle"
									Value="{DynamicResource ButtonDisabledBorder}" />
							<Setter Property="LabelStyle"
									Value="{DynamicResource ButtonDisabledLabel}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<!-- Old -->
	<!-- Template Styles -->
	<Style ApplyToDerivedTypes="True"
		   TargetType="Border"
		   x:Key="FilledTemplateButtonBorder">
		<Setter Property="Background"
				Value="{DynamicResource ButtonAccessPrimarybgWL}" />
		<Setter Property="StrokeShape"
				Value="RoundRectangle 8" />
		<Setter Property="Padding"
				Value="{DynamicResource SmallMargins}" />
		<Setter Property="Margin"
				Value="{DynamicResource SmallMargins}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="Background"
									Value="{DynamicResource ButtonAccessPrimarybgWL}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Background"
									Value="{DynamicResource ButtonUniversalbgInactiveWL}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledTemplateButtonLabel"
		   TargetType="Label"
		   BaseResourceKey="BoldItemTitleLabel">
		<Setter Property="TextColor"
				Value="{DynamicResource ButtonAccessPrimaryContentWL}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="TextColor"
									Value="{DynamicResource ButtonAccessPrimaryContentWL}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor"
									Value="{DynamicResource ButtonUniversalContentInactiveWL}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledTemplateButtonPath"
		   ApplyToDerivedTypes="False"
		   TargetType="Path">
		<Setter Property="Stroke"
				Value="Transparent" />
		<Setter Property="StrokeMiterLimit"
				Value="10" />
		<Setter Property="StrokeThickness"
				Value="{StaticResource ThinStrokeThickness}" />
		<Setter Property="Fill"
				Value="{DynamicResource ButtonAccessPrimaryContentWL}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="Fill"
									Value="{DynamicResource ButtonAccessPrimaryContentWL}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Fill"
									Value="{DynamicResource ButtonUniversalContentInactiveWL}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style ApplyToDerivedTypes="True"
		   TargetType="Border"
		   x:Key="TransparentTemplateButtonBorder">
		<Setter Property="Background"
				Value="{DynamicResource ButtonAccessSecondarybgWL}" />
		<Setter Property="StrokeShape"
				Value="RoundRectangle 8" />
		<Setter Property="Padding"
				Value="{StaticResource SmallMargins}" />
		<Setter Property="Margin"
				Value="{StaticResource SmallMargins}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="Background"
									Value="{DynamicResource ButtonAccessSecondarybgWL}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Background"
									Value="{DynamicResource ButtonUniversalbgInactiveWL}" />
							<Setter Property="Stroke"
									Value="Transparent" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="TransparentTemplateButtonLabel"
		   TargetType="Label"
		   BaseResourceKey="BoldItemTitleLabel">
		<Setter Property="TextColor"
				Value="{DynamicResource ButtonAccessSecondaryContentWL}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="TextColor"
									Value="{DynamicResource ButtonAccessSecondaryContentWL}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor"
									Value="{DynamicResource ButtonUniversalContentInactiveWL}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="TransparentTemplateButtonPath"
		   ApplyToDerivedTypes="False"
		   TargetType="Path">
		<Setter Property="Stroke"
				Value="Transparent" />
		<Setter Property="StrokeMiterLimit"
				Value="10" />
		<Setter Property="StrokeThickness"
				Value="{StaticResource ThinStrokeThickness}" />
		<Setter Property="Fill"
				Value="{DynamicResource ButtonAccessSecondaryContentWL}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="Fill"
									Value="{DynamicResource ButtonAccessSecondaryContentWL}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Fill"
									Value="{DynamicResource ButtonUniversalContentInactiveWL}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>


	<!-- ImageOnly Styles -->
	<Style x:Key="ImageOnlyButtonBorder"
		   ApplyToDerivedTypes="False"
		   TargetType="Border">
		<Setter Property="BackgroundColor"
				Value="{DynamicResource ButtonNeutralNavButtonsbgActiveWL}" />
		<Setter Property="Padding"
				Value="{DynamicResource SmallSpacing}" />
		<Setter Property="HorizontalOptions"
				Value="Center" />
		<Setter Property="VerticalOptions"
				Value="Center" />
		<Setter Property="StrokeShape"
				Value="RoundRectangle 8" />
		<Setter Property="HeightRequest"
				Value="40" />
		<Setter Property="WidthRequest"
				Value="40" />
		<Setter Property="Shadow">
			<Setter.Value>
				<Shadow Brush="{DynamicResource SurfaceShadowColorWL}"
						Offset="0,4" />
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ImageOnlyButtonPath"
		   ApplyToDerivedTypes="False"
		   TargetType="Path">
		<Setter Property="Fill"
				Value="{DynamicResource ButtonNeutralNavButtonsContentActiveWL}" />
		<Setter Property="WidthRequest"
				Value="24" />
		<Setter Property="HeightRequest"
				Value="24" />
	</Style>

	<Style x:Key="ImageOnlyButton"
		   ApplyToDerivedTypes="False"
		   TargetType="controls:ImageButton">
		<Setter Property="HorizontalOptions"
				Value="Start" />
		<Setter Property="VerticalOptions"
				Value="Start" />
		<Setter Property="BorderStyle"
				Value="{DynamicResource ImageOnlyButtonBorder}" />
		<Setter Property="PathStyle"
				Value="{DynamicResource ImageOnlyButtonPath}" />
	</Style>

	<!-- Filled Image Button -->
	<Style x:Key="FilledImageButtonBorder"
		   ApplyToDerivedTypes="False"
		   TargetType="Border">
		<Setter Property="BackgroundColor"
				Value="{DynamicResource ButtonAccessPrimarybgWL}" />
		<Setter Property="Padding"
				Value="{DynamicResource MediumMargins}" />
		<Setter Property="StrokeShape">
			<RoundRectangle CornerRadius="{DynamicResource MediumCornerRadius}" />
		</Setter>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BackgroundColor"
									Value="{DynamicResource ButtonAccessPrimarybgWL}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BackgroundColor"
									Value="{DynamicResource ButtonUniversalbgInactiveWL}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledImageButtonPath"
		   ApplyToDerivedTypes="False"
		   TargetType="Path">
		<Setter Property="Fill"
				Value="{DynamicResource ButtonAccessPrimaryContentWL}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="Fill"
									Value="{DynamicResource ButtonAccessPrimaryContentWL}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Fill"
									Value="{DynamicResource ButtonUniversalContentInactiveWL}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledImageButton"
		   ApplyToDerivedTypes="False"
		   TargetType="controls:ImageButton">
		<Setter Property="BorderStyle"
				Value="{DynamicResource FilledImageButtonBorder}" />
		<Setter Property="PathStyle"
				Value="{DynamicResource FilledImageButtonPath}" />
	</Style>

	<!-- Icon Button -->
	<Style x:Key="IconButtonBorder" ApplyToDerivedTypes="False" TargetType="Border">
		<Setter Property="BackgroundColor" Value="{DynamicResource ButtonNeutralNavButtonsbgActiveWL}"/>
		<Setter Property="Padding" Value="{DynamicResource SmallMargins}"/>
		<Setter Property="Margin" Value="0" />
		<Setter Property="StrokeShape">
			<RoundRectangle CornerRadius="8" />
		</Setter>
		<Setter Property="Shadow">
			<Setter.Value>
				<Shadow Brush="{DynamicResource SurfaceShadowColorWL}" Offset="0,4" />
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="IconButtonSvg"
		   ApplyToDerivedTypes="False"
		   TargetType="controls:SvgView">
		<Setter Property="HeightRequest"
				Value="24" />
		<Setter Property="WidthRequest"
				Value="24" />
	</Style>

	<Style x:Key="IconButton" ApplyToDerivedTypes="False" TargetType="controls:SvgButton">
		<Setter Property="BorderStyle" Value="{DynamicResource IconButtonBorder}" />
		<Setter Property="SvgTintColor" Value="{DynamicResource ButtonNeutralNavButtonsContentActiveWL}" />
		<Setter Property="SvgAspect" Value="AspectFit"/>
		<Setter Property="SvgStyle" Value="{DynamicResource IconButtonSvg}" />
		<Setter Property="LabelStyle" Value="{DynamicResource DurationLabel}"/>
	</Style>

	<Style x:Key="NeuroIconButton" ApplyToDerivedTypes="True" TargetType="controls:SvgButton">
		<Setter Property="BorderStyle" Value="{DynamicResource NeuroIconButtonBorder}"/>
		<Setter Property="SvgTintColor" Value="{DynamicResource ContentAccessWL}"/>
		<Setter Property="SvgStyle" Value="{DynamicResource NeuroIconButtonSvg}"/>
	</Style>

	<Style x:Key="NeuroIconButtonDisabled" BasedOn="{StaticResource NeuroIconButton}" TargetType="controls:SvgButton">
		<Setter Property="BorderStyle" Value="{DynamicResource NeuroIconButtonBorderDisabled}"/>
		<Setter Property="SvgTintColor" Value="{DynamicResource ButtonUniversalContentInactiveWL}"/>
	</Style>

	<Style x:Key="NeuroIconButtonSvg" ApplyToDerivedTypes="False" TargetType="controls:SvgView">
		<Setter Property="HeightRequest" Value="32"/>
		<Setter Property="WidthRequest" Value="32"/>
		<Setter Property="HorizontalOptions" Value="Center"/>
		<Setter Property="VerticalOptions" Value="Center"/>
	</Style>

	<Style x:Key="NeuroIconButtonBorder" ApplyToDerivedTypes="True" TargetType="Border">
		<Setter Property="BackgroundColor" Value="{DynamicResource BrandColorsNeuroAccessa20WL}"/>
		<Setter Property="HeightRequest" Value="64"/>
		<Setter Property="WidthRequest" Value="64"/>
		<Setter Property="StrokeShape" Value="RoundRectangle 8"/>
	</Style>

	<Style x:Key="NeuroIconButtonBorderDisabled" TargetType="Border" BasedOn="{StaticResource NeuroIconButtonBorder}">
		<Setter Property="BackgroundColor" Value="{DynamicResource ButtonUniversalbgInactiveWL}"/>
	</Style>

	<!-- Expander Button Styles -->

	<Style x:Key="ExpanderButtonBorder"
		   ApplyToDerivedTypes="False"
		   TargetType="Border">
		<Setter Property="BackgroundColor"
				Value="Transparent" />
		<Setter Property="Padding">
			<Thickness Right="{StaticResource MediumSpacing}"
					   Bottom="{StaticResource MediumSpacing}" />
		</Setter>
	</Style>

	<Style x:Key="ExpanderButtonPath"
		   ApplyToDerivedTypes="False"
		   TargetType="Path">
		<Setter Property="WidthRequest"
				Value="12" />
		<Setter Property="HeightRequest"
				Value="12" />
		<Setter Property="Fill"
				Value="{DynamicResource ContentPrimaryWL}" />
	</Style>

	<Style x:Key="ExpanderButton"
		   ApplyToDerivedTypes="False"
		   TargetType="controls:ImageButton">
		<Setter Property="HorizontalOptions"
				Value="Center" />
		<Setter Property="VerticalOptions"
				Value="Center" />
		<Setter Property="BorderStyle"
				Value="{DynamicResource ExpanderButtonBorder}" />
		<Setter Property="PathStyle"
				Value="{DynamicResource ExpanderButtonPath}" />
	</Style>


	<!-- TextButton Styles -->

	<Style ApplyToDerivedTypes="True"
		   TargetType="Border"
		   x:Key="TransparentTextButtonBorder">
		<Setter Property="Background"
				Value="{DynamicResource ButtonAccessSecondarybgWL}" />
		<Setter Property="StrokeShape"
				Value="RoundRectangle 8" />
		<Setter Property="Stroke"
				Value="{DynamicResource ButtonAccessSecondaryStrokeWL}" />
		<Setter Property="Padding"
				Value="{DynamicResource ButtonMediumMargins}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="Background"
									Value="{DynamicResource ButtonAccessSecondarybgWL}" />
							<Setter Property="Stroke"
									Value="{DynamicResource ButtonAccessSecondaryStrokeWL}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Background"
									Value="{DynamicResource ButtonUniversalbgInactiveWL}" />
							<Setter Property="Stroke"
									Value="Transparent" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="TransparentTextButtonLabel"
		   TargetType="Label"
		   BaseResourceKey="BoldItemTitleLabel">
		<Setter Property="TextColor"
				Value="{DynamicResource ButtonAccessSecondaryContentWL}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="TextColor"
									Value="{DynamicResource ButtonAccessSecondaryContentWL}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor"
									Value="{DynamicResource ButtonUniversalContentInactiveWL}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>
	<Style x:Key="TransparentTextButton"
		   ApplyToDerivedTypes="False"
		   TargetType="controls:TextButton">
		<Setter Property="BorderStyle"
				Value="{DynamicResource TransparentTextButtonBorder}" />
		<Setter Property="LabelStyle"
				Value="{DynamicResource TransparentTextButtonLabel}" />
	</Style>

	<Style x:Key="FilledTextButtonBorder"
		   ApplyToDerivedTypes="False"
		   TargetType="Border">
		<Setter Property="BackgroundColor"
				Value="{DynamicResource ButtonAccessPrimarybgWL}" />
		<Setter Property="Stroke"
				Value="Transparent" />
		<Setter Property="Padding"
				Value="{DynamicResource ButtonMediumMargins}" />
		<Setter Property="StrokeShape">
			<RoundRectangle CornerRadius="8" />
		</Setter>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BackgroundColor"
									Value="{DynamicResource ButtonAccessPrimarybgWL}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BackgroundColor"
									Value="{DynamicResource ButtonUniversalbgInactiveWL}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledTextButtonLabel"
		   ApplyToDerivedTypes="False"
		   BaseResourceKey="BoldItemTitleLabel"
		   TargetType="Label">
		<Setter Property="TextColor"
				Value="{DynamicResource ButtonAccessPrimaryContentWL}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="TextColor"
									Value="{DynamicResource ButtonAccessPrimaryContentWL}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor"
									Value="{DynamicResource ButtonUniversalContentInactiveWL}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledTextButton"
		   ApplyToDerivedTypes="False"
		   TargetType="controls:TextButton">
		<Setter Property="BorderStyle"
				Value="{DynamicResource FilledTextButtonBorder}" />
		<Setter Property="LabelStyle"
				Value="{DynamicResource FilledTextButtonLabel}" />
	</Style>

	<Style x:Key="OutlinedTextButtonBorder"
		   ApplyToDerivedTypes="False"
		   TargetType="Border">
		<Setter Property="BackgroundColor"
				Value="{DynamicResource ButtonNeutralSecondarybg}" />
		<Setter Property="Stroke"
				Value="{DynamicResource ButtonNeutralSecondaryStroke}" />
		<Setter Property="Padding"
				Value="{DynamicResource ButtonMediumMargins}" />
		<Setter Property="StrokeShape">
			<RoundRectangle CornerRadius="{DynamicResource SmallCornerRadius}" />
		</Setter>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BackgroundColor"
									Value="{DynamicResource ButtonNeutralSecondarybg}" />
							<Setter Property="Stroke"
									Value="{DynamicResource ButtonNeutralSecondaryStroke}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BackgroundColor"
									Value="{DynamicResource ButtonUniversalbgInactiveWL}" />
							<Setter Property="Stroke"
									Value="{DynamicResource ButtonUniversalbgInactiveWL}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<!-- Filled Decline Button -->
	<Style x:Key="FilledTextButtonDeclineBorder"
		   ApplyToDerivedTypes="False"
		   TargetType="Border">
		<Setter Property="BackgroundColor"
				Value="{DynamicResource ButtonDangerPrimarybgWL}" />
		<Setter Property="Stroke"
				Value="Transparent" />
		<Setter Property="Padding"
				Value="{DynamicResource ButtonMediumMargins}" />
		<Setter Property="StrokeShape">
			<RoundRectangle CornerRadius="8" />
		</Setter>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BackgroundColor"
									Value="{DynamicResource ButtonDangerPrimarybgWL}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BackgroundColor"
									Value="{DynamicResource ButtonUniversalbgInactiveWL}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledTextButtonDeclineLabel"
		   ApplyToDerivedTypes="False"
		   BaseResourceKey="BoldItemTitleLabel"
		   TargetType="Label">
		<Setter Property="TextColor"
				Value="{DynamicResource ButtonDangerPrimaryContentWL}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="TextColor"
									Value="{DynamicResource ButtonDangerPrimaryContentWL}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor"
									Value="{DynamicResource ButtonUniversalContentInactiveWL}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledTextButtonDecline"
		   ApplyToDerivedTypes="False"
		   TargetType="controls:TextButton">
		<Setter Property="BorderStyle"
				Value="{DynamicResource FilledTextButtonDeclineBorder}" />
		<Setter Property="LabelStyle"
				Value="{DynamicResource FilledTextButtonDeclineLabel}" />
	</Style>
	<!-- End -->

	<Style x:Key="OutlinedTextButtonLabel"
		   ApplyToDerivedTypes="False"
		   BaseResourceKey="BoldItemTitleLabel"
		   TargetType="Label">
		<Setter Property="TextColor"
				Value="{DynamicResource ButtonNeutralSecondaryContent}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="TextColor"
									Value="{DynamicResource ButtonNeutralSecondaryContent}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor"
									Value="{DynamicResource ButtonUniversalContentInactiveWL}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="OutlinedTextButton"
		   ApplyToDerivedTypes="False"
		   TargetType="controls:TextButton">
		<Setter Property="BorderStyle"
				Value="{DynamicResource OutlinedTextButtonBorder}" />
		<Setter Property="LabelStyle"
				Value="{DynamicResource OutlinedTextButtonLabel}" />
	</Style>

	<Style x:Key="OutlinedImageButtonBorder"
		   ApplyToDerivedTypes="False"
		   TargetType="Border">
		<Setter Property="BackgroundColor"
				Value="Transparent" />
		<Setter Property="Stroke"
				Value="{DynamicResource ButtonNeutralPrimarybg}" />
		<Setter Property="StrokeThickness"
				Value="{DynamicResource MediumStrokeThickness}" />
		<Setter Property="Padding"
				Value="{DynamicResource MediumMargins}" />
	</Style>

	<Style x:Key="OutlinedImageButtonPath"
		   ApplyToDerivedTypes="False"
		   TargetType="Path">
		<Setter Property="Fill"
				Value="{DynamicResource ButtonNeutralPrimarybg}" />
	</Style>

	<Style x:Key="OutlinedImageButton"
		   ApplyToDerivedTypes="False"
		   TargetType="controls:ImageButton">
		<Setter Property="BorderStyle"
				Value="{DynamicResource OutlinedImageButtonBorder}" />
		<Setter Property="PathStyle"
				Value="{DynamicResource OutlinedImageButtonPath}" />
	</Style>
</ResourceDictionary>
