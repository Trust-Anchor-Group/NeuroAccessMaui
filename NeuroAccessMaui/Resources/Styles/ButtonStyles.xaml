<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
						  xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
						  xmlns:controls="clr-namespace:NeuroAccessMaui.UI.Controls">

	<!-- Common -->
	<Style x:Key="ButtonBorderBase" ApplyToDerivedTypes="True" TargetType="Border">
		<Setter Property="Stroke" Value="Transparent"/>
		<Setter Property="Padding" Value="{StaticResource ButtonMediumMargins}" />
		<Setter Property="StrokeShape">
			<RoundRectangle CornerRadius="{StaticResource MediumCornerRadius}" />
		</Setter>
	</Style>

	<Style x:Key="ButtonDisabledBorder" TargetType="Border" BasedOn="{StaticResource ButtonBorderBase}">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource GrayInactiveLight}, Dark={StaticResource GrayInactiveDark}}" />
	</Style>

	<Style x:Key="ButtonDisabledLabel" TargetType="Label">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OffBlack50Light}, Dark={StaticResource OffWhite30Dark}}" />
	</Style>

	<Style x:Key="PathDisabled" TargetType="Path">
		<Setter Property="Fill" Value="{AppThemeBinding Light={StaticResource OffBlack50Light}, Dark={StaticResource OffWhite30Dark}}" />
	</Style>

	<Style x:Key="ButtonLabelBase" ApplyToDerivedTypes="True" TargetType="Label">
		<Setter Property="FontFamily" Value="SpaceGroteskBold" />
	</Style>

	<!-- Primary -->
	<Style x:Key="PrimaryButtonActiveBorder" TargetType="Border" BasedOn="{StaticResource ButtonBorderBase}">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource AccentActiveLight}, Dark={StaticResource AccentActiveDark}}" />
	</Style>

	<Style x:Key="PrimaryButtonActiveLabel" TargetType="Label" BasedOn="{StaticResource ButtonLabelBase}">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OffWhiteLight}, Dark={StaticResource OffWhiteDark}}" />
	</Style>

	<Style x:Key="PrimaryPath" TargetType="Path">
		<Setter Property="Fill" Value="{AppThemeBinding Light={StaticResource OffWhiteLight}, Dark={StaticResource OffWhiteDark}}" />
	</Style>

	<Style x:Key="PrimaryButton" TargetType="controls:TextButton">
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BorderStyle" Value="{StaticResource PrimaryButtonActiveBorder}" />
							<Setter Property="LabelStyle" Value="{StaticResource PrimaryButtonActiveLabel}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BorderStyle" Value="{StaticResource ButtonDisabledBorder}" />
							<Setter Property="LabelStyle" Value="{StaticResource ButtonDisabledLabel}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<!-- Secondary -->
	<Style x:Key="SecondaryButtonActiveBorder" TargetType="Border" BasedOn="{StaticResource ButtonBorderBase}">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Accent20Light}, Dark={StaticResource Elevation1BackgroundDark}}" />
	</Style>

	<Style x:Key="SecondaryButtonActiveLabel" TargetType="Label" BasedOn="{StaticResource ButtonLabelBase}">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ButtonAccessTertiaryContentWLLight}, Dark={StaticResource ButtonAccessTertiaryContentWLDark}}" />
	</Style>

	<Style x:Key="SecondaryPath" TargetType="Path">
		<Setter Property="Fill" Value="{AppThemeBinding Light={StaticResource AccentActiveLight}, Dark={StaticResource OffWhiteDark}}" />
	</Style>

	<Style x:Key="SecondaryButton" TargetType="controls:TextButton">
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BorderStyle" Value="{StaticResource SecondaryButtonActiveBorder}" />
							<Setter Property="LabelStyle" Value="{StaticResource SecondaryButtonActiveLabel}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BorderStyle" Value="{StaticResource ButtonDisabledBorder}" />
							<Setter Property="LabelStyle" Value="{StaticResource ButtonDisabledLabel}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="SecondaryImageButton" TargetType="controls:ImageButton">
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BorderStyle" Value="{StaticResource SecondaryButtonActiveBorder}" />
							<Setter Property="PathStyle" Value="{StaticResource SecondaryPath}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BorderStyle" Value="{StaticResource ButtonDisabledBorder}" />
							<Setter Property="PathStyle" Value="{StaticResource SecondaryPath}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<!-- Tertiary -->
	<Style x:Key="TertiaryButtonActiveBorder" TargetType="Border" BasedOn="{StaticResource ButtonBorderBase}">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource WhiteLight}, Dark={StaticResource BackgroundOffBlackDark}}" />
	</Style>

	<Style x:Key="TertiaryButtonActiveLabel" TargetType="Label">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource AccentActiveLight}, Dark={StaticResource AccentActiveDark}}" />
	</Style>

	<Style x:Key="TertiaryPath" TargetType="Path">
		<Setter Property="Fill" Value="{AppThemeBinding Light={StaticResource AccentActiveLight}, Dark={StaticResource AccentActiveDark}}" />
	</Style>
	
	<Style x:Key="TertiaryButton" TargetType="controls:TextButton">
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BorderStyle" Value="{StaticResource TertiaryButtonActiveBorder}" />
							<Setter Property="LabelStyle" Value="{StaticResource TertiaryButtonActiveLabel}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BorderStyle" Value="{StaticResource ButtonDisabledBorder}" />
							<Setter Property="LabelStyle" Value="{StaticResource ButtonDisabledLabel}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<!-- Gray -->
	<Style x:Key="GrayButtonActiveBorder" TargetType="Border" BasedOn="{StaticResource ButtonBorderBase}">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource ButtonBackgroundLight}, Dark={StaticResource ButtonBackgroundDark}}" />
	</Style>

	<Style x:Key="GrayButtonActiveLabel" TargetType="Label">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OffWhiteLight}, Dark={StaticResource OffWhiteDark}}" />
	</Style>

	<Style x:Key="GrayPath" TargetType="Path">
		<Setter Property="Fill" Value="{AppThemeBinding Light={StaticResource OffWhiteLight}, Dark={StaticResource OffWhiteDark}}" />
	</Style>
	
	<Style x:Key="GrayButton" TargetType="controls:TextButton">
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BorderStyle" Value="{StaticResource GrayButtonActiveBorder}" />
							<Setter Property="LabelStyle" Value="{StaticResource GrayButtonActiveLabel}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BorderStyle" Value="{StaticResource ButtonDisabledBorder}" />
							<Setter Property="LabelStyle" Value="{StaticResource ButtonDisabledLabel}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<!-- Red -->
	<Style x:Key="RedButtonActiveBorder" TargetType="Border" BasedOn="{StaticResource ButtonBorderBase}">
		<Setter Property="Stroke" Value="{AppThemeBinding Light='Transparent', Dark={StaticResource RedErrorDark}}"/>
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Red20WarningLight}, Dark={StaticResource Elevation2BackgroundDark}}" />
	</Style>

	<Style x:Key="RedButtonActiveLabel" TargetType="Label">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource RedWarningLight}, Dark={StaticResource RedErrorDark}}" />
	</Style>

	<Style x:Key="RedPath" TargetType="Path">
		<Setter Property="Fill" Value="{AppThemeBinding Light={StaticResource RedWarningLight}, Dark={StaticResource RedErrorDark}}" />
	</Style>
	
	<Style x:Key="RedButton" TargetType="controls:TextButton">
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BorderStyle" Value="{StaticResource RedButtonActiveBorder}" />
							<Setter Property="LabelStyle" Value="{StaticResource RedButtonActiveLabel}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BorderStyle" Value="{StaticResource ButtonDisabledBorder}" />
							<Setter Property="LabelStyle" Value="{StaticResource ButtonDisabledLabel}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<!-- Old -->
	<!-- Template Styles -->
	<Style ApplyToDerivedTypes="True" TargetType="Border" x:Key="FilledTemplateButtonBorder">
		<Setter Property="Background" Value="{AppThemeBinding Light={StaticResource ButtonAccessPrimarybgWLLight}, Dark={StaticResource ButtonAccessPrimarybgWLDark}}" />
		<Setter Property="StrokeShape" Value="RoundRectangle 8" />
		<Setter Property="Padding" Value="{StaticResource SmallMargins}" />
		<Setter Property="Margin" Value="{StaticResource SmallMargins}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Background" Value="{AppThemeBinding Light={StaticResource ButtonUniversalbgInactiveWLLight}, Dark={StaticResource ButtonUniversalbgInactiveWLDark}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledTemplateButtonLabel" TargetType="Label" BasedOn="{StaticResource BoldItemTitleLabel}">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ButtonAccessPrimaryContentWLLight}, Dark={StaticResource ButtonAccessPrimaryContentWLDark}}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ButtonUniversalContentInactiveWLLight}, Dark={StaticResource ButtonUniversalContentInactiveWLDark}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledTemplateButtonPath" ApplyToDerivedTypes="False" TargetType="Path">
		<Setter Property="Stroke" Value="Transparent" />
		<Setter Property="StrokeMiterLimit" Value="10" />
		<Setter Property="StrokeThickness" Value="{StaticResource ThinStrokeThickness}" />
		<Setter Property="Fill" Value="{AppThemeBinding Light={StaticResource ButtonAccessPrimaryContentWLLight}, Dark={StaticResource ButtonAccessPrimaryContentWLDark}}"/>
	</Style>

	<Style ApplyToDerivedTypes="True" TargetType="Border" x:Key="TransparentTemplateButtonBorder">
		<Setter Property="Background" Value="{AppThemeBinding Light={StaticResource ButtonAccessSecondarybgWLLight}, Dark={StaticResource ButtonAccessSecondarybgWLDark}}" />
		<Setter Property="StrokeShape" Value="RoundRectangle 8" />
		<Setter Property="Padding" Value="{StaticResource SmallMargins}" />
		<Setter Property="Margin" Value="{StaticResource SmallMargins}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Background" Value="{AppThemeBinding Light={StaticResource ButtonUniversalbgInactiveWLLight}, Dark={StaticResource ButtonUniversalbgInactiveWLDark}}" />
							<Setter Property="Stroke" Value="Transparent"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="TransparentTemplateButtonLabel" TargetType="Label" BasedOn="{StaticResource BoldItemTitleLabel}">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ButtonAccessSecondaryContentWLLight}, Dark={StaticResource ButtonAccessSecondaryContentWLDark}}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ButtonUniversalContentInactiveWLLight}, Dark={StaticResource ButtonUniversalContentInactiveWLDark}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="TransparentTemplateButtonPath" ApplyToDerivedTypes="False" TargetType="Path">
		<Setter Property="Stroke" Value="Transparent" />
		<Setter Property="StrokeMiterLimit" Value="10" />
		<Setter Property="StrokeThickness" Value="{StaticResource ThinStrokeThickness}" />
		<Setter Property="Fill" Value="{AppThemeBinding Light={StaticResource ButtonAccessSecondaryContentWLLight}, Dark={StaticResource ButtonAccessSecondaryContentWLDark}}"/>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Fill" Value="{AppThemeBinding Light={StaticResource ButtonUniversalContentInactiveWLLight}, Dark={StaticResource ButtonUniversalContentInactiveWLDark}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>


	<!-- ImageOnly Styles -->
	<Style x:Key="ImageOnlyButtonBorder" ApplyToDerivedTypes="False" TargetType="Border">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource ButtonNeutralNavButtonsbgActiveWLLight}, Dark={StaticResource ButtonNeutralNavButtonsbgActiveWLDark}}" />
		<Setter Property="Padding" Value="{StaticResource SmallSpacing}"/>
		<Setter Property="HorizontalOptions" Value="Center"/>
		<Setter Property="VerticalOptions" Value="Center"/>
		<Setter Property="StrokeShape" Value="RoundRectangle 8"/>
		<Setter Property="HeightRequest" Value="40"/>
		<Setter Property="WidthRequest" Value="40"/>
		<Setter Property="Shadow">
			<Setter.Value>
				<Shadow Brush="{AppThemeBinding Light={StaticResource SurfaceShadowColorWLLight}, Dark={StaticResource SurfaceShadowColorWLDark}}" Offset="0,4"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ImageOnlyButtonPath" ApplyToDerivedTypes="False" TargetType="Path">
		<Setter Property="Fill" Value="{AppThemeBinding Light={StaticResource ButtonNeutralNavButtonsContentActiveWLLight}, Dark={StaticResource ButtonNeutralNavButtonsContentActiveWLDark}}" />
		<Setter Property="WidthRequest" Value="24" />
		<Setter Property="HeightRequest" Value="24" />
	</Style>

	<Style x:Key="ImageOnlyButton" ApplyToDerivedTypes="False" TargetType="controls:ImageButton">
		<Setter Property="HorizontalOptions" Value="Start" />
		<Setter Property="VerticalOptions" Value="Start" />
		<Setter Property="BorderStyle" Value="{StaticResource ImageOnlyButtonBorder}" />
		<Setter Property="PathStyle" Value="{StaticResource ImageOnlyButtonPath}" />
	</Style>

	<Style x:Key="TransparentImageButtonBorder" ApplyToDerivedTypes="False" TargetType="Border">
		<Setter Property="BackgroundColor" Value="#33F5F6F7" />
		<Setter Property="Padding" Value="{StaticResource MediumMargins}" />
		<Setter Property="StrokeShape">
			<RoundRectangle CornerRadius="{StaticResource MediumCornerRadius}" />
		</Setter>
	</Style>

	<Style x:Key="TransparentImageButtonPath" ApplyToDerivedTypes="False" TargetType="Path">
		<Setter Property="Fill" Value="{StaticResource PrimaryBackgroundLight}" />
	</Style>

	<Style x:Key="TransparentImageButton" ApplyToDerivedTypes="False" TargetType="controls:ImageButton">
		<Setter Property="BorderStyle" Value="{StaticResource TransparentImageButtonBorder}" />
		<Setter Property="PathStyle" Value="{StaticResource TransparentImageButtonPath}" />
	</Style>

	<!-- Filled Image Button -->
	<Style x:Key="FilledImageButtonBorder" ApplyToDerivedTypes="False" TargetType="Border">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource EnabledFilledButtonBackgroundLight}, Dark={StaticResource EnabledFilledButtonBackgroundDark}}" />
		<Setter Property="Padding" Value="{StaticResource MediumMargins}" />
		<Setter Property="StrokeShape">
			<RoundRectangle CornerRadius="{StaticResource MediumCornerRadius}" />
		</Setter>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource ButtonUniversalbgInactiveWLLight}, Dark={StaticResource ButtonUniversalbgInactiveWLDark}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledImageButtonPath" ApplyToDerivedTypes="False" TargetType="Path">
		<Setter Property="Fill" Value="{StaticResource PrimaryBackgroundLight}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Fill" Value="{AppThemeBinding Light={StaticResource ButtonUniversalContentInactiveWLLight}, Dark={StaticResource ButtonUniversalContentInactiveWLDark}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledImageButton" ApplyToDerivedTypes="False" TargetType="controls:ImageButton">
		<Setter Property="BorderStyle" Value="{StaticResource FilledImageButtonBorder}" />
		<Setter Property="PathStyle" Value="{StaticResource FilledImageButtonPath}" />
	</Style>

	<!-- Back Button -->
	<Style x:Key="IconButtonBorder" ApplyToDerivedTypes="False" TargetType="Border">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource ButtonNeutralNavButtonsbgActiveWLLight}, Dark={StaticResource ButtonNeutralNavButtonsbgActiveWLDark}}"/>
		<Setter Property="WidthRequest" Value="40"/>
		<Setter Property="HeightRequest" Value="40"/>
		<Setter Property="HorizontalOptions" Value="Start"/>
		<Setter Property="StrokeShape" Value="RoundRectangle 8" />
		<Setter Property="Shadow">
			<Setter.Value>
				<Shadow Brush="{AppThemeBinding Light={StaticResource SurfaceShadowColorWLLight}, Dark={StaticResource SurfaceShadowColorWLDark}}" Offset="0,4"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="IconButtonPath" ApplyToDerivedTypes="False" TargetType="Path">
		<Setter Property="Fill" Value="{AppThemeBinding Light={StaticResource ButtonNeutralContentPressedLight}, Dark={StaticResource ButtonNeutralContentPressedDark}}"/>
		<Setter Property="WidthRequest" Value="24"/>
		<Setter Property="HeightRequest" Value="24"/>
	</Style>

	<Style x:Key="IconButton" ApplyToDerivedTypes="False" TargetType="controls:ImageButton">
		<Setter Property="BorderStyle" Value="{StaticResource IconButtonBorder}" />
		<Setter Property="PathStyle" Value="{StaticResource IconButtonPath}" />
	</Style>

	<!-- Expander Button Styles -->

	<Style x:Key="ExpanderButtonBorder" ApplyToDerivedTypes="False" TargetType="Border">
		<Setter Property="BackgroundColor" Value="Transparent" />
		<Setter Property="Padding">
			<Thickness Right="{StaticResource MediumSpacing}" Bottom="{StaticResource MediumSpacing}" />
		</Setter>
	</Style>

	<Style x:Key="ExpanderButtonPath" ApplyToDerivedTypes="False" TargetType="Path">
		<Setter Property="WidthRequest" Value="12" />
		<Setter Property="HeightRequest" Value="12" />
		<Setter Property="Fill" Value="{AppThemeBinding Light={StaticResource PrimaryForegroundLight}, Dark={StaticResource PrimaryForegroundDark}}" />
	</Style>

	<Style x:Key="ExpanderButton" ApplyToDerivedTypes="False" TargetType="controls:ImageButton">
		<Setter Property="HorizontalOptions" Value="Center" />
		<Setter Property="VerticalOptions" Value="Center" />
		<Setter Property="BorderStyle" Value="{StaticResource ExpanderButtonBorder}" />
		<Setter Property="PathStyle" Value="{StaticResource ExpanderButtonPath}" />
	</Style>


	<!-- TextButton Styles -->

	<Style ApplyToDerivedTypes="True" TargetType="Border" x:Key="TransparentTextButtonBorder">
		<Setter Property="Background" Value="{AppThemeBinding Light={StaticResource ButtonAccessSecondarybgWLLight}, Dark={StaticResource ButtonAccessSecondarybgWLDark}}" />
		<Setter Property="StrokeShape" Value="RoundRectangle 8" />
		<Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource ButtonAccessSecondaryStrokeWLLight}, Dark={StaticResource ButtonAccessSecondarybgWLDark}}"/>
		<Setter Property="Padding" Value="{StaticResource ButtonMediumMargins}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Background" Value="{AppThemeBinding Light={StaticResource ButtonUniversalbgInactiveWLLight}, Dark={StaticResource ButtonUniversalbgInactiveWLDark}}" />
							<Setter Property="Stroke" Value="Transparent"/>
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="TransparentTextButtonLabel" TargetType="Label" BasedOn="{StaticResource BoldItemTitleLabel}">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ButtonAccessSecondaryContentWLLight}, Dark={StaticResource ButtonAccessSecondaryContentWLDark}}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ButtonUniversalContentInactiveWLLight}, Dark={StaticResource ButtonUniversalContentInactiveWLDark}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>
	<Style x:Key="TransparentTextButton" ApplyToDerivedTypes="False" TargetType="controls:TextButton">
		<Setter Property="BorderStyle" Value="{StaticResource TransparentTextButtonBorder}" />
		<Setter Property="LabelStyle" Value="{StaticResource TransparentTextButtonLabel}" />
	</Style>

	<Style x:Key="FilledTextButtonBorder" ApplyToDerivedTypes="False" TargetType="Border">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource ButtonAccessPrimarybgWLLight}, Dark={StaticResource ButtonAccessPrimarybgWLDark}}" />
		<Setter Property="Stroke" Value="Transparent" />
		<Setter Property="Padding" Value="{StaticResource ButtonMediumMargins}" />
		<Setter Property="StrokeShape">
			<RoundRectangle CornerRadius="8" />
		</Setter>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource ButtonUniversalbgInactiveWLLight}, Dark={StaticResource ButtonUniversalbgInactiveWLDark}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledTextButtonLabel" ApplyToDerivedTypes="False" BasedOn="{StaticResource BoldItemTitleLabel}" TargetType="Label">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ButtonAccessPrimaryContentWLLight}, Dark={StaticResource ButtonAccessPrimaryContentWLDark}}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ButtonUniversalContentInactiveWLLight}, Dark={StaticResource ButtonUniversalContentInactiveWLDark}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledTextButton" ApplyToDerivedTypes="False" TargetType="controls:TextButton">
		<Setter Property="BorderStyle" Value="{StaticResource FilledTextButtonBorder}" />
		<Setter Property="LabelStyle" Value="{StaticResource FilledTextButtonLabel}" />
	</Style>

	<Style x:Key="OutlinedTextButtonBorder" ApplyToDerivedTypes="False" TargetType="Border">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource EnabledOutlinedButtonBackgroundLight}, Dark={StaticResource EnabledOutlinedButtonBackgroundDark}}" />
		<Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource EnabledOutlinedButtonForegroundLight}, Dark={StaticResource EnabledOutlinedButtonForegroundDark}}" />
		<Setter Property="Padding" Value="{StaticResource ButtonMediumMargins}" />
		<Setter Property="StrokeShape">
			<RoundRectangle CornerRadius="{StaticResource SmallCornerRadius}" />
		</Setter>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource DisabledOutlinedButtonBackgroundLight}, Dark={StaticResource DisabledOutlinedButtonBackgroundDark}}" />
							<Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource DisabledOutlinedButtonForegroundLight}, Dark={StaticResource DisabledOutlinedButtonForegroundDark}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<!-- Filled Decline Button -->
	<Style x:Key="FilledTextButtonDeclineBorder" ApplyToDerivedTypes="False" TargetType="Border">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Red20WarningLight}, Dark={StaticResource Red20WarningDark}}" />
		<Setter Property="Stroke" Value="Transparent" />
		<Setter Property="Padding" Value="{StaticResource ButtonMediumMargins}" />
		<Setter Property="StrokeShape">
			<RoundRectangle CornerRadius="{StaticResource SmallCornerRadius}" />
		</Setter>
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource DisabledFilledButtonForegroundLight}, Dark={StaticResource DisabledFilledButtonForegroundDark}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledTextButtonDeclineLabel" ApplyToDerivedTypes="False" BasedOn="{StaticResource BoldItemTitleLabel}" TargetType="Label">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource RedWarningLight}, Dark={StaticResource RedWarningDark}}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource DisabledFilledButtonForegroundLight}, Dark={StaticResource DisabledFilledButtonForegroundDark}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledTextButtonDecline" ApplyToDerivedTypes="False" TargetType="controls:TextButton">
		<Setter Property="BorderStyle" Value="{StaticResource FilledTextButtonDeclineBorder}" />
		<Setter Property="LabelStyle" Value="{StaticResource FilledTextButtonDeclineLabel}" />
	</Style>
	<!-- End -->
	
	<Style x:Key="OutlinedTextButtonLabel" ApplyToDerivedTypes="False" BasedOn="{StaticResource BoldItemTitleLabel}" TargetType="Label">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource EnabledOutlinedButtonForegroundLight}, Dark={StaticResource EnabledOutlinedButtonForegroundDark}}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource DisabledOutlinedButtonForegroundLight}, Dark={StaticResource DisabledOutlinedButtonForegroundDark}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="OutlinedTextButton" ApplyToDerivedTypes="False" TargetType="controls:TextButton">
		<Setter Property="BorderStyle" Value="{StaticResource OutlinedTextButtonBorder}" />
		<Setter Property="LabelStyle" Value="{StaticResource OutlinedTextButtonLabel}" />
	</Style>

	<Style x:Key="OutlinedImageButtonBorder" ApplyToDerivedTypes="False" TargetType="Border">
		<Setter Property="BackgroundColor" Value="Transparent" />
		<Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource ButtonNeutralPrimarybgLight}, Dark={StaticResource ButtonNeutralPrimarybgDark}}" />
		<Setter Property="StrokeThickness" Value="{StaticResource MediumStrokeThickness}" />
		<Setter Property="Padding" Value="{StaticResource MediumMargins}" />
	</Style>

	<Style x:Key="OutlinedImageButtonPath" ApplyToDerivedTypes="False" TargetType="Path">
		<Setter Property="Fill" Value="{AppThemeBinding Light={StaticResource ButtonNeutralPrimarybgLight}, Dark={StaticResource ButtonNeutralPrimarybgDark}}" />
	</Style>

	<Style x:Key="OutlinedImageButton" ApplyToDerivedTypes="False" TargetType="controls:ImageButton">
		<Setter Property="BorderStyle" Value="{StaticResource OutlinedImageButtonBorder}" />
		<Setter Property="PathStyle" Value="{StaticResource OutlinedImageButtonPath}" />
	</Style>

	<Style x:Key="FilledTextButtonBorderNoRoundedCorners" ApplyToDerivedTypes="False" TargetType="Border">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource EnabledFilledButtonBackgroundLight}, Dark={StaticResource EnabledFilledButtonBackgroundDark}}" />
		<Setter Property="Stroke" Value="Transparent" />
		<Setter Property="Padding" Value="{StaticResource ButtonMediumMargins}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource DisabledFilledButtonBackgroundLight}, Dark={StaticResource DisabledFilledButtonBackgroundDark}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="FilledTextButtonNoRoundedCorners" ApplyToDerivedTypes="False" TargetType="controls:TextButton">
		<Setter Property="BorderStyle" Value="{StaticResource FilledTextButtonBorderNoRoundedCorners}" />
		<Setter Property="LabelStyle" Value="{StaticResource FilledTextButtonLabel}" />
	</Style>

	<Style x:Key="OutlinedTextButtonBorderNoRoundedCorners" ApplyToDerivedTypes="False" TargetType="Border">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource EnabledOutlinedButtonBackgroundLight}, Dark={StaticResource EnabledOutlinedButtonBackgroundDark}}" />
		<Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource EnabledOutlinedButtonForegroundLight}, Dark={StaticResource EnabledOutlinedButtonForegroundDark}}" />
		<Setter Property="Padding" Value="{StaticResource ButtonMediumMargins}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource DisabledOutlinedButtonBackgroundLight}, Dark={StaticResource DisabledOutlinedButtonBackgroundDark}}" />
							<Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource DisabledOutlinedButtonForegroundLight}, Dark={StaticResource DisabledOutlinedButtonForegroundDark}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style x:Key="OutlinedTextButtonNoRoundedCorners" ApplyToDerivedTypes="False" TargetType="controls:TextButton">
		<Setter Property="BorderStyle" Value="{StaticResource OutlinedTextButtonBorderNoRoundedCorners}" />
		<Setter Property="LabelStyle" Value="{StaticResource OutlinedTextButtonLabel}" />
	</Style>

	<Style x:Key="UnicodeCharacterButtonNoRoundedCorners" ApplyToDerivedTypes="False" TargetType="Button">
		<Setter Property="WidthRequest" Value="40" />
		<Setter Property="HeightRequest" Value="40" />
		<Setter Property="HorizontalOptions" Value="Center" />
		<Setter Property="VerticalOptions" Value="Center" />
		<Setter Property="CornerRadius" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource EnabledFilledButtonBackgroundLight}, Dark={StaticResource EnabledFilledButtonBackgroundDark}}" />
	</Style>
</ResourceDictionary>
