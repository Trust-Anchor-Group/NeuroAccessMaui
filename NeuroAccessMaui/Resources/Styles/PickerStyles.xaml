<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                    xmlns:ui="clr-namespace:NeuroAccessMaui.UI"
                    xmlns:controls="clr-namespace:NeuroAccessMaui.UI.Controls">

	<!-- Validation Label style common to composite input views -->
	<Style x:Key="RegularCompositeInputViewLabel" TargetType="Label" BasedOn="{StaticResource BoldItemTitleLabel}">
		<Setter Property="FontSize" Value="14" />
		<Setter Property="FontFamily" Value="SpaceGroteskSemiBold" />
		<Setter Property="LineBreakMode" Value="WordWrap" />
		<Setter Property="VerticalTextAlignment" Value="Center" />
		<Setter Property="HorizontalTextAlignment" Value="Start" />
	</Style>

	<!-- DatePicker style used within CompositeDatePicker -->
	<Style x:Key="RegularCompositeDatePickerPicker" TargetType="DatePicker">
		<Setter Property="FontFamily" Value="HaasGroteskRegular" />
		<Setter Property="FontSize" Value="18" />
		<Setter Property="BackgroundColor" Value="Transparent" />
	</Style>

	<!-- Picker style used within CompositePicker -->
	<Style x:Key="RegularCompositePickerPicker" TargetType="Picker">
		<Setter Property="FontFamily" Value="HaasGroteskRegular" />
		<Setter Property="FontSize" Value="18" />
		<Setter Property="BackgroundColor" Value="Transparent" />
	</Style>

	<!-- Label style used by CompositePicker and CompositeDatePicker -->
	<Style x:Key="RegularCompositePickerLabel" TargetType="Label" BasedOn="{StaticResource BoldItemTitleLabel}">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OffBlackLight}, Dark={StaticResource OffWhiteDark}}" />
		<Setter Property="FontSize" Value="15" />
		<Setter Property="FontFamily" Value="SpaceGroteskSemiBold" />
		<Setter Property="LineBreakMode" Value="WordWrap" />
		<Setter Property="VerticalTextAlignment" Value="Center" />
		<Setter Property="HorizontalTextAlignment" Value="Start" />
	</Style>

	<!-- CompositeDatePicker style -->
	<Style x:Key="RegularCompositeDatePicker" TargetType="controls:CompositeDatePicker" ApplyToDerivedTypes="True">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OffBlackLight}, Dark={StaticResource OffWhiteDark}}" />
		<Setter Property="PickerStyle" Value="{StaticResource RegularCompositeDatePickerPicker}" />
		<Setter Property="LabelStyle" Value="{StaticResource RegularCompositePickerLabel}" />
		<Setter Property="ValidationLabelStyle" Value="{StaticResource RegularCompositeInputViewLabel}" />
		<Setter Property="ValidationColor" Value="{AppThemeBinding Light={StaticResource RedWarningLight}, Dark={StaticResource RedWarningDark}}" />
		<Setter Property="BorderPadding" Value="{StaticResource EditMediumMargins}" />
		<Setter Property="BorderBackground" Value="{AppThemeBinding Light={StaticResource OffWhiteLight}, Dark={StaticResource PopUpElevation3Dark}}" />
		<Setter Property="BorderStroke" Value="Transparent" />
		<Setter Property="BorderStrokeShape">
			<Setter.Value>
				<RoundRectangle CornerRadius="8" />
			</Setter.Value>
		</Setter>
		<Setter Property="BorderShadow">
			<Setter.Value>
				<Shadow Offset="0,2" Radius="0" Opacity="1"
                        Brush="{AppThemeBinding Light={StaticResource OffBlack50Light}, Dark={StaticResource OffWhite30Dark}}"/>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger TargetType="controls:CompositeDatePicker" Property="IsValid" Value="False">
				<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource RedWarningLight}, Dark={StaticResource RedWarningDark}}" />
				<Setter Property="BorderShadow">
					<Setter.Value>
						<Shadow Offset="0,2" Radius="0" Opacity="1"
                                Brush="{AppThemeBinding Light={StaticResource RedWarningLight}, Dark={StaticResource RedWarningDark}}"/>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- CompositePicker style -->
	<Style x:Key="RegularCompositePicker" TargetType="controls:CompositePicker" ApplyToDerivedTypes="True">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource OffBlackLight}, Dark={StaticResource OffWhiteDark}}" />
		<Setter Property="PickerStyle" Value="{StaticResource RegularCompositePickerPicker}" />
		<Setter Property="LabelStyle" Value="{StaticResource RegularCompositePickerLabel}" />
		<Setter Property="ValidationLabelStyle" Value="{StaticResource RegularCompositeInputViewLabel}" />
		<Setter Property="ValidationColor" Value="{AppThemeBinding Light={StaticResource RedWarningLight}, Dark={StaticResource RedWarningDark}}" />
		<Setter Property="Padding" Value="{StaticResource SmallBottomMargins}" />
		<Setter Property="BorderPadding" Value="{StaticResource EditMediumMargins}" />
		<Setter Property="BorderBackground" Value="{AppThemeBinding Light={StaticResource OffWhiteLight}, Dark={StaticResource PopUpElevation3Dark}}" />
		<Setter Property="BorderStroke" Value="Transparent" />
		<Setter Property="BorderStrokeShape">
			<Setter.Value>
				<RoundRectangle CornerRadius="8" />
			</Setter.Value>
		</Setter>
		<Setter Property="BorderShadow">
			<Setter.Value>
				<Shadow Offset="0,2" Radius="0" Opacity="1"
                        Brush="{AppThemeBinding Light={StaticResource OffBlack50Light}, Dark={StaticResource OffWhite30Dark}}"/>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger TargetType="controls:CompositePicker" Property="IsValid" Value="False">
				<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource RedWarningLight}, Dark={StaticResource RedWarningDark}}" />
				<Setter Property="BorderShadow">
					<Setter.Value>
						<Shadow Offset="0,2" Radius="0" Opacity="1"
                                Brush="{AppThemeBinding Light={StaticResource RedWarningLight}, Dark={StaticResource RedWarningDark}}"/>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>
