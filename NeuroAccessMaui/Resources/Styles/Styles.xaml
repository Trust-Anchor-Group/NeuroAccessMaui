<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary
	xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
	xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
	xmlns:s="clr-namespace:System;assembly=mscorlib">

	<s:Double x:Key="SmallSpacing">
		8
	</s:Double>

	<s:Double x:Key="MediumSpacing">
		16
	</s:Double>

	<s:Double x:Key="LargeSpacing">
		24
	</s:Double>

	<s:Double x:Key="SmallCornerRadius">
		4
	</s:Double>

	<s:Double x:Key="MediumCornerRadius">
		8
	</s:Double>

	<s:Double x:Key="LargeCornerRadius">
		16
	</s:Double>

	<s:Double x:Key="ThinStrokeThickness">
		1
	</s:Double>

	<s:Double x:Key="MediumStrokeThickness">
		2
	</s:Double>

	<s:Double x:Key="BoldStrokeThickness">
		4
	</s:Double>

	<Thickness x:Key="SmallMargins">
		8
	</Thickness>

	<Thickness x:Key="MediumMargins">
		16
	</Thickness>

	<Thickness x:Key="LargeMargins">
		24
	</Thickness>

	<Thickness x:Key="ButtonThinMargins">
		16,8
	</Thickness>

	<Thickness x:Key="ButtonMediumMargins">
		24,12
	</Thickness>

	<OnPlatform x:Key="EditMediumMargins"
		x:TypeArguments="Thickness">
		<On
			Platform="Android"
			Value="16,0" />
		<On
			Platform="iOS"
			Value="16,12" />
	</OnPlatform>

	<!--
    <Style
		ApplyToDerivedTypes="True"
	TargetType="ActivityIndicator">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="IndicatorView">
        <Setter Property="IndicatorColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}"/>
        <Setter Property="SelectedIndicatorColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray100}}"/>
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="BoxView">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="Button">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Primary}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="14,10"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="CheckBox">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="DatePicker">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="Editor">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="Frame">
        <Setter Property="HasShadow" Value="False" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray950}}" />
        <Setter Property="CornerRadius" Value="8" />
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="ImageButton">
        <Setter Property="Opacity" Value="1" />
        <Setter Property="BorderColor" Value="Transparent"/>
        <Setter Property="BorderWidth" Value="0"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.5" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="Picker">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
        <Setter Property="TitleColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                            <Setter Property="TitleColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="ProgressBar">
        <Setter Property="ProgressColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="ProgressColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="RadioButton">
        <Setter Property="BackgroundColor" Value="Transparent"/>
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="RefreshView">
        <Setter Property="RefreshColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="SearchBar">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
        <Setter Property="PlaceholderColor" Value="{StaticResource Gray500}" />
        <Setter Property="CancelButtonColor" Value="{StaticResource Gray500}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                            <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="SearchHandler">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
        <Setter Property="PlaceholderColor" Value="{StaticResource Gray500}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                            <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="Slider">
        <Setter Property="MinimumTrackColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
        <Setter Property="MaximumTrackColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}" />
        <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="MinimumTrackColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}"/>
                            <Setter Property="MaximumTrackColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}"/>
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="SwipeItem">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="Switch">
        <Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
        <Setter Property="ThumbColor" Value="{StaticResource White}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="On">
                        <VisualState.Setters>
                            <Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource Secondary}, Dark={StaticResource Gray200}}" />
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Off">
                        <VisualState.Setters>
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray500}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
		ApplyToDerivedTypes="True"
	TargetType="TimePicker">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="Transparent"/>
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>	-->


	<Style
		ApplyToDerivedTypes="True"
		TargetType="SearchBar">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource NormalEditForegroundLight}, Dark={StaticResource NormalEditForegroundDark}}" />
		<Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource NormalEditPlaceholderLight}, Dark={StaticResource NormalEditPlaceholderDark}}" />
		<Setter Property="CancelButtonColor" Value="{AppThemeBinding Light={StaticResource EnabledFilledButtonBackgroundLight}, Dark={StaticResource EnabledFilledButtonBackgroundDark}}" />
		<Setter Property="BackgroundColor" Value="Transparent" />
		<Setter Property="FontFamily" Value="HaasGroteskRegular" />
		<Setter Property="FontSize" Value="18" />
		<!--
	<Setter Property="MinimumHeightRequest" Value="44"/>
	<Setter Property="MinimumWidthRequest" Value="44"/>
	<Setter Property="VisualStateManager.VisualStateGroups">
		<VisualStateGroupList>
			<VisualStateGroup x:Name="CommonStates">
				<VisualState x:Name="Normal" />
				<VisualState x:Name="Disabled">
					<VisualState.Setters>
						<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
						<Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateGroupList>
	</Setter>
	-->
	</Style>

	<Style
		ApplyToDerivedTypes="True"
		TargetType="Label">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryForegroundLight}, Dark={StaticResource PrimaryForegroundDark}}" />
		<Setter Property="BackgroundColor" Value="Transparent" />
		<Setter Property="LineBreakMode" Value="WordWrap" />
		<Setter Property="FontFamily" Value="HaasGroteskRegular" />
		<Setter Property="FontSize" Value="18" />
		<Setter Property="LineHeight" Value="1" />
	</Style>

	<Style x:Key="PageTitleLabelStyle"
		ApplyToDerivedTypes="False"
		TargetType="Label">
		<Setter Property="FontFamily" Value="SpaceGroteskBold" />
		<Setter Property="FontSize" Value="32" />
	</Style>

	<Style x:Key="SectionTitleLabelStyle"
		ApplyToDerivedTypes="False"
		TargetType="Label">
		<Setter Property="FontFamily" Value="HaasGroteskBold" />
		<Setter Property="FontSize" Value="14" />
	</Style>


	<Style x:Key="RegularItemTitleLabelStyle"
		ApplyToDerivedTypes="False"
		TargetType="Label">
		<Setter Property="HorizontalOptions" Value="Start" />
		<Setter Property="VerticalOptions" Value="Center" />
		<Setter Property="VerticalTextAlignment" Value="Center" />
		<Setter Property="HorizontalTextAlignment" Value="Center" />
		<Setter Property="LineBreakMode" Value="TailTruncation" />
	</Style>

	<Style x:Key="BoldItemTitleLabelStyle"
		ApplyToDerivedTypes="False"
		BasedOn="{StaticResource RegularItemTitleLabelStyle}"
		TargetType="Label">
		<Setter Property="FontFamily" Value="HaasGroteskBold" />
	</Style>

	<Style
		ApplyToDerivedTypes="True"
		TargetType="Page">
		<Setter Property="Padding" Value="0" />
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryBackgroundLight}, Dark={StaticResource PrimaryBackgroundDark}}" />
	</Style>

	<Style
		ApplyToDerivedTypes="True"
		TargetType="ContentView">
		<Setter Property="Padding" Value="0" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="VerticalOptions" Value="FillAndExpand" />
		<Setter Property="HorizontalOptions" Value="FillAndExpand" />
		<Setter Property="BackgroundColor" Value="Transparent" />
	</Style>

	<Style
		ApplyToDerivedTypes="True"
		TargetType="AbsoluteLayout">
		<Setter Property="VerticalOptions" Value="FillAndExpand" />
		<Setter Property="HorizontalOptions" Value="FillAndExpand" />
		<Setter Property="BackgroundColor" Value="Transparent" />
	</Style>

	<Style
		ApplyToDerivedTypes="True"
		TargetType="Grid">
		<Setter Property="Padding" Value="0" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="RowSpacing" Value="0" />
		<Setter Property="ColumnSpacing" Value="0" />
		<Setter Property="VerticalOptions" Value="FillAndExpand" />
		<Setter Property="HorizontalOptions" Value="FillAndExpand" />
		<Setter Property="BackgroundColor" Value="Transparent" />
	</Style>

	<Style
		ApplyToDerivedTypes="True"
		TargetType="StackLayout">
		<Setter Property="Padding" Value="0" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Spacing" Value="0" />
		<Setter Property="VerticalOptions" Value="FillAndExpand" />
		<Setter Property="HorizontalOptions" Value="FillAndExpand" />
		<Setter Property="BackgroundColor" Value="Transparent" />
	</Style>

	<Style
		ApplyToDerivedTypes="True"
		TargetType="VerticalStackLayout">
		<Setter Property="Padding" Value="0" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Spacing" Value="0" />
		<Setter Property="VerticalOptions" Value="FillAndExpand" />
		<Setter Property="HorizontalOptions" Value="FillAndExpand" />
		<Setter Property="BackgroundColor" Value="Transparent" />
	</Style>

	<Style
		ApplyToDerivedTypes="True"
		TargetType="HorizontalStackLayout">
		<Setter Property="Padding" Value="0" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="VerticalOptions" Value="FillAndExpand" />
		<Setter Property="HorizontalOptions" Value="FillAndExpand" />
		<Setter Property="BackgroundColor" Value="Transparent" />
	</Style>

	<Style
		ApplyToDerivedTypes="True"
		TargetType="Shell">
		<Setter Property="Shell.FlyoutBehavior" Value="Disabled" />
		<Setter Property="Shell.NavBarIsVisible" Value="False" />
		<Setter Property="Shell.NavBarHasShadow" Value="False" />
		<Setter Property="Shell.BackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryBackgroundLight}, Dark={StaticResource PrimaryBackgroundDark}}" />
		<Setter Property="Shell.TitleColor" Value="{AppThemeBinding Light={StaticResource PrimaryForegroundLight}, Dark={StaticResource PrimaryForegroundDark}}" />
		<!--
		<Setter Property="Shell.ForegroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryForegroundLight}, Dark={StaticResource PrimaryForegroundDark}}" />
		<Setter Property="Shell.DisabledColor" Value="{AppThemeBinding Light={StaticResource PrimaryForegroundLight}, Dark={StaticResource PrimaryForegroundDark}}" />
		<Setter Property="Shell.UnselectedColor" Value="{AppThemeBinding Light={StaticResource PrimaryForegroundLight}, Dark={StaticResource PrimaryForegroundDark}}" />
		<Setter Property="Shell.TabBarBackgroundColor" Value="{AppThemeBinding Light={StaticResource SecondaryBackgroundLight}, Dark={StaticResource SecondaryBackgroundDark}}" />
		<Setter Property="Shell.TabBarForegroundColor" Value="{AppThemeBinding Light={StaticResource SecondaryForegroundLight}, Dark={StaticResource SecondaryForegroundDark}}" />
		<Setter Property="Shell.TabBarTitleColor" Value="{AppThemeBinding Light={StaticResource SecondaryForegroundLight}, Dark={StaticResource SecondaryForegroundDark}}" />
		<Setter Property="Shell.TabBarUnselectedColor" Value="{AppThemeBinding Light={StaticResource SecondaryForegroundLight}, Dark={StaticResource SecondaryForegroundDark}}" />
		-->
	</Style>

	<Style
		ApplyToDerivedTypes="True"
		TargetType="NavigationPage">
		<Setter Property="BarBackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryBackgroundLight}, Dark={StaticResource PrimaryBackgroundDark}}" />
		<Setter Property="BarTextColor" Value="{AppThemeBinding Light={StaticResource PrimaryForegroundLight}, Dark={StaticResource PrimaryForegroundDark}}" />
		<Setter Property="IconColor" Value="{AppThemeBinding Light={StaticResource PrimaryForegroundLight}, Dark={StaticResource PrimaryForegroundDark}}" />
	</Style>

	<Style
		ApplyToDerivedTypes="True"
		TargetType="TabbedPage">
		<Setter Property="BarBackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryBackgroundLight}, Dark={StaticResource PrimaryBackgroundDark}}" />
		<Setter Property="BarTextColor" Value="{AppThemeBinding Light={StaticResource PrimaryForegroundLight}, Dark={StaticResource PrimaryForegroundDark}}" />
		<!--
		<Setter Property="UnselectedTabColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray950}}" />
		<Setter Property="SelectedTabColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
		-->
	</Style>

	<Style
		ApplyToDerivedTypes="True"
		TargetType="ListView">
		<Setter Property="Margin" Value="0" />
		<Setter Property="SelectionMode" Value="Single" />
		<Setter Property="VerticalScrollBarVisibility" Value="Never" />
		<Setter Property="HorizontalScrollBarVisibility" Value="Never" />
		<Setter Property="VerticalOptions" Value="FillAndExpand" />
		<Setter Property="HorizontalOptions" Value="FillAndExpand" />
		<Setter Property="BackgroundColor" Value="Transparent" />
	</Style>

	<Style
		ApplyToDerivedTypes="True"
		TargetType="CollectionView">
		<Setter Property="Margin" Value="0" />
		<Setter Property="ItemSizingStrategy" Value="MeasureFirstItem" />
		<Setter Property="SelectionMode" Value="Single" />
		<Setter Property="VerticalScrollBarVisibility" Value="Never" />
		<Setter Property="HorizontalScrollBarVisibility" Value="Never" />
		<Setter Property="VerticalOptions" Value="FillAndExpand" />
		<Setter Property="HorizontalOptions" Value="FillAndExpand" />
		<Setter Property="BackgroundColor" Value="Transparent" />
	</Style>

	<Style
		ApplyToDerivedTypes="True"
		TargetType="ScrollView">
		<Setter Property="Margin" Value="0" />
		<Setter Property="VerticalScrollBarVisibility" Value="Never" />
		<Setter Property="HorizontalScrollBarVisibility" Value="Never" />
		<Setter Property="VerticalOptions" Value="FillAndExpand" />
		<Setter Property="HorizontalOptions" Value="FillAndExpand" />
		<Setter Property="BackgroundColor" Value="Transparent" />
	</Style>

	<Style
		ApplyToDerivedTypes="True"
		TargetType="Border">
		<Setter Property="Stroke" Value="Transparent" />
		<Setter Property="StrokeThickness" Value="{StaticResource MediumStrokeThickness}" />
		<Setter Property="VerticalOptions" Value="FillAndExpand" />
		<Setter Property="HorizontalOptions" Value="FillAndExpand" />
		<Setter Property="BackgroundColor" Value="Transparent" />
	</Style>

	<Style x:Key="PopupGridStyle"
		ApplyToDerivedTypes="False"
		TargetType="Grid">
		<Setter Property="Padding" Value="{StaticResource SmallMargins}" />
		<Setter Property="HorizontalOptions" Value="Center" />
		<Setter Property="VerticalOptions" Value="Center" />
		<Setter Property="RowDefinitions" Value="auto" />
	</Style>

	<Style x:Key="PopupBorderStyle"
		ApplyToDerivedTypes="False"
		TargetType="Border">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource SecondaryBackgroundLight}, Dark={StaticResource SecondaryBackgroundDark}}" />
		<Setter Property="Padding" Value="{StaticResource LargeMargins}" />
		<Setter Property="StrokeShape">
			<RoundRectangle CornerRadius="{StaticResource MediumCornerRadius}" />
		</Setter>
		<Setter Property="Shadow">
			<Shadow />
		</Setter>
	</Style>

	<Style x:Key="InnerFrameBorderStyle"
		ApplyToDerivedTypes="False"
		TargetType="Border">
		<Setter Property="VerticalOptions" Value="Center" />
		<Setter Property="StrokeThickness" Value="0" />
		<Setter Property="StrokeShape">
			<Rectangle />
		</Setter>
	</Style>

	<Style x:Key="ItemOuterBorderStyle"
		ApplyToDerivedTypes="False"
		TargetType="Border">
		<Setter Property="Padding" Value="{StaticResource MediumMargins}" />
		<Setter Property="StrokeShape">
			<RoundRectangle CornerRadius="{StaticResource SmallCornerRadius}" />
		</Setter>
	</Style>

	<Style
		ApplyToDerivedTypes="True"
		TargetType="Shadow">
		<Setter Property="Radius" Value="16" />
		<Setter Property="Opacity" Value="0.8" />
		<Setter Property="Brush" Value="{StaticResource PrimaryBackgroundDark}" />
		<Setter Property="Offset" Value="0,0" />
	</Style>

</ResourceDictionary>
