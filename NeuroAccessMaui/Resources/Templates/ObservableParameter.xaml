<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
					xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
					xmlns:objectModel="clr-namespace:NeuroAccessMaui.UI.Pages.Contracts.ObjectModel"
					xmlns:controls="clr-namespace:NeuroAccessMaui.UI.Controls"
					xmlns:converters="clr-namespace:NeuroAccessMaui.UI.Converters"
					xmlns:extended="clr-namespace:NeuroAccessMaui.UI.Controls.Extended"
					xmlns:ui="clr-namespace:NeuroAccessMaui.UI"
					xmlns:l="clr-namespace:NeuroAccessMaui.Services.Localization">
	
	<converters:HyphenIfEmpty x:Key="HyphenIfEmptyConverter" />

	<!-- Styles -->
	<Style x:Key="ParameterItemTitleLabel"
		   TargetType="Label"
		   BaseResourceKey="BoldItemTitleLabel">
		<Setter Property="TextColor"
				Value="{AppThemeBinding Light={DynamicResource ContentPrimaryWLLight}, Dark={DynamicResource ContentPrimaryWLDark}}" />
		<Setter Property="FontSize"
				Value="15" />
		<Setter Property="FontFamily"
				Value="SpaceGroteskSemiBold" />
		<Setter Property="LineBreakMode"
				Value="WordWrap" />
		<Setter Property="VerticalTextAlignment"
				Value="Center" />
		<Setter Property="HorizontalTextAlignment"
				Value="Start" />
	</Style>

	<Style x:Key="ParameterItemValueLabel"
		   TargetType="Label">
		<Setter Property="TextColor"
				Value="{AppThemeBinding Light={DynamicResource ContentPrimaryWLLight}, Dark={DynamicResource ContentPrimaryWLDark}}" />
		<Setter Property="FontSize"
				Value="15" />
		<Setter Property="FontFamily"
				Value="HaasGroteskRegular" />
		<Setter Property="LineBreakMode"
				Value="WordWrap" />
		<Setter Property="VerticalTextAlignment"
				Value="Center" />
	</Style>

	<!-- BooleanParameterTemplate -->
	<DataTemplate x:Key="BooleanParameterTemplate"
				  x:DataType="objectModel:ObservableBooleanParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
				<controls:CompositeInputView Grid.Row="1"
											 Style="{DynamicResource BaseCompositeInputView}"
											 IsValid="{Binding IsValid}"
											 LabelText="{Binding Label}">
					<controls:CompositeInputView.CenterView>
						<Grid ColumnDefinitions="Auto, *">
							<!-- Recognize taps on the whole grid area-->
							<Grid.GestureRecognizers>
								<TapGestureRecognizer Command="{Binding ToggleBooleanValueCommand}" />
							</Grid.GestureRecognizers>
							<CheckBox Grid.Column="0"
									  IsChecked="{Binding BooleanValue, Mode=TwoWay}"
									  VerticalOptions="Center"
									  HorizontalOptions="Start"
									  Color="{AppThemeBinding Light={DynamicResource ButtonAccessPrimarybgWLLight}, Dark={DynamicResource ButtonAccessPrimarybgWLDark}}"
									  Margin="{DynamicResource SmallRightMargins}" />
							<Label Grid.Column="1"
								   Text="{Binding Guide}"
								   Style="{DynamicResource ParameterItemTitleLabel}"
								   TextColor="{AppThemeBinding Light={DynamicResource ContentPrimaryWLLight}, Dark={DynamicResource ContentPrimaryWLDark}}" />
						</Grid>
					</controls:CompositeInputView.CenterView>
				</controls:CompositeInputView>
				<!-- Added Protection Indicator here -->
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- Read-only BooleanParameterTemplate -->
	<DataTemplate x:Key="BooleanParameterReadOnlyTemplate"
				  x:DataType="objectModel:ObservableBooleanParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
				<Grid RowDefinitions="*,*"
					  Margin="0">
					<Label Grid.Row="0"
						   Text="{Binding Label}"
						   Style="{DynamicResource ParameterItemTitleLabel}"
						   HorizontalTextAlignment="Start" />
					<CheckBox Grid.Row="1"
							  IsChecked="{Binding BooleanValue, Mode=OneTime}"
							  VerticalOptions="Center"
							  HorizontalOptions="Start"
							  Color="{AppThemeBinding Light={DynamicResource ContentPrimaryWLLight}, Dark={DynamicResource ContentPrimaryWLDark}}"
							  InputTransparent="True" />
				</Grid>
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- DateParameterTemplate -->
	<DataTemplate x:Key="DateParameterTemplate"
				  x:DataType="objectModel:ObservableDateParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
				<controls:CompositeDatePicker Style="{DynamicResource RegularCompositeDatePicker}"
											  IsValid="{Binding IsValid}"
											  LabelText="{Binding Label}"
											  NullableDate="{Binding DateValue}"
											  Placeholder="{Binding Guide}"
											  VerticalOptions="Center" />
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- Read-only DateParameterTemplate -->
	<DataTemplate x:Key="DateParameterReadOnlyTemplate"
				  x:DataType="objectModel:ObservableDateParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout>
				<Grid RowDefinitions="*,*"
					  ColumnSpacing="{DynamicResource SmallSpacing}">
					<Label Grid.Row="0"
						   Text="{Binding Label}"
						   Style="{DynamicResource ParameterItemTitleLabel}"
						   HorizontalTextAlignment="Start" />
					<Label Grid.Row="1"
						   Text="{Binding DateValue, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter=true}"
						   Style="{DynamicResource ParameterItemValueLabel}" />
				</Grid>
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- NumericalParameterTemplate -->
	<DataTemplate x:Key="NumericalParameterTemplate"
				  x:DataType="objectModel:ObservableNumericalParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout>
				<controls:CompositeEntry Style="{DynamicResource RegularCompositeEntry}"
										 EntryData="{Binding DecimalValue, Converter={StaticResource StringToDecimalConverter}}"
										 Keyboard="Numeric"
										 Placeholder="{Binding Guide}"
										 VerticalOptions="Center"
										 LabelText="{Binding Label}"
										 IsValid="{Binding IsValid}" />
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- Read-only NumericalParameterTemplate -->
	<DataTemplate x:Key="NumericalParameterReadOnlyTemplate"
				  x:DataType="objectModel:ObservableNumericalParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout>
				<Grid RowDefinitions="*, *">
					<Label Grid.Row="0"
						   Text="{Binding Label}"
						   Style="{DynamicResource ParameterItemTitleLabel}" />
					<Label Grid.Row="1"
						   Text="{Binding DecimalValue}"
						   Style="{DynamicResource ParameterItemValueLabel}" />
				</Grid>
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- StringParameterTemplate -->
	<DataTemplate x:Key="StringParameterTemplate"
				  x:DataType="objectModel:ObservableStringParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout>
				<controls:CompositeEntry Style="{DynamicResource RegularCompositeEntry}"
										 EntryData="{Binding StringValue, Mode=TwoWay}"
										 Keyboard="Text"
										 Placeholder="{Binding Guide}"
										 VerticalOptions="Center"
										 LabelText="{Binding Label}"
										 IsValid="{Binding IsValid}" />
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- Read-only StringParameterTemplate -->
	<DataTemplate x:Key="StringParameterReadOnlyTemplate"
				  x:DataType="objectModel:ObservableStringParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout>
				<Label Text="{Binding Label}"
					   Style="{DynamicResource ParameterItemTitleLabel}" />
				<Label Text="{Binding StringValue}" />
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- TimeParameterTemplate -->
	<DataTemplate x:Key="TimeParameterTemplate"
				  x:DataType="objectModel:ObservableTimeParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout>
				<controls:CompositeInputView Style="{DynamicResource BaseCompositeInputView}"
											 IsValid="{Binding IsValid}"
											 LabelText="{Binding Label}">
					<controls:CompositeInputView.CenterView>
						<TimePicker Time="{Binding TimeSpanValue, Mode=TwoWay}"
									BackgroundColor="Transparent"
									TextColor="{AppThemeBinding Light={DynamicResource ContentPrimaryWLLight}, Dark={DynamicResource ContentPrimaryWLDark}}"
									VerticalOptions="Center"
									FontFamily="HaasGroteskRegular"
									FontSize="18" />
					</controls:CompositeInputView.CenterView>
				</controls:CompositeInputView>
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- Read-only TimeParameterTemplate -->
	<DataTemplate x:Key="TimeParameterReadOnlyTemplate"
				  x:DataType="objectModel:ObservableTimeParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout>
				<Grid RowDefinitions="*,*"
					  ColumnSpacing="{DynamicResource SmallSpacing}">
					<Label Grid.Row="0"
						   Text="{Binding Label}"
						   Style="{DynamicResource ParameterItemTitleLabel}"
						   HorizontalTextAlignment="Start" />
					<Label Grid.Row="1"
						   Text="{Binding TimeSpanValue, StringFormat='{}{0:hh\\:mm\\:ss}'}"
						   Style="{DynamicResource ParameterItemValueLabel}" />
				</Grid>
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- DurationParameterTemplate -->
	<DataTemplate x:Key="DurationParameterTemplate"
				  x:DataType="objectModel:ObservableDurationParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout>
				<controls:CompositeDurationPicker	TitleLabelText="{l:Localize DurationPickerTitle}"
													TitleLabelStyle="{DynamicResource DurationLabel}"
													DescriptionLabelText="{l:Localize DurationPickerDescription}"
													DescriptionLabelStyle="{DynamicResource ParameterItemValueLabel}"
													DurationValue="{Binding DurationValue, Mode=TwoWay}"
													IsValid="{Binding IsValid}" />
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- Read-only DurationParameterTemplate -->
	<DataTemplate x:Key="DurationParameterReadOnlyTemplate"
				  x:DataType="objectModel:ObservableDurationParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout>
				<Grid RowDefinitions="*,*"
					  ColumnSpacing="{DynamicResource SmallSpacing}">
					<Label Grid.Row="0"
						   Text="{Binding Label}"
						   Style="{DynamicResource ParameterItemTitleLabel}"
						   HorizontalTextAlignment="Start" />
					<Label Grid.Row="1"
						   Text="{Binding DurationValue}"
						   Style="{DynamicResource ParameterItemValueLabel}" />
				</Grid>
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- Unreadable Protected Template -->
	<!-- This one already shows the indicator in a specialized Grid layout,
         so you can leave it or adjust it similarly if you want a consistent layout. -->
	<DataTemplate x:Key="ProtectedParameterTemplate"
				  x:DataType="objectModel:ObservableParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<Grid RowDefinitions="Auto,Auto"
				  ColumnSpacing="{DynamicResource SmallSpacing}">
				<Label Grid.Row="0"
					   Text="{Binding Label}"
					   Style="{DynamicResource ParameterItemTitleLabel}"
					   HorizontalTextAlignment="Start" />
				<controls:ParameterProtectionIndicator Grid.Row="1"
													   IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   TransientText="{l:Localize NotAvailable}"
													   IsVisible="{Binding IsProtected}" />
			</Grid>
		</Border>
	</DataTemplate>

	<!-- DefaultParameterTemplate -->
	<DataTemplate x:Key="DefaultParameterTemplate"
				  x:DataType="objectModel:ObservableParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout>
				<Grid RowDefinitions="Auto, Auto">
					<Label Text="{Binding Name}"
						   Grid.Row="0"
						   Style="{DynamicResource ParameterItemTitleLabel}"
						   VerticalOptions="Center"
						   VerticalTextAlignment="Center" />
					<Label Text="{Binding Value}"
						   Grid.Row="1" />
				</Grid>
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- Read-only DefaultParameterTemplate -->
	<DataTemplate x:Key="DefaultParameterReadOnlyTemplate"
				  x:DataType="objectModel:ObservableParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout>
				<Grid RowDefinitions="*,*"
					  ColumnSpacing="{DynamicResource SmallSpacing}">
					<Label Grid.Row="0"
						   Text="{Binding Label}"
						   Style="{DynamicResource ParameterItemTitleLabel}"
						   HorizontalTextAlignment="Start" />
					<Label Grid.Row="1"
						   Text="{Binding Value, Converter={StaticResource HyphenIfEmptyConverter }}"
						   Style="{DynamicResource ParameterItemValueLabel}" />
				</Grid>
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- DateTimeParameterTemplate -->
	<DataTemplate x:Key="DateTimeParameterTemplate"
				  x:DataType="objectModel:ObservableDateTimeParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
				<Grid RowDefinitions="*,*"
					  RowSpacing="{DynamicResource SmallSpacing}">
					<controls:CompositeDatePicker Grid.Row="0"
												  Style="{DynamicResource RegularCompositeDatePicker}"
												  IsValid="{Binding IsValid}"
												  LabelText="{Binding Label}"
												  NullableDate="{Binding SelectedDate}"
												  Placeholder="{Binding Guide}"
												  VerticalOptions="Center" />

					<controls:CompositeInputView Grid.Row="1"
												 Style="{DynamicResource BaseCompositeInputView}"
												 IsValid="{Binding IsValid}">
						<controls:CompositeInputView.CenterView>
							<TimePicker Time="{Binding SelectedTime, Mode=TwoWay}"
										BackgroundColor="Transparent"
										TextColor="{AppThemeBinding Light={DynamicResource ContentPrimaryWLLight}, Dark={DynamicResource ContentPrimaryWLDark}}"
										VerticalOptions="Center"
										FontFamily="HaasGroteskRegular"
										FontSize="18">
								<TimePicker.Triggers>
									<DataTrigger TargetType="TimePicker"
												 Binding="{Binding IsValid}"
												 Value="False">
										<Setter Property="TextColor"
												Value="{AppThemeBinding Light={DynamicResource InputFieldsContentDangerv500Light}, Dark={DynamicResource InputFieldsContentDangerv500Dark}}" />

									</DataTrigger>
								</TimePicker.Triggers>
							</TimePicker>
						</controls:CompositeInputView.CenterView>
					</controls:CompositeInputView>
				</Grid>
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- DateTimeParameterReadOnlyTemplate -->
	<DataTemplate x:Key="DateTimeParameterReadOnlyTemplate"
				  x:DataType="objectModel:ObservableDateTimeParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
				<Grid RowDefinitions="*,*"
					  ColumnSpacing="{DynamicResource SmallSpacing}">
					<Label Grid.Row="0"
						   Text="{Binding Label}"
						   Style="{DynamicResource ParameterItemTitleLabel}"
						   HorizontalTextAlignment="Start" />
					<Label Grid.Row="1"
						   Text="{Binding DateTimeValue, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter=false}"
						   Style="{DynamicResource ParameterItemValueLabel}" />
				</Grid>
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- CalcParameterTemplate -->
	<DataTemplate x:Key="CalcParameterTemplate"
				  x:DataType="objectModel:ObservableCalcParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
				<controls:CompositeEntry Style="{DynamicResource RegularCompositeEntry}"
										 EntryData="{Binding CalcString, Mode=TwoWay}"
										 Keyboard="Text"
										 Placeholder="{Binding Guide}"
										 VerticalOptions="Center"
										 LabelText="{Binding Label}"
										 IsValid="{Binding IsValid}" />
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<!-- Read-only CalcParameterTemplate -->
	<DataTemplate x:Key="CalcParameterReadOnlyTemplate"
				  x:DataType="objectModel:ObservableCalcParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
				<Grid RowDefinitions="*,*"
					  ColumnSpacing="{DynamicResource SmallSpacing}">
					<Label Grid.Row="0"
						   Text="{Binding Label}"
						   Style="{DynamicResource ParameterItemTitleLabel}"
						   HorizontalTextAlignment="Start" />
					<Label Grid.Row="1"
						   Text="{Binding CalcString}"
						   Style="{DynamicResource ParameterItemValueLabel}" />
				</Grid>
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>

	<DataTemplate x:Key="ContractReferenceParameterTemplate"
				  x:DataType="objectModel:ObservableContractReferenceParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
				<controls:ContractSelector EntryData="{Binding ContractReferenceValue, Mode=TwoWay}"
										   EntryPlaceholderText="{Binding Guide}"
										   EntryStyle="{DynamicResource RegularCompositeEntry}"
										   TopText="{l:Localize SelectContractEntryDescription}"
										   TopTextStyle="{DynamicResource ParameterItemTitleLabel}"
										   VerticalOptions="Center"
										   TitleLabelText="{Binding Label}"
										   TitleLabelStyle="{DynamicResource RegularCompositeEntryLabel}"
										   IsValid="{Binding IsValid}"
										   ButtonCommand="{Binding PickContractReferenceCommand}"
										   ButtonText="{l:Localize SelectContract}" />
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>
	<DataTemplate x:Key="ContractReferenceParameterReadOnlyTemplate"
				  x:DataType="objectModel:ObservableContractReferenceParameter">
		<Border Style="{DynamicResource BorderSet}"
				Margin="{DynamicResource MediumLeftRightMargins}">
			<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
				<Label Text="{Binding ContractReferenceValue}"/>
				<controls:TextButton Style="{DynamicResource SecondaryButton}" Command="{Binding OpenContractCommand}" LabelData="{l:Localize Open}" />
				<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
													   IsEncrypted="{Binding IsEncrypted}"
													   IsVisible="{Binding IsProtected}" />
			</VerticalStackLayout>
		</Border>
	</DataTemplate>
</ResourceDictionary>
