<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                    xmlns:objectModel="clr-namespace:NeuroAccessMaui.UI.Pages.Contracts.ObjectModel"
                    xmlns:controls="clr-namespace:NeuroAccessMaui.UI.Controls"
                    xmlns:extended="clr-namespace:NeuroAccessMaui.UI.Controls.Extended">

	<!-- Styles -->
	<Style x:Key="ParameterItemTitleLabel"
           TargetType="Label"
           BasedOn="{StaticResource BoldItemTitleLabel}">
		<Setter Property="HorizontalTextAlignment" Value="Start" />
		<Setter Property="VerticalTextAlignment" Value="End" />
		<Setter Property="FontSize" Value="14" />
		<Setter Property="LineBreakMode" Value="WordWrap" />
	</Style>

	<!-- Original DataTemplates -->

	<!-- BooleanParameterTemplate -->
	<DataTemplate x:Key="BooleanParameterTemplate" x:DataType="objectModel:ObservableBooleanParameter">
		<Grid ColumnDefinitions="Auto, *">
			<CheckBox Grid.Column="0"
                      IsChecked="{Binding BooleanValue, Mode=TwoWay}"
                      VerticalOptions="Center"
                      HorizontalOptions="Start"
                      Color="{AppThemeBinding Light={StaticResource EnabledFilledButtonBackgroundLight}, Dark={StaticResource EnabledFilledButtonBackgroundDark}}"
                      Margin="{StaticResource SmallRightMargins}" />
			<Label Grid.Column="1"
                   Text="{Binding Label}"
                   Style="{StaticResource ParameterItemTitleLabel}" />
		</Grid>
	</DataTemplate>

	<!-- Read-only BooleanParameterTemplate -->
	<DataTemplate x:Key="BooleanParameterReadOnlyTemplate" x:DataType="objectModel:ObservableBooleanParameter">
		<Grid ColumnDefinitions="Auto, *">
			<Label Grid.Column="0"
                   Text="{Binding BooleanValue}"
                   VerticalOptions="Center"
                   HorizontalOptions="Start"
                   Margin="{StaticResource SmallRightMargins}" />
			<Label Grid.Column="1"
                   Text="{Binding Label}"
                   Style="{StaticResource ParameterItemTitleLabel}" />
		</Grid>
	</DataTemplate>

	<!-- DateParameterTemplate -->
	<DataTemplate x:Key="DateParameterTemplate" x:DataType="objectModel:ObservableDateParameter">
		<controls:CompositeDatePicker Style="{StaticResource RegularCompositeDatePicker}"
                                      IsValid="{Binding IsValid}"
                                      LabelText="{Binding Label}"
                                      NullableDate="{Binding DateValue}"
                                      Placeholder="{Binding Guide}"
                                      VerticalOptions="Center" />
	</DataTemplate>

	<!-- Read-only DateParameterTemplate -->
	<DataTemplate x:Key="DateParameterReadOnlyTemplate" x:DataType="objectModel:ObservableDateParameter">
		<VerticalStackLayout>
			<Label Text="{Binding Label}"
                   Style="{StaticResource ParameterItemTitleLabel}" />
			<Label Text="{Binding DateValue, StringFormat='{}{0:MM/dd/yyyy}'}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- NumericalParameterTemplate -->
	<DataTemplate x:Key="NumericalParameterTemplate" x:DataType="objectModel:ObservableNumericalParameter">
		<controls:CompositeEntry Style="{StaticResource RegularCompositeEntry}"
                                 EntryData="{Binding DecimalValue, Converter={StaticResource StringToDecimalConverter}}"
                                 Keyboard="Numeric"
                                 Placeholder="{Binding Guide}"
                                 VerticalOptions="Center"
                                 LabelText="{Binding Label}"
                                 IsValid="{Binding IsValid}" />
	</DataTemplate>

	<!-- Read-only NumericalParameterTemplate -->
	<DataTemplate x:Key="NumericalParameterReadOnlyTemplate" x:DataType="objectModel:ObservableNumericalParameter">
		<controls:CompositeInputView Style="{StaticResource RegularCompositeInputView}" LabelText="{Binding Label}">
			<controls:CompositeInputView.CenterView>
				<Label Text="{Binding DecimalValue}" />
			</controls:CompositeInputView.CenterView>
		</controls:CompositeInputView>
			
	</DataTemplate>

	<!-- StringParameterTemplate -->
	<DataTemplate x:Key="StringParameterTemplate" x:DataType="objectModel:ObservableStringParameter">
		<controls:CompositeEntry Style="{StaticResource RegularCompositeEntry}"
                                 EntryData="{Binding StringValue, Mode=TwoWay}"
                                 Keyboard="Text"
                                 Placeholder="{Binding Guide}"
                                 VerticalOptions="Center"
                                 LabelText="{Binding Label}"
                                 IsValid="{Binding IsValid}" />
	</DataTemplate>

	<!-- Read-only StringParameterTemplate -->
	<DataTemplate x:Key="StringParameterReadOnlyTemplate" x:DataType="objectModel:ObservableStringParameter">
		<VerticalStackLayout>
			<Label Text="{Binding Label}"
                   Style="{StaticResource ParameterItemTitleLabel}" />
			<Label Text="{Binding StringValue}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- TimeParameterTemplate -->
	<DataTemplate x:Key="TimeParameterTemplate" x:DataType="objectModel:ObservableTimeParameter">
		<controls:CompositeInputView Style="{StaticResource RegularCompositeInputView}"
                                     IsValid="{Binding IsValid}"
                                     LabelText="{Binding Label}">
			<controls:CompositeInputView.CenterView>
				<TimePicker Time="{Binding TimeSpanValue, Mode=TwoWay}"
                            VerticalOptions="Center" />
			</controls:CompositeInputView.CenterView>
		</controls:CompositeInputView>
	</DataTemplate>

	<!-- Read-only TimeParameterTemplate -->
	<DataTemplate x:Key="TimeParameterReadOnlyTemplate" x:DataType="objectModel:ObservableTimeParameter">
		<VerticalStackLayout>
			<Label Text="{Binding Label}"
                   Style="{StaticResource ParameterItemTitleLabel}" />
			<Label Text="{Binding TimeSpanValue, StringFormat='{}{0:hh\\:mm\\:ss}'}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- DurationParameterTemplate -->
	<DataTemplate x:Key="DurationParameterTemplate" x:DataType="objectModel:ObservableDurationParameter">
		<controls:CompositeEntry Style="{StaticResource RegularCompositeEntry}"
                                 EntryData="{Binding DurationValue, Mode=TwoWay}"
                                 Keyboard="Text"
                                 Placeholder="{Binding Guide}"
                                 VerticalOptions="Center"
                                 LabelText="{Binding Label}"
                                 IsValid="{Binding IsValid}" />
	</DataTemplate>

	<!-- Read-only DurationParameterTemplate -->
	<DataTemplate x:Key="DurationParameterReadOnlyTemplate" x:DataType="objectModel:ObservableDurationParameter">
		<VerticalStackLayout>
			<Label Text="{Binding Label}"
                   Style="{StaticResource ParameterItemTitleLabel}" />
			<Label Text="{Binding DurationValue}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- DefaultParameterTemplate -->
	<DataTemplate x:Key="DefaultParameterTemplate" x:DataType="objectModel:ObservableParameter">
		<Grid RowDefinitions="Auto, Auto">
			<Label Text="{Binding Name}"
                   Grid.Row="0"
                   Style="{StaticResource ParameterItemTitleLabel}"
                   VerticalOptions="Center"
                   VerticalTextAlignment="Center" />
			<Label Text="{Binding Value}" Grid.Row="1" />
		</Grid>
	</DataTemplate>

	<!-- Read-only DefaultParameterTemplate -->
	<DataTemplate x:Key="DefaultParameterReadOnlyTemplate" x:DataType="objectModel:ObservableParameter">
		<VerticalStackLayout>
			<Label Text="{Binding Name}"
                   Style="{StaticResource ParameterItemTitleLabel}" />
			<Label Text="{Binding Value}" />
		</VerticalStackLayout>
	</DataTemplate>

</ResourceDictionary>
