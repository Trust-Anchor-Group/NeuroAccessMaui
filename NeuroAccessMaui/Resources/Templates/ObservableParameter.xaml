<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
						  xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
						  xmlns:objectModel="clr-namespace:NeuroAccessMaui.UI.Pages.Contracts.ObjectModel"
						  xmlns:controls="clr-namespace:NeuroAccessMaui.UI.Controls"
						  xmlns:extended="clr-namespace:NeuroAccessMaui.UI.Controls.Extended"
						  xmlns:ui="clr-namespace:NeuroAccessMaui.UI"
						  xmlns:l="clr-namespace:NeuroAccessMaui.Services.Localization">

	<!-- Styles -->
	<Style x:Key="ParameterItemTitleLabel"
			 TargetType="Label"
			 BasedOn="{StaticResource BoldItemTitleLabel}">
		<Setter Property="TextColor"
				  Value="{AppThemeBinding Light={StaticResource OffBlack50Light}, Dark={StaticResource OffWhiteDark}}" />
		<Setter Property="FontSize"
				  Value="15" />
		<Setter Property="FontFamily"
				  Value="SpaceGroteskSemiBold" />
		<Setter Property="LineBreakMode"
				  Value="WordWrap" />
		<Setter Property="VerticalTextAlignment"
				  Value="Center" />
		<Setter Property="HorizontalTextAlignment"
				  Value="Start" />
	</Style>

	<Style x:Key="ParameterItemValueLabel"
			 TargetType="Label">
		<Setter Property="TextColor"
				  Value="{AppThemeBinding Light={StaticResource OffBlackLight}, Dark={StaticResource OffWhiteDark}}" />
		<Setter Property="FontSize"
				  Value="15" />
		<Setter Property="FontFamily"
				  Value="HaasGroteskRegular" />
		<Setter Property="LineBreakMode"
				  Value="WordWrap" />
		<Setter Property="VerticalTextAlignment"
				  Value="Center" />
	</Style>

	<!-- BooleanParameterTemplate -->
	<DataTemplate x:Key="BooleanParameterTemplate"
					  x:DataType="objectModel:ObservableBooleanParameter">
		<VerticalStackLayout Spacing="{StaticResource SmallSpacing}">
			<Grid ColumnDefinitions="Auto, *">
				<CheckBox Grid.Column="0"
							 IsChecked="{Binding BooleanValue, Mode=TwoWay}"
							 VerticalOptions="Center"
							 HorizontalOptions="Start"
							 Color="{AppThemeBinding Light={StaticResource EnabledFilledButtonBackgroundLight}, Dark={StaticResource EnabledFilledButtonBackgroundDark}}"
							 Margin="{StaticResource SmallRightMargins}" />
				<Label Grid.Column="1"
						 Text="{Binding Label}"
						 Style="{StaticResource ParameterItemTitleLabel}"
						 TextColor="{AppThemeBinding Light={StaticResource OffBlackLight}, Dark={StaticResource OffWhiteDark}}" />
			</Grid>
			<!-- Added Protection Indicator here -->
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- Read-only BooleanParameterTemplate -->
	<DataTemplate x:Key="BooleanParameterReadOnlyTemplate"
					  x:DataType="objectModel:ObservableBooleanParameter">
		<VerticalStackLayout Spacing="{StaticResource SmallSpacing}">
			<Grid RowDefinitions="*,*"
					Margin="0">
				<Label Grid.Row="0"
						 Text="{Binding Label}"
						 Style="{StaticResource ParameterItemTitleLabel}"
						 HorizontalTextAlignment="Start" />
				<CheckBox Grid.Row="1"
							 IsChecked="{Binding BooleanValue, Mode=OneTime}"
							 VerticalOptions="Center"
							 HorizontalOptions="Start"
							 Color="{AppThemeBinding Light={StaticResource OffBlackLight}, Dark={StaticResource OffWhiteDark}}"
							 InputTransparent="True" />
			</Grid>
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- DateParameterTemplate -->
	<DataTemplate x:Key="DateParameterTemplate"
					  x:DataType="objectModel:ObservableDateParameter">
		<VerticalStackLayout Spacing="{StaticResource SmallSpacing}">
			<controls:CompositeDatePicker Style="{StaticResource RegularCompositeDatePicker}"
													IsValid="{Binding IsValid}"
													LabelText="{Binding Label}"
													NullableDate="{Binding DateValue}"
													Placeholder="{Binding Guide}"
													VerticalOptions="Center" />
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- Read-only DateParameterTemplate -->
	<DataTemplate x:Key="DateParameterReadOnlyTemplate"
					  x:DataType="objectModel:ObservableDateParameter">
		<VerticalStackLayout>
			<Grid RowDefinitions="*,*"
					ColumnSpacing="{StaticResource SmallSpacing}">
				<Label Grid.Row="0"
						 Text="{Binding Label}"
						 Style="{StaticResource ParameterItemTitleLabel}"
						 HorizontalTextAlignment="Start" />
				<Label Grid.Row="1"
						 Text="{Binding DateValue, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter=true}"
						 Style="{StaticResource ParameterItemValueLabel}" />
			</Grid>
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- NumericalParameterTemplate -->
	<DataTemplate x:Key="NumericalParameterTemplate"
					  x:DataType="objectModel:ObservableNumericalParameter">
		<VerticalStackLayout>
			<controls:CompositeEntry Style="{StaticResource RegularCompositeEntry}"
											 EntryData="{Binding DecimalValue, Converter={StaticResource StringToDecimalConverter}}"
											 Keyboard="Numeric"
											 Placeholder="{Binding Guide}"
											 VerticalOptions="Center"
											 LabelText="{Binding Label}"
											 IsValid="{Binding IsValid}" />
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- Read-only NumericalParameterTemplate -->
	<DataTemplate x:Key="NumericalParameterReadOnlyTemplate"
					  x:DataType="objectModel:ObservableNumericalParameter">
		<VerticalStackLayout>
			<Grid RowDefinitions="*, *">
				<Label Grid.Row="0"
						 Text="{Binding Label}"
						 Style="{StaticResource ParameterItemTitleLabel}" />
				<Label Grid.Row="1"
						 Text="{Binding DecimalValue}"
						 Style="{StaticResource ParameterItemValueLabel}" />
			</Grid>
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- StringParameterTemplate -->
	<DataTemplate x:Key="StringParameterTemplate"
					  x:DataType="objectModel:ObservableStringParameter">
		<VerticalStackLayout>
			<controls:CompositeEntry Style="{StaticResource RegularCompositeEntry}"
											 EntryData="{Binding StringValue, Mode=TwoWay}"
											 Keyboard="Text"
											 Placeholder="{Binding Guide}"
											 VerticalOptions="Center"
											 LabelText="{Binding Label}"
											 IsValid="{Binding IsValid}" />
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- Read-only StringParameterTemplate -->
	<DataTemplate x:Key="StringParameterReadOnlyTemplate"
					  x:DataType="objectModel:ObservableStringParameter">
		<VerticalStackLayout>
			<Label Text="{Binding Label}"
					 Style="{StaticResource ParameterItemTitleLabel}" />
			<Label Text="{Binding StringValue}" />
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- TimeParameterTemplate -->
	<DataTemplate x:Key="TimeParameterTemplate"
					  x:DataType="objectModel:ObservableTimeParameter">
		<VerticalStackLayout>
			<controls:CompositeInputView Style="{StaticResource BaseCompositeInputView}"
												  IsValid="{Binding IsValid}"
												  LabelText="{Binding Label}">
				<controls:CompositeInputView.CenterView>
					<TimePicker Time="{Binding TimeSpanValue, Mode=TwoWay}"
									BackgroundColor="Transparent"
									TextColor="{AppThemeBinding Light={StaticResource OffBlackLight}, Dark={StaticResource OffWhiteDark}}"
									VerticalOptions="Center"
									FontFamily="HaasGroteskRegular"
									FontSize="18" />
				</controls:CompositeInputView.CenterView>
			</controls:CompositeInputView>
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- Read-only TimeParameterTemplate -->
	<DataTemplate x:Key="TimeParameterReadOnlyTemplate"
					  x:DataType="objectModel:ObservableTimeParameter">
		<VerticalStackLayout>
			<Grid RowDefinitions="*,*"
					ColumnSpacing="{StaticResource SmallSpacing}">
				<Label Grid.Row="0"
						 Text="{Binding Label}"
						 Style="{StaticResource ParameterItemTitleLabel}"
						 HorizontalTextAlignment="Start" />
				<Label Grid.Row="1"
						 Text="{Binding TimeSpanValue, StringFormat='{}{0:hh\\:mm\\:ss}'}"
						 Style="{StaticResource ParameterItemValueLabel}" />
			</Grid>
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- DurationParameterTemplate -->
	<DataTemplate x:Key="DurationParameterTemplate"
					  x:DataType="objectModel:ObservableDurationParameter">
		<VerticalStackLayout>
			<controls:CompositeDurationPicker	TitleLabelText="{l:Localize DurationPickerTitle}"
															TitleLabelStyle="{StaticResource SectionTitleLabel}"
															DescriptionLabelText="{l:Localize DurationPickerDescription}"
															DescriptionLabelStyle="{StaticResource ParameterItemValueLabel}"
															DurationValue="{Binding DurationValue, Mode=TwoWay}"
																/>
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- Read-only DurationParameterTemplate -->
	<DataTemplate x:Key="DurationParameterReadOnlyTemplate"
					  x:DataType="objectModel:ObservableDurationParameter">
		<VerticalStackLayout>
			<Grid RowDefinitions="*,*"
					ColumnSpacing="{StaticResource SmallSpacing}">
				<Label Grid.Row="0"
						 Text="{Binding Label}"
						 Style="{StaticResource ParameterItemTitleLabel}"
						 HorizontalTextAlignment="Start" />
				<Label Grid.Row="1"
						 Text="{Binding DurationValue}"
						 Style="{StaticResource ParameterItemValueLabel}" />
			</Grid>
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- Unreadable Protected Template -->
	<!-- This one already shows the indicator in a specialized Grid layout,
         so you can leave it or adjust it similarly if you want a consistent layout. -->
	<DataTemplate x:Key="ProtectedParameterTemplate"
					  x:DataType="objectModel:ObservableParameter">
		<Grid RowDefinitions="Auto,Auto"
				ColumnSpacing="{StaticResource SmallSpacing}">
			<Label Grid.Row="0"
					 Text="{Binding Label}"
					 Style="{StaticResource ParameterItemTitleLabel}"
					 HorizontalTextAlignment="Start" />
			<controls:ParameterProtectionIndicator Grid.Row="1"
																IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																TransientText="{l:Localize NotAvailable}"
																IsVisible="{Binding IsProtected}" />
		</Grid>
	</DataTemplate>

	<!-- DefaultParameterTemplate -->
	<DataTemplate x:Key="DefaultParameterTemplate"
					  x:DataType="objectModel:ObservableParameter">
		<VerticalStackLayout>
			<Grid RowDefinitions="Auto, Auto">
				<Label Text="{Binding Name}"
						 Grid.Row="0"
						 Style="{StaticResource ParameterItemTitleLabel}"
						 VerticalOptions="Center"
						 VerticalTextAlignment="Center" />
				<Label Text="{Binding Value}"
						 Grid.Row="1" />
			</Grid>
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- Read-only DefaultParameterTemplate -->
	<DataTemplate x:Key="DefaultParameterReadOnlyTemplate"
					  x:DataType="objectModel:ObservableParameter">
		<VerticalStackLayout>
			<Grid RowDefinitions="*,*"
					ColumnSpacing="{StaticResource SmallSpacing}">
				<Label Grid.Row="0"
						 Text="{Binding Label}"
						 Style="{StaticResource ParameterItemTitleLabel}"
						 HorizontalTextAlignment="Start" />
				<Label Grid.Row="1"
						 Text="{Binding Value}"
						 Style="{StaticResource ParameterItemValueLabel}" />
			</Grid>
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- DateTimeParameterTemplate -->
	<DataTemplate x:Key="DateTimeParameterTemplate"
					  x:DataType="objectModel:ObservableDateTimeParameter">
		<VerticalStackLayout Spacing="{StaticResource SmallSpacing}">
			<Grid RowDefinitions="*,*"
					RowSpacing="{StaticResource SmallSpacing}">
				<controls:CompositeDatePicker Grid.Row="0"
														Style="{StaticResource RegularCompositeDatePicker}"
														IsValid="{Binding IsValid}"
														LabelText="{Binding Label}"
														NullableDate="{Binding SelectedDate}"
														Placeholder="{Binding Guide}"
														VerticalOptions="Center" />

				<controls:CompositeInputView Grid.Row="1"
													  Style="{StaticResource BaseCompositeInputView}"
													  IsValid="{Binding IsValid}">
					<controls:CompositeInputView.CenterView>
						<TimePicker Time="{Binding SelectedTime, Mode=TwoWay}"
										BackgroundColor="Transparent"
										TextColor="{AppThemeBinding Light={StaticResource OffBlackLight}, Dark={StaticResource OffWhiteDark}}"
										VerticalOptions="Center"
										FontFamily="HaasGroteskRegular"
										FontSize="18" />
					</controls:CompositeInputView.CenterView>
				</controls:CompositeInputView>
			</Grid>
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- DateTimeParameterReadOnlyTemplate -->
	<DataTemplate x:Key="DateTimeParameterReadOnlyTemplate"
					  x:DataType="objectModel:ObservableDateTimeParameter">
		<VerticalStackLayout Spacing="{StaticResource SmallSpacing}">
			<Grid RowDefinitions="*,*"
					ColumnSpacing="{StaticResource SmallSpacing}">
				<Label Grid.Row="0"
						 Text="{Binding Label}"
						 Style="{StaticResource ParameterItemTitleLabel}"
						 HorizontalTextAlignment="Start" />
				<Label Grid.Row="1"
						 Text="{Binding DateTimeValue, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter=false}"
						 Style="{StaticResource ParameterItemValueLabel}" />
			</Grid>
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- CalcParameterTemplate -->
	<DataTemplate x:Key="CalcParameterTemplate"
					  x:DataType="objectModel:ObservableCalcParameter">
		<VerticalStackLayout Spacing="{StaticResource SmallSpacing}">
			<controls:CompositeEntry Style="{StaticResource RegularCompositeEntry}"
											 EntryData="{Binding CalcString, Mode=TwoWay}"
											 Keyboard="Text"
											 Placeholder="{Binding Guide}"
											 VerticalOptions="Center"
											 LabelText="{Binding Label}"
											 IsValid="{Binding IsValid}" />
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

	<!-- Read-only CalcParameterTemplate -->
	<DataTemplate x:Key="CalcParameterReadOnlyTemplate"
					  x:DataType="objectModel:ObservableCalcParameter">
		<VerticalStackLayout Spacing="{StaticResource SmallSpacing}">
			<Grid RowDefinitions="*,*"
					ColumnSpacing="{StaticResource SmallSpacing}">
				<Label Grid.Row="0"
						 Text="{Binding Label}"
						 Style="{StaticResource ParameterItemTitleLabel}"
						 HorizontalTextAlignment="Start" />
				<Label Grid.Row="1"
						 Text="{Binding CalcString}"
						 Style="{StaticResource ParameterItemValueLabel}" />
			</Grid>
			<controls:ParameterProtectionIndicator IsTransient="{Binding IsTransient}"
																IsEncrypted="{Binding IsEncrypted}"
																IsVisible="{Binding IsProtected}" />
		</VerticalStackLayout>
	</DataTemplate>

</ResourceDictionary>
