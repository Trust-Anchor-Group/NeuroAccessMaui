<?xml version="1.0" encoding="UTF-8" ?>
<base:BasePopup x:Class="NeuroAccessMaui.UI.Popups.Settings.SelectLanguagePopup"
					 x:Name="thisPopup"
					 x:DataType="viewModel:SelectLanguagePopupViewModel"
					 xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
					 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
					 xmlns:controls="clr-namespace:NeuroAccessMaui.UI.Controls"
					 xmlns:converters="clr-namespace:NeuroAccessMaui.UI.Converters"
					 xmlns:l="clr-namespace:NeuroAccessMaui.Services.Localization"
					 xmlns:viewModel="clr-namespace:NeuroAccessMaui.UI.Popups.Settings"
					 xmlns:base="clr-namespace:NeuroAccessMaui.UI.Popups"
					 xmlns:animations="clr-namespace:Mopups.Animations;assembly=Mopups"
					 xmlns:mopups="clr-namespace:Mopups.Pages;assembly=Mopups">

	<mopups:PopupPage.Animation>
		<animations:ScaleAnimation DurationIn="500"
											DurationOut="500"
											EasingIn="CubicIn"
											EasingOut="CubicOut"
											HasBackgroundAnimation="True"
											PositionIn="Center"
											PositionOut="Center" />
	</mopups:PopupPage.Animation>

	<VisualElement.Resources>
		<DataTemplate x:Key="SelectLanguageDataTemplate"
						  x:DataType="viewModel:ObservableLanguage">
			<Border x:Name="ItemBorder"
			        BackgroundColor="{AppThemeBinding Light={DynamicResource SurfaceBackgroundWLLight},
                                              Dark={DynamicResource SurfaceBackgroundWLDark}}"
			        Stroke="{AppThemeBinding Light={DynamicResource SurfaceBackgroundWLLight},
                                     Dark={DynamicResource SurfaceBackgroundWLDark}}"
			        Style="{DynamicResource ItemOuterBorder}">
				<Border.Triggers>
					<!-- When IsSelected is true, update appearance -->
					<DataTrigger TargetType="Border"
					             Binding="{Binding IsSelected}"
					             Value="True">
						<Setter Property="BackgroundColor"
						        Value="{AppThemeBinding Light={DynamicResource SurfaceBackgroundWLDark}, Dark={DynamicResource SurfaceBackgroundWLLight}}" />
						<Setter Property="Stroke"
						        Value="{AppThemeBinding Light={DynamicResource SurfaceBackgroundWLDark}, Dark={DynamicResource SurfaceBackgroundWLLight}}" />
					</DataTrigger>
				</Border.Triggers>
				<Border.GestureRecognizers>
					<TapGestureRecognizer Command="{Binding Source={x:Reference thisPopup}, Path=BindingContext.SelectLanguageCommand}"
					                      CommandParameter="{Binding Language.Name}" />
				</Border.GestureRecognizers>
				<Label x:Name="InnerLabel"
						 HorizontalOptions="Center"
						 Style="{DynamicResource BoldItemTitleLabel}"
						 Text="{Binding Language.MyNativeName}"
						 TextColor="{AppThemeBinding Light={DynamicResource SurfaceBackgroundWLDark},
                                           Dark={DynamicResource SurfaceBackgroundWLLight}}">
					<Label.Triggers>
						<DataTrigger TargetType="Label"
						             Binding="{Binding IsSelected}"
						             Value="True">
							<Setter Property="TextColor"
									  Value="{AppThemeBinding Light={DynamicResource SurfaceBackgroundWLLight}, Dark={DynamicResource SurfaceBackgroundWLDark}}" />
						</DataTrigger>
					</Label.Triggers>
				</Label>
			</Border>
		</DataTemplate>

	</VisualElement.Resources>

	<Grid Style="{DynamicResource PopupGrid}">
		<Border WidthRequest="{Binding ViewWidthRequest}"
				  MaximumHeightRequest="{Binding MaximumViewHeightRequest}"
				  Style="{DynamicResource PopupBorder}">
			<ScrollView x:Name="InnerScrollView"
							VerticalOptions="Center">
				<VerticalStackLayout x:Name="LanguagesContainer"
											BindableLayout.ItemTemplate="{StaticResource SelectLanguageDataTemplate}"
											BindableLayout.ItemsSource="{Binding Languages}"
											Spacing="{DynamicResource MediumSpacing}" />
			</ScrollView>
		</Border>
	</Grid>
</base:BasePopup>
