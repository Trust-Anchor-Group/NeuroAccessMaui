<?xml version="1.0" encoding="UTF-8" ?>
<viewmodel:BasePopup x:Class="NeuroAccessMaui.UI.Popups.VerifyCodePage" x:DataType="viewmodel:VerifyCodePage"
	xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
	xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
	xmlns:controls="clr-namespace:NeuroAccessMaui.UI.Controls"
	xmlns:l="clr-namespace:NeuroAccessMaui.Services.Localization"
	xmlns:viewmodel="clr-namespace:NeuroAccessMaui.UI.Popups">

	<VisualElement.Resources>
		<ResourceDictionary>
			<Style x:Key="PopupTitleLabelStyle"
				ApplyToDerivedTypes="False"
				BasedOn="{StaticResource PageTitleLabelStyle}"
				TargetType="Label">
				<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource SecondaryForegroundLight}, Dark={StaticResource SecondaryForegroundDark}}" />
				<Setter Property="FontFamily" Value="SpaceGroteskBold" />
				<Setter Property="FontSize" Value="32" />
			</Style>

			<Style x:Key="PopupDetailsLabelStyle"
				ApplyToDerivedTypes="False"
				TargetType="Label">
				<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource SecondaryForegroundLight}, Dark={StaticResource SecondaryForegroundDark}}" />
			</Style>

			<Style x:Key="PopupSectionTitleLabelStyle"
				ApplyToDerivedTypes="False"
				BasedOn="{StaticResource SectionTitleLabelStyle}"
				TargetType="Label">
				<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource SecondaryForegroundLight}, Dark={StaticResource SecondaryForegroundDark}}" />
			</Style>

			<Style x:Key="PopupOutlinedBorderStyle"
				ApplyToDerivedTypes="False"
				TargetType="Border">
				<Setter Property="Padding" Value="{StaticResource SmallMargins}" />
				<Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource SecondaryForegroundLight}, Dark={StaticResource SecondaryForegroundDark}}" />
				<Setter Property="StrokeShape">
					<RoundRectangle
						CornerRadius="{StaticResource SmallCornerRadius}" />
				</Setter>
			</Style>

			<Style x:Key="PopupOutlinedLabelStyle"
				ApplyToDerivedTypes="False"
				TargetType="Label">
				<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource SecondaryForegroundLight}, Dark={StaticResource SecondaryForegroundDark}}" />
				<Setter Property="HorizontalOptions" Value="Center" />
				<Setter Property="HorizontalTextAlignment" Value="Center" />
				<Setter Property="FontFamily" Value="SpaceGroteskMedium" />
				<Setter Property="FontSize" Value="24" />
				<Setter Property="WidthRequest" Value="16" />
				<Setter Property="VisualStateManager.VisualStateGroups">
					<VisualStateGroupList>
						<VisualStateGroup x:Name="CommonStates">
							<VisualState x:Name="Normal" />
							<VisualState x:Name="Disabled">
								<VisualState.Setters>
									<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource NormalInfoForegroundLight}, Dark={StaticResource NormalInfoForegroundDark}}" />
								</VisualState.Setters>
							</VisualState>
						</VisualStateGroup>
					</VisualStateGroupList>
				</Setter>
			</Style>
		</ResourceDictionary>
	</VisualElement.Resources>

	<Grid
		Style="{StaticResource PopupGridStyle}">

		<Border
			WidthRequest="{Binding ViewWidthRequest}"
			MaximumHeightRequest="{Binding MaximumViewHeightRequest}"
			Style="{StaticResource PopupBorderStyle}">

			<ScrollView
				VerticalOptions="Center">
				<VerticalStackLayout
					Spacing="{StaticResource LargeSpacing}">

					<VerticalStackLayout
						Spacing="{StaticResource MediumSpacing}">

						<Label
							Style="{StaticResource PopupTitleLabelStyle}"
							Text="{l:Localize OnboardingVerifyCodePageTitle}" />

						<Label
							Style="{StaticResource PopupDetailsLabelStyle}"
							Text="{Binding LocalizedVerifyCodePageDetails}" />

						<VerticalStackLayout
							Spacing="{StaticResource SmallSpacing}">

							<Label
								Style="{StaticResource PopupSectionTitleLabelStyle}"
								Text="{l:Localize VerifyCodeSectionTitle}" />
							<Grid
								ColumnDefinitions="auto,*,auto,*,auto,*,auto,*,auto,*,auto"
								ColumnSpacing="0"
								RowDefinitions="auto">
								<Grid.GestureRecognizers>
									<TapGestureRecognizer
										Tapped="TapGestureRecognizer_Tapped" />
								</Grid.GestureRecognizers>

								<Border
									Grid.Column="0"
									Style="{StaticResource PopupOutlinedBorderStyle}">

									<Label x:Name="InnerCode1"
										Style="{StaticResource PopupOutlinedLabelStyle}" />
								</Border>

								<Border
									Grid.Column="2"
									Style="{StaticResource PopupOutlinedBorderStyle}">

									<Label x:Name="InnerCode2"
										Style="{StaticResource PopupOutlinedLabelStyle}" />
								</Border>

								<Border
									Grid.Column="4"
									Style="{StaticResource PopupOutlinedBorderStyle}">

									<Label x:Name="InnerCode3"
										Style="{StaticResource PopupOutlinedLabelStyle}" />
								</Border>

								<Border
									Grid.Column="6"
									Style="{StaticResource PopupOutlinedBorderStyle}">

									<Label x:Name="InnerCode4"
										Style="{StaticResource PopupOutlinedLabelStyle}" />
								</Border>

								<Border
									Grid.Column="8"
									Style="{StaticResource PopupOutlinedBorderStyle}">

									<Label x:Name="InnerCode5"
										Style="{StaticResource PopupOutlinedLabelStyle}" />
								</Border>

								<Border
									Grid.Column="10"
									Style="{StaticResource PopupOutlinedBorderStyle}">

									<Label x:Name="InnerCode6"
										Style="{StaticResource PopupOutlinedLabelStyle}" />
								</Border>
							</Grid>
						</VerticalStackLayout>
					</VerticalStackLayout>

					<Grid
						ColumnDefinitions="*,auto"
						ColumnSpacing="{StaticResource MediumSpacing}"
						RowDefinitions="auto">

						<!--  The entry is sized over the buttons below so they will be shown on a small device when the entry is focused  -->
						<!--  The entry is hidden and input transparent, the grid abbove will respond to the tap gesture  -->
						<Entry x:Name="InnerCodeEntry"
							Grid.ColumnSpan="2"
							HorizontalOptions="Fill"
							VerticalOptions="Fill"
							ClearButtonVisibility="Never"
							HorizontalTextAlignment="Center"
							InputTransparent="True"
							IsSpellCheckEnabled="False"
							IsTextPredictionEnabled="False"
							Keyboard="Numeric"
							Opacity="0"
							TextChanged="InnerCodeEntry_TextChanged"
							VerticalTextAlignment="End" />

						<controls:OutlinedButton
							Grid.Column="0"
							HorizontalOptions="FillAndExpand"
							Command="{Binding CodeVerification.ResendCodeCommand}"
							Text="{Binding LocalizedResendCodeText}" />

						<controls:FilledButton
							Grid.Column="1"
							HorizontalOptions="FillAndExpand"
							Command="{Binding VerifyCommand}"
							Text="{l:Localize Verify}" />
					</Grid>
				</VerticalStackLayout>
			</ScrollView>
		</Border>
	</Grid>

	<!--
	<AbsoluteLayout
		HorizontalOptions="Center"
		VerticalOptions="Center">
		<Frame
			HorizontalOptions="FillAndExpand"
			Style="{StaticResource PopupFrame}">
			<StackLayout
				Padding="{StaticResource DefaultMargin}"
				HorizontalOptions="FillAndExpand"
				Spacing="12">
				<Label x:Name="TextLabel" />

				<Entry x:Name="Code"
					ClearButtonVisibility="WhileEditing"
					Completed="OnEnter"
					IsPassword="True"
					Keyboard="Plain"
					Placeholder="{l:Localize VerificationCode}"
					PropertyChanged="Code_PropertyChanged"
					ReturnType="Done" />

				<Button x:Name="EnterButton"
					Clicked="OnEnter"
					Text="{l:Localize VerifyCode}" />
			</StackLayout>
		</Frame>
	</AbsoluteLayout>
	-->
</viewmodel:BasePopup>
