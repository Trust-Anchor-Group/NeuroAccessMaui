<?xml version="1.0" encoding="UTF-8" ?>
<Shell x:Class="NeuroAccessMaui.UI.Pages.Main.AppShell"
		 x:DataType="viewmodel:AppShellViewModel"
		 xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
		 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
		 xmlns:l="clr-namespace:NeuroAccessMaui.Services.Localization"
		 xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
		 xmlns:viewmodel="clr-namespace:NeuroAccessMaui.UI.Pages.Main"
		 xmlns:main="clr-namespace:NeuroAccessMaui.UI.Pages.Main"
		 xmlns:registration="clr-namespace:NeuroAccessMaui.UI.Pages.Registration"
		 FlyoutBehavior="Flyout"
		 FlyoutHeaderBehavior="Scroll"
		 FlyoutBackgroundColor="{AppThemeBinding Light={StaticResource PrimaryBackgroundLight}, Dark={StaticResource PrimaryBackgroundDark}}">

	<ShellContent ContentTemplate="{DataTemplate registration:RegistrationPage}"
					  FlyoutItemIsVisible="False"
					  Route="Registration" />

	<ShellContent ContentTemplate="{DataTemplate main:MainPage}"
					  FlyoutItemIsVisible="false"
					  Route="MainPage" />

	<MenuItem Text="{l:Localize ViewId}" Command="{Binding ViewIdCommand}" StyleId="MenuItemLabel"
				 IconImageSource="{AppThemeBinding Light=view_id_light, Dark=view_id_dark}"/>

	<MenuItem Text="{l:Localize MyContracts}" Command="{Binding ShowMyContractsCommand}" StyleId="MenuItemLabel"
				 Shell.FlyoutItemIsVisible="{Binding CanShowMyContractsCommand, Mode=TwoWay}"
				 IconImageSource="{AppThemeBinding Light=contract_light, Dark=contract_dark}"/>

	<MenuItem Text="{l:Localize Applications}" Command="{Binding ShowApplicationsCommand}" StyleId="MenuItemLabel"
				 IconImageSource="{AppThemeBinding Light=neuro_access_light, Dark=neuro_access_dark}"/>

	<MenuItem Text="{l:Localize Settings}" Command="{Binding ShowSettingsCommand}" StyleId="MenuItemLabel"
				 IconImageSource="{AppThemeBinding Light=settings_light, Dark=settings_dark}"/>

	<MenuItem Text="{l:Localize Close}" Command="{Binding CloseCommand}" StyleId="MenuItemLabel"
				 IconImageSource="{AppThemeBinding Light=close_light, Dark=close_dark}" />

	<VisualElement.Behaviors>
		<mct:StatusBarBehavior StatusBarColor="{AppThemeBinding Light={StaticResource PrimaryBackgroundLight}, Dark={StaticResource PrimaryBackgroundDark}}"
									  StatusBarStyle="{AppThemeBinding Light='DarkContent', Dark='LightContent'}" />
	</VisualElement.Behaviors>

	<Shell.Resources>
		<ResourceDictionary>
			<Style x:Key="BaseStyle" TargetType="Element">
				<Setter Property="Shell.BackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryBackgroundLight}, Dark={StaticResource PrimaryBackgroundDark}}" />
				<Setter Property="Shell.ForegroundColor" Value="{AppThemeBinding Light={StaticResource SelectedForegroundLight}, Dark={StaticResource SelectedForegroundDark}}" />
				<Setter Property="Shell.TitleColor" Value="{AppThemeBinding Light={StaticResource PrimaryForegroundLight}, Dark={StaticResource PrimaryForegroundDark}}" />
				<Setter Property="Shell.DisabledColor" Value="{AppThemeBinding Light={StaticResource DisabledFilledButtonForegroundLight}, Dark={StaticResource DisabledFilledButtonForegroundDark}}" />
				<Setter Property="Shell.UnselectedColor" Value="{AppThemeBinding Light={StaticResource PrimaryForegroundLight}, Dark={StaticResource PrimaryForegroundDark}}" />
				<Setter Property="Shell.TabBarBackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryBackgroundLight}, Dark={StaticResource PrimaryBackgroundDark}}" />
				<Setter Property="Shell.TabBarForegroundColor" Value="{AppThemeBinding Light={StaticResource SelectedForegroundLight}, Dark={StaticResource SelectedForegroundDark}}"/>
				<Setter Property="Shell.TabBarUnselectedColor" Value="{AppThemeBinding Light={StaticResource PrimaryForegroundLight}, Dark={StaticResource PrimaryForegroundDark}}"/>
				<Setter Property="Shell.TabBarTitleColor" Value="{AppThemeBinding Light={StaticResource PrimaryForegroundLight}, Dark={StaticResource PrimaryForegroundDark}}"/>
			</Style>
			<Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
			<Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

			<Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
				<Setter Property="VisualStateManager.VisualStateGroups">
					<VisualStateGroupList>
						<VisualStateGroup x:Name="CommonStates">
							<VisualState x:Name="Normal">
								<VisualState.Setters>
									<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryBackgroundLight}, Dark={StaticResource PrimaryBackgroundDark}}" />
									<Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryForegroundLight}, Dark={StaticResource PrimaryForegroundDark}}" />
								</VisualState.Setters>
							</VisualState>
							<VisualState x:Name="Selected">
								<VisualState.Setters>
									<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryBackgroundLight}, Dark={StaticResource PrimaryBackgroundDark}}" />
									<Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryForegroundLight}, Dark={StaticResource PrimaryForegroundDark}}" />
								</VisualState.Setters>
							</VisualState>
						</VisualStateGroup>
					</VisualStateGroupList>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Shell.Resources>

	<Shell.FlyoutHeader>
		<Frame Style="{StaticResource ShellFrame}" Padding="1" CornerRadius="0">
			<Grid HeightRequest="200">
				<Image Aspect="AspectFill" WidthRequest="144" HeightRequest="144" Source="flyout_header" />
			</Grid>
		</Frame>
	</Shell.FlyoutHeader>

	<!-- The main or root page of the app -->
</Shell>
