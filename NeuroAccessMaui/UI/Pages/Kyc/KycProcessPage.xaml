<?xml version="1.0" encoding="utf-8" ?>
<base:BaseContentPage x:Class="NeuroAccessMaui.UI.Pages.Kyc.KycProcessPage"
					  xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
					  xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
					  xmlns:base="clr-namespace:NeuroAccessMaui.UI.Pages"
					  xmlns:controls="clr-namespace:NeuroAccessMaui.UI.Controls"
					  xmlns:converters="clr-namespace:NeuroAccessMaui.UI.Converters"
					  xmlns:local="clr-namespace:NeuroAccessMaui.UI.Pages.Kyc"
					  xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
					  xmlns:models="clr-namespace:NeuroAccessMaui.Services.Kyc.Models"
					  xmlns:fields="clr-namespace:NeuroAccessMaui.Services.Kyc.ViewModels"
					  xmlns:viewmodel="clr-namespace:NeuroAccessMaui.UI.Pages.Kyc"
					  xmlns:ui="clr-namespace:NeuroAccessMaui.UI"
					  x:DataType="viewmodel:KycProcessViewModel">

	<ContentPage.Resources>
		<ResourceDictionary>
			<Style TargetType="Label"
				   x:Key="SectionHeaderLabel">
				<Setter Property="FontSize"
						Value="24" />
			</Style>
			
			<!--  Field Styles  -->
			<Style x:Key="FieldKeyLabel" TargetType="Label">
				<Setter Property="FontSize" Value="14" />
				<Setter Property="FontFamily" Value="SpaceGroteskRegular" />
				<Setter Property="TextColor" Value="{DynamicResource ContentSecondaryWL}" />
			</Style>
			<Style x:Key="FieldValueLabel" TargetType="Label">
				<Setter Property="FontSize" Value="16" />
				<Setter Property="FontFamily" Value="SpaceGroteskRegular" />
				<Setter Property="TextColor" Value="{DynamicResource ContentPrimaryWL}" />
			</Style>
			<Style x:Key="FieldTitleLabel" TargetType="Label">
				<Setter Property="FontSize" Value="18" />
				<Setter Property="FontFamily" Value="SpaceGroteskBold" />
				<Setter Property="TextColor" Value="{DynamicResource ContentPrimaryWL}" />
			</Style>
			<Style x:Key="PageTitleLabel" TargetType="Label">
				<Setter Property="FontSize" Value="26" />
				<Setter Property="FontFamily" Value="SpaceGroteskBold" />
				<Setter Property="TextColor" Value="{DynamicResource ContentPrimaryWL}" />
			</Style>
			
			<Style x:Key="FileIconBorder" TargetType="Border">
				<Setter Property="Background" Value="{DynamicResource BrandColorsNeuroAccessv500WL}" />
				<Setter Property="StrokeShape" Value="RoundRectangle 8" />
				<Setter Property="Stroke" Value="Transparent"/>
				<Setter Property="WidthRequest" Value="40"/>
				<Setter Property="HeightRequest" Value="40"/>
			</Style>

			<!-- Text field template -->
			<DataTemplate x:Key="TextFieldTemplate"
						  x:DataType="fields:ObservableGenericField">
				<VerticalStackLayout Spacing="2">
					<controls:CompositeEntry EntryData="{Binding StringValue, Mode=TwoWay}"
											 LabelText="{Binding Label.Text}"
											 Placeholder="{Binding Placeholder.Text}"
											 Style="{DynamicResource RegularCompositeEntry}"
											 Required="{Binding Required}"
											 IsValid="{Binding IsValid}"
											 ValidationText="{Binding ValidationText}" />
				</VerticalStackLayout>
			</DataTemplate>
			<!-- Date field template -->
			<DataTemplate x:Key="DateFieldTemplate"
						  x:DataType="fields:ObservableDateField">
				<VerticalStackLayout Spacing="2">
					<controls:CompositeDatePicker LabelText="{Binding Label.Text}"
												  NullableDate="{Binding DateValue, Mode=TwoWay}"
												  Placeholder="{Binding Placeholder.Text}"
												  Style="{DynamicResource RegularCompositeDatePicker}"
												  Required="{Binding Required}"
												  IsValid="{Binding IsValid}"
												  ValidationText="{Binding ValidationText}" />
				</VerticalStackLayout>
			</DataTemplate>
			<!-- Integer field template -->
			<DataTemplate x:Key="IntegerFieldTemplate"
						  x:DataType="fields:ObservableIntegerField">
				<VerticalStackLayout Spacing="2">
					<controls:CompositeEntry EntryData="{Binding IntValue, Mode=TwoWay}"
											 LabelText="{Binding Label.Text}"
											 Placeholder="{Binding Placeholder.Text}"
											 Keyboard="Numeric"
											 Style="{DynamicResource RegularCompositeEntry}"
											 Required="{Binding Required}"
											 IsValid="{Binding IsValid}"
											 ValidationText="{Binding ValidationText}" />
				</VerticalStackLayout>
			</DataTemplate>
			<!-- Decimal field template -->
			<DataTemplate x:Key="DecimalFieldTemplate"
						  x:DataType="fields:ObservableDecimalField">
				<VerticalStackLayout Spacing="2">
					<controls:CompositeEntry EntryData="{Binding DecimalValue, Mode=TwoWay}"
											 LabelText="{Binding Label.Text}"
											 Placeholder="{Binding Placeholder.Text}"
											 Keyboard="Numeric"
											 Style="{DynamicResource RegularCompositeEntry}"
											 Required="{Binding Required}"
											 IsValid="{Binding IsValid}"
											 ValidationText="{Binding ValidationText}" />
				</VerticalStackLayout>
			</DataTemplate>
			<!-- Picker field template -->
			<DataTemplate x:Key="PickerFieldTemplate"
						  x:DataType="fields:ObservablePickerField">
				<VerticalStackLayout Spacing="2">
					<controls:CompositePicker ItemsSource="{Binding Options}"
											  LabelText="{Binding Label.Text}"
											  Placeholder="{Binding Placeholder.Text}"
											  SelectedItem="{Binding SelectedOption, Mode=TwoWay}"
											  Style="{DynamicResource RegularCompositePicker}"
											  Required="{Binding Required}"
											  IsValid="{Binding IsValid}"
											  ValidationText="{Binding ValidationText}">
						<controls:CompositePicker.ItemDisplayBinding>
							<Binding Path="Label.Text" />
						</controls:CompositePicker.ItemDisplayBinding>
					</controls:CompositePicker>
				</VerticalStackLayout>
			</DataTemplate>
			<!-- Radio field template -->
			<DataTemplate x:Key="RadioFieldTemplate"
						  x:DataType="fields:ObservableRadioField">
				<VerticalStackLayout Spacing="2">
					<controls:CompositePicker ItemsSource="{Binding Options}"
											  LabelText="{Binding Label.Text}"
											  Placeholder="{Binding Placeholder.Text}"
											  SelectedItem="{Binding SelectedOption, Mode=TwoWay}"
											  Style="{DynamicResource RegularCompositePicker}"
											  Required="{Binding Required}"
											  IsValid="{Binding IsValid}"
											  ValidationText="{Binding ValidationText}">
						<controls:CompositePicker.ItemDisplayBinding>
							<Binding Path="Label.Text" />
						</controls:CompositePicker.ItemDisplayBinding>
					</controls:CompositePicker>
				</VerticalStackLayout>
			</DataTemplate>
			<!-- Country field template -->
			<DataTemplate x:Key="CountryFieldTemplate"
						  x:DataType="fields:ObservableCountryField">
				<VerticalStackLayout Spacing="2">
					<controls:CompositePicker ItemsSource="{Binding Options}"
											  LabelText="{Binding Label.Text}"
											  Placeholder="{Binding Placeholder.Text}"
											  SelectedItem="{Binding CountryCode, Mode=TwoWay}"
											  Style="{DynamicResource RegularCompositePicker}"
											  Required="{Binding Required}"
											  IsValid="{Binding IsValid}"
											  ValidationText="{Binding ValidationText}" />
				</VerticalStackLayout>
			</DataTemplate>
			<!-- Checkbox field template using TemplatedSelector -->
			<DataTemplate x:Key="CheckboxFieldTemplate"
						  x:DataType="fields:ObservableCheckboxField">
				<controls:CompositeInputView LabelText="{Binding Label.Text}"
											 Style="{DynamicResource BaseCompositeInputView}"
											 Required="{Binding Required}"
											 IsValid="{Binding IsValid}"
											 ValidationText="{Binding ValidationText}">
					<controls:CompositeInputView.CenterView>
						<controls:TemplatedSelector ItemsSource="{Binding Options}"
													SelectedItems="{Binding SelectedOptions, Mode=TwoWay}"
													SelectionMode="Multiple">
							<controls:TemplatedSelector.ItemTemplate>
								<DataTemplate x:DataType="controls:SelectableKycOption">
									<HorizontalStackLayout Spacing="8">
										<CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}" />
										<Label Text="{Binding Item.Label.Text}"
											   VerticalTextAlignment="Center" />
									</HorizontalStackLayout>
								</DataTemplate>
							</controls:TemplatedSelector.ItemTemplate>
						</controls:TemplatedSelector>
					</controls:CompositeInputView.CenterView>
				</controls:CompositeInputView>
			</DataTemplate>
			<!-- Boolean (switch) field template -->
			<DataTemplate x:Key="BooleanFieldTemplate"
						  x:DataType="fields:ObservableBooleanField">
				<controls:CompositeInputView LabelText="{Binding Label.Text}"
											 Style="{DynamicResource BaseCompositeInputView}"
											 Required="{Binding Required}"
											 IsValid="{Binding IsValid}"
											 ValidationText="{Binding ValidationText}">
					<controls:CompositeInputView.CenterView>
						<Grid ColumnDefinitions="auto,*">
							<Switch IsToggled="{Binding BoolValue, Mode=TwoWay}"
									Grid.Column="0" />
							<Label Grid.Column="1"
								   FontSize="Small"
								   Text="{Binding Hint.Text}"
								   VerticalOptions="Center"
								   TextColor="Gray" />
						</Grid>
					</controls:CompositeInputView.CenterView>
				</controls:CompositeInputView>
			</DataTemplate>
			<!-- File upload field template -->
			<DataTemplate x:Key="FileUploadFieldTemplate"
						  x:DataType="fields:ObservableFileField">
				<Grid ColumnDefinitions="*,auto,auto,*"
					  ColumnSpacing="{DynamicResource SmallSpacing}"
					  RowDefinitions="auto,auto,auto,*"
					  RowSpacing="{DynamicResource SmallSpacing}">
					<Border Grid.Row="0"
							Grid.RowSpan="4"
							Grid.Column="1"
							Margin="0"
							Padding="0"
							BackgroundColor="{DynamicResource TnPDangerbgWL}"
							HeightRequest="200"
							Style="{DynamicResource OutlinedImageButtonBorder}"
							VerticalOptions="Start"
							WidthRequest="200">
						<Image Aspect="AspectFill"
							   Source="photo_placeholder">
						</Image>
					</Border>
					<controls:ImageButton Grid.Row="0"
										  Grid.Column="2"
										  PathData="{x:Static ui:Geometries.CameraPhotoButtonPath}"
										  Style="{DynamicResource OutlinedImageButton}" />
					<controls:ImageButton Grid.Row="1"
										  Grid.Column="2"
										  PathData="{x:Static ui:Geometries.CameraImageButtonPath}"
										  Style="{DynamicResource OutlinedImageButton}" />
					<controls:ImageButton Grid.Row="2"
										  Grid.Column="2"
										  PathData="{x:Static ui:Geometries.TrashCanButtonPath}"
										  Style="{DynamicResource OutlinedImageButton}" />
				</Grid>
			</DataTemplate>
			<!-- Image upload field template -->
			<DataTemplate x:Key="ImageUploadTemplate"
						  x:DataType="fields:ObservableImageField">
				<Grid RowDefinitions="auto, auto"
					  ColumnDefinitions="*,*"
					  ColumnSpacing="16"
					  RowSpacing="8">
					<Border Grid.Row="0"
							Grid.ColumnSpan="2"
							StrokeShape="RoundRectangle 8"
							Stroke="{DynamicResource BrandColorsGreyScalesGreyv250}"
							StrokeDashArray="1,1">
						<controls:AspectRatioLayout AspectRatio="{Binding AspectRatio}">
							<controls:ConditionView Condition="{Binding ImageSource, Converter={mct:IsNullConverter}}">
								<controls:ConditionView.True>
									<!-- Here we can have a image and label, you can create a converter to pick image/svg/label based on the specialType -->
									<Label VerticalOptions="Center"
										   HorizontalOptions="Center"
										   Text="{Binding Placeholder.Text}" />
								</controls:ConditionView.True>
								<controls:ConditionView.False>
									<Image Source="{Binding ImageSource}"
										   Aspect="AspectFit"
										   BackgroundColor="{DynamicResource SurfaceBackgroundWL}" />
								</controls:ConditionView.False>
							</controls:ConditionView>
						</controls:AspectRatioLayout>
					</Border>
					<controls:TextButton Style="{DynamicResource TransparentTextButton}"
										 LabelData="Upload"
										 Command="{Binding PickPhotoCommand}"
										 Grid.Row="1"
										 Grid.Column="0" />
					<controls:TextButton Style="{DynamicResource TransparentTextButton}"
										 LabelData="Camera"
										 Command="{Binding TakePhotoCommand}"
										 Grid.Row="1"
										 Grid.Column="1" />
				</Grid>
			</DataTemplate>
			
			<!-- Label field template -->
			<DataTemplate x:Key="LabelFieldTemplate"
						  x:DataType="fields:ObservableLabelField">
				<Grid>
					<Label Text="{Binding Label.Text}"
					   FontAttributes="Bold"
					   FontSize="Medium" />
				</Grid>
			</DataTemplate>

			<!-- Info field template -->
			<DataTemplate x:Key="InfoFieldTemplate"
						  x:DataType="fields:ObservableInfoField">
				<Grid>
					<Label Text="{Binding Label.Text}"
						   FontSize="Medium" />
				</Grid>
			</DataTemplate>

			<!-- Read-only Text field template -->
			<DataTemplate x:Key="ReadOnlyTextFieldTemplate" x:DataType="fields:ObservableGenericField">
				<VerticalStackLayout>
					<Label Text="{Binding Label.Text}" Style="{DynamicResource FieldKeyLabel}" />
					<Label Text="{Binding StringValue}" Style="{DynamicResource FieldValueLabel}" />
				</VerticalStackLayout>
			</DataTemplate>

			<!-- Read-only Date field template -->
			<DataTemplate x:Key="ReadOnlyDateFieldTemplate" x:DataType="fields:ObservableDateField">
				<VerticalStackLayout>
					<Label Text="{Binding Label.Text}" Style="{DynamicResource FieldKeyLabel}" />
					<Label Text="{Binding StringValue, StringFormat='{0:yyyy-MM-dd}'}" Style="{DynamicResource FieldValueLabel}" />
				</VerticalStackLayout>
			</DataTemplate>

			<!-- Read-only Integer field template -->
			<DataTemplate x:Key="ReadOnlyIntegerFieldTemplate" x:DataType="fields:ObservableIntegerField">
				<VerticalStackLayout>
					<Label Text="{Binding Label.Text}" Style="{DynamicResource FieldKeyLabel}" />
					<Label Text="{Binding StringValue}" Style="{DynamicResource FieldValueLabel}" />
				</VerticalStackLayout>
			</DataTemplate>

			<!-- Read-only Decimal field template -->
			<DataTemplate x:Key="ReadOnlyDecimalFieldTemplate" x:DataType="fields:ObservableDecimalField">
				<VerticalStackLayout>
					<Label Text="{Binding Label.Text}" Style="{DynamicResource FieldKeyLabel}" />
					<Label Text="{Binding StringValue}" Style="{DynamicResource FieldValueLabel}" />
				</VerticalStackLayout>
			</DataTemplate>

			<!-- Read-only Picker field template -->
			<DataTemplate x:Key="ReadOnlyPickerFieldTemplate" x:DataType="fields:ObservablePickerField">
				<VerticalStackLayout>
					<Label Text="{Binding Label.Text}" Style="{DynamicResource FieldKeyLabel}" />
					<Label Text="{Binding SelectedOption.Label.Text}" Style="{DynamicResource FieldValueLabel}" />
				</VerticalStackLayout>
			</DataTemplate>

			<!-- Read-only Radio field template -->
			<DataTemplate x:Key="ReadOnlyRadioFieldTemplate" x:DataType="fields:ObservableRadioField">
				<VerticalStackLayout>
					<Label Text="{Binding Label.Text}" Style="{DynamicResource FieldKeyLabel}" />
					<Label Text="{Binding SelectedOption.Label.Text}" Style="{DynamicResource FieldValueLabel}" />
				</VerticalStackLayout>
			</DataTemplate>

			<!-- Read-only Country field template -->
			<DataTemplate x:Key="ReadOnlyCountryFieldTemplate" x:DataType="fields:ObservableCountryField">
				<VerticalStackLayout>
					<Label Text="{Binding Label.Text}" Style="{DynamicResource FieldKeyLabel}" />
					<Label Text="{Binding StringValue}" Style="{DynamicResource FieldValueLabel}" />
				</VerticalStackLayout>
			</DataTemplate>

			<!-- Read-only Checkbox field template (multi-select) -->
			<DataTemplate x:Key="ReadOnlyCheckboxFieldTemplate" x:DataType="fields:ObservableCheckboxField">
				<VerticalStackLayout>
					<Label Text="{Binding Label.Text}" Style="{DynamicResource FieldKeyLabel}" />
				</VerticalStackLayout>
			</DataTemplate>

			<!-- Read-only Boolean (switch) field template -->
			<DataTemplate x:Key="ReadOnlyBooleanFieldTemplate" x:DataType="fields:ObservableBooleanField">
				<VerticalStackLayout>
					<Label Text="{Binding Label.Text}" Style="{DynamicResource FieldKeyLabel}" />
				</VerticalStackLayout>
			</DataTemplate>

			<!-- Read-only File upload field template -->
			<DataTemplate x:Key="ReadOnlyFileUploadFieldTemplate" x:DataType="fields:ObservableFileField">
				<VerticalStackLayout>
					<Label Text="{Binding Label.Text}" Style="{DynamicResource FieldKeyLabel}" />
				</VerticalStackLayout>
			</DataTemplate>

			<!-- Read-only Image upload field template -->
			<DataTemplate x:Key="ReadOnlyImageUploadFieldTemplate" x:DataType="fields:ObservableImageField">
				<VerticalStackLayout>
					<Label Text="{Binding Label.Text}" Style="{DynamicResource FieldKeyLabel}" />
					<Border Style="{DynamicResource BorderSet}">
						<Grid ColumnDefinitions="auto, *" ColumnSpacing="{DynamicResource SmallSpacing}">
							<Border Style="{DynamicResource FileIconBorder}">
								<controls:SvgView Source="gallery.svg" HeightRequest="24"/>
							</Border>
							<Label Grid.Column="1" Text="{Binding Label.Text}" Style="{DynamicResource FieldTitleLabel}" HorizontalOptions="Center" VerticalOptions="Center"/>
						</Grid>
					</Border>
				</VerticalStackLayout>
			</DataTemplate>

			<!-- Read-only Label field template -->
			<DataTemplate x:Key="ReadOnlyLabelFieldTemplate" x:DataType="fields:ObservableLabelField">
				<Label Text="{Binding Label.Text}"
					   Style="{DynamicResource FieldKeyLabel}"
					   FontSize="Medium" />
			</DataTemplate>

			<!-- Read-only Info field template -->
			<DataTemplate x:Key="ReadOnlyInfoFieldTemplate" x:DataType="fields:ObservableInfoField">
				<Label Text="..."
					   Style="{DynamicResource FieldValueLabel}"
					   FontSize="Medium" />
			</DataTemplate>

			<local:KycFieldTemplateSelector x:Key="KycFieldTemplateSelector"
											BooleanFieldTemplate="{StaticResource BooleanFieldTemplate}"
											DateFieldTemplate="{StaticResource DateFieldTemplate}"
											PickerFieldTemplate="{StaticResource PickerFieldTemplate}"
											IntegerFieldTemplate="{StaticResource IntegerFieldTemplate}"
											DecimalFieldTemplate="{StaticResource DecimalFieldTemplate}"
											RadioFieldTemplate="{StaticResource RadioFieldTemplate}"
											CountryFieldTemplate="{StaticResource CountryFieldTemplate}"
											CheckboxFieldTemplate="{StaticResource CheckboxFieldTemplate}"
											TextFieldTemplate="{StaticResource TextFieldTemplate}"
											FileUploadFieldTemplate="{StaticResource FileUploadFieldTemplate}"
											ImageUploadFieldTemplate="{StaticResource ImageUploadTemplate}"
											LabelFieldTemplate="{StaticResource LabelFieldTemplate}"
											InfoFieldTemplate="{StaticResource InfoFieldTemplate}" />
			
			<local:KycFieldTemplateSelector x:Key="ReadOnlyKycFieldTemplateSelector"
											BooleanFieldTemplate="{StaticResource ReadOnlyBooleanFieldTemplate}"
											DateFieldTemplate="{StaticResource ReadOnlyDateFieldTemplate}"
											PickerFieldTemplate="{StaticResource ReadOnlyPickerFieldTemplate}"
											IntegerFieldTemplate="{StaticResource ReadOnlyIntegerFieldTemplate}"
											DecimalFieldTemplate="{StaticResource ReadOnlyDecimalFieldTemplate}"
											RadioFieldTemplate="{StaticResource ReadOnlyRadioFieldTemplate}"
											CountryFieldTemplate="{StaticResource ReadOnlyCountryFieldTemplate}"
											CheckboxFieldTemplate="{StaticResource ReadOnlyCheckboxFieldTemplate}"
											TextFieldTemplate="{StaticResource ReadOnlyTextFieldTemplate}"
											FileUploadFieldTemplate="{StaticResource ReadOnlyFileUploadFieldTemplate}"
											ImageUploadFieldTemplate="{StaticResource ReadOnlyImageUploadFieldTemplate}"
											LabelFieldTemplate="{StaticResource ReadOnlyLabelFieldTemplate}"
											InfoFieldTemplate="{StaticResource ReadOnlyInfoFieldTemplate}" />
			
		</ResourceDictionary>
	</ContentPage.Resources>

	<Grid Padding="0"
		  Margin="0"
		  RowDefinitions="Auto,*,Auto"
		  Background="{DynamicResource SurfaceBackgroundWL}">

		<Grid Grid.Row="0"
			  Margin="16,16,16,8"
			  ColumnDefinitions="*,auto,*"
			  RowDefinitions="*">
			<controls:SvgButton Grid.Row="0"
								Grid.Column="0"
								Command="{Binding PreviousCommand}"
								Style="{DynamicResource IconButton}"
								SvgSource="close.svg"
								HeightRequest="48"
								WidthRequest="48"
								HorizontalOptions="Start" />

			<controls:UriImage Grid.Row="0"
							   Grid.Column="1"
							   Aspect="AspectFit"
							   ErrorPlaceholder="neuro_b"
							   HorizontalOptions="Center"
							   Source="{Binding BannerUri}"
							   WidthRequest="100"
							   HeightRequest="24" />
		</Grid>

		<ScrollView Grid.Row="1"
					Padding="{DynamicResource SmallMargins}"
					VerticalOptions="Center">
			<controls:ConditionView Condition="{Binding ShouldViewSummary}">
				
				<controls:ConditionView.True>
					<VerticalStackLayout>
						<Label Style="{DynamicResource PageTitleLabel}" Text="Application summary" Margin="{DynamicResource MediumLeftRightMargins}"/>

						<!-- TODO: Replace with infobubble control -->
						<Border Grid.Row="0"
								BackgroundColor="{DynamicResource TnPInfobgWL}"
								Padding="{DynamicResource MediumMargins}"
								Margin="{DynamicResource SmallMargins}"
								StrokeShape="RoundRectangle 16,16,0,16">
							<Border.Shadow>
								<Shadow Brush="{DynamicResource SurfaceShadowColorWL}" Offset="0,4"/>
							</Border.Shadow>
							<Grid ColumnSpacing="{DynamicResource SmallSpacing}"
								  ColumnDefinitions="auto, *">
								<Path
									Grid.Column="0"
									Data="{x:Static ui:Geometries.InfoCirclePath}"
									Fill="{DynamicResource TnPInfoContentWL}"/>
								<Label
									Grid.Column="1"
									Text="Before finalizing, please read through and ensure everything is correct."
									Style="{DynamicResource InfoLabel}"
									TextColor="{DynamicResource TnPInfoContentWL}"/>
							</Grid>
						</Border>

						<Border Style="{DynamicResource BorderSet}">
							<VerticalStackLayout BindableLayout.ItemsSource="{Binding Pages}" Spacing="{DynamicResource MediumSpacing}">
								<BindableLayout.ItemTemplate>
									<!-- Template for each KYC Page -->
									<DataTemplate x:DataType="models:KycPage">
										<Border Style="{DynamicResource BorderSubSet}">
											<VerticalStackLayout>
												<!-- Fields directly on the page -->
												<VerticalStackLayout Spacing="8">
													<Label Text="{Binding Title.Text}" Style="{DynamicResource FieldTitleLabel}" />
													<VerticalStackLayout Spacing="{DynamicResource MediumSpacing}"
																			BindableLayout.ItemsSource="{Binding VisibleFields}"
																			BindableLayout.ItemTemplateSelector="{StaticResource ReadOnlyKycFieldTemplateSelector}"/>
												</VerticalStackLayout>
												<!-- Fields inside sections on the page -->
												<VerticalStackLayout Spacing="{DynamicResource MediumSpacing}" BindableLayout.ItemsSource="{Binding AllSections}">
													<BindableLayout.ItemTemplate>
														<DataTemplate x:DataType="models:KycSection">
															<VerticalStackLayout Spacing="{DynamicResource MediumSpacing}"
																				 BindableLayout.ItemsSource="{Binding VisibleFields}"
																				 BindableLayout.ItemTemplateSelector="{StaticResource ReadOnlyKycFieldTemplateSelector}"/>
														</DataTemplate>
													</BindableLayout.ItemTemplate>
												</VerticalStackLayout>
											</VerticalStackLayout>
										</Border>
									</DataTemplate>
								</BindableLayout.ItemTemplate>
							</VerticalStackLayout>
						</Border>
					</VerticalStackLayout>
				</controls:ConditionView.True>
				
				<controls:ConditionView.False>
					<!-- Page header -->
					<VerticalStackLayout Spacing="4" Margin="{DynamicResource SmallMargins}">
						<Label Style="{DynamicResource PageTitleLabel}"
								Text="{Binding CurrentPageTitle}" />
						<Label IsVisible="{Binding HasCurrentPageDescription}"
								Text="{Binding CurrentPageDescription}"
								Margin="0,0,0,16" />

						<!-- Direct fields -->
						<StackLayout IsVisible="{Binding CurrentPage.VisibleFields.Count, Converter={converters:GreaterThanZero}}"
										Spacing="8"
										BindableLayout.ItemsSource="{Binding CurrentPage.VisibleFields}"
										BindableLayout.ItemTemplateSelector="{StaticResource KycFieldTemplateSelector}" />

						<!-- Sections -->
						<StackLayout Spacing="24"
										BindableLayout.ItemsSource="{Binding CurrentPage.VisibleSections}">
							<BindableLayout.ItemTemplate>
								<DataTemplate x:DataType="models:KycSection">
									<VerticalStackLayout Spacing="8">
										<Label FontAttributes="Bold"
												IsVisible="{Binding Label, Converter={mct:IsNotNullConverter}}"
												Style="{DynamicResource SectionHeaderLabel}"
												Text="{Binding Label.Text}" />
										<Label FontAttributes="Bold"
												FontSize="Medium"
												IsVisible="{Binding Description, Converter={mct:IsNotNullConverter}}"
												Text="{Binding Description }" />
										<VerticalStackLayout BindableLayout.ItemsSource="{Binding VisibleFields}"
															 BindableLayout.ItemTemplateSelector="{StaticResource KycFieldTemplateSelector}"
															 Spacing="16" />
									</VerticalStackLayout>
								</DataTemplate>
							</BindableLayout.ItemTemplate>
						</StackLayout>
					</VerticalStackLayout>
				</controls:ConditionView.False>
				
			</controls:ConditionView>
		</ScrollView>

		<!-- Navigation bar -->
		<Border Style="{DynamicResource BottomBarBorder}"
				Grid.Row="2"
				Padding="16">
			<VerticalStackLayout Spacing="8">
				<Grid ColumnDefinitions="*, *">
					<Label Grid.Column="0"
						   Text="Progress" />
					<Label Grid.Column="1"
						   Text="{Binding ProgressPercent}"
						   HorizontalOptions="End" />
				</Grid>
				<controls:ProgressBar Progress="{Binding Progress}"
									  HeightRequest="10"
									  CornerRadius="10"
									  TrackBrush="{DynamicResource TnPAccent2bgWL}"
									  BarBrush="{DynamicResource TnPAccent2FigureWL}">
				</controls:ProgressBar>
				<Grid ColumnDefinitions="*, *" ColumnSpacing="{DynamicResource SmallSpacing}">
					<controls:TextButton LabelData="Back"
										 Style="{DynamicResource SecondaryButton}"
										 Command="{Binding GoBackCommand}"/>
					<controls:TextButton LabelData="{Binding NextButtonText}"
										 Style="{DynamicResource FilledTextButton}"
										 Command="{Binding NextCommand}"
										 Grid.Column="1"/>
				</Grid>
			</VerticalStackLayout>
		</Border>
	</Grid>
</base:BaseContentPage>
