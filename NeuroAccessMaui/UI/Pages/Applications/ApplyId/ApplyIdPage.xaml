<?xml version="1.0" encoding="utf-8" ?>
<base:BaseContentPage x:Class="NeuroAccessMaui.UI.Pages.Applications.ApplyId.ApplyIdPage"
							 xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
							 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
							 xmlns:base="clr-namespace:NeuroAccessMaui.UI.Pages"
							 xmlns:behaviors="clr-namespace:NeuroAccessMaui.UI.Behaviors"
							 xmlns:controls="clr-namespace:NeuroAccessMaui.UI.Controls"
							 xmlns:converters="clr-namespace:NeuroAccessMaui.UI.Converters"
							 xmlns:data="clr-namespace:NeuroAccessMaui.Services.Data"
							 xmlns:l="clr-namespace:NeuroAccessMaui.Services.Localization"
							 xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
							 xmlns:ui="clr-namespace:NeuroAccessMaui.UI"
							 xmlns:viewmodel="clr-namespace:NeuroAccessMaui.UI.Pages.Applications.ApplyId"
							 x:Name="ThisPage"
							 x:DataType="viewmodel:ApplyIdViewModel">

	<VisualElement.Resources>
		<converters:ConversionSequence x:Key="CountryCodeToFlagAndNameHyphenIfEmpty">
			<converters:CountryCodeToFlagAndName />
			<converters:HyphenIfEmpty />
		</converters:ConversionSequence>
		<converters:ConversionSequence x:Key="GenderCodeToSymbolAndLabelHyphenIfEmpty">
			<converters:GenderCodeToSymbolAndLabel />
			<converters:HyphenIfEmpty />
		</converters:ConversionSequence>

		<viewmodel:IdentityDocumentTypeConverter x:Key="IdentityDocumentTypeConverter" />
		<viewmodel:IdentityDocumentTypeToFrontVisibilityConverter x:Key="IdentityDocumentTypeToFrontVisibilityConverter" />
		<viewmodel:IdentityDocumentTypeToBackVisibilityConverter x:Key="IdentityDocumentTypeToBackVisibilityConverter" />
	</VisualElement.Resources>

	<Grid BackgroundColor="{DynamicResource SurfaceBackgroundWL}">

		<controls:Background />

		<ScrollView>
			<VerticalStackLayout Margin="{DynamicResource MediumSpacing}"
								 Spacing="{DynamicResource SmallSpacing}">
				<Grid ColumnDefinitions="Auto, *, Auto" Margin="{DynamicResource SmallLeftRightMargins}">
					<controls:SvgButton
							Grid.Row="0" Grid.Column="0"
							Command="{Binding GoBackCommand}"
							SvgSource="close.svg"
							Style="{DynamicResource IconButton}"/>
					<Label IsVisible="{Binding Organizational, Converter={StaticResource InvertedBoolConverter}}"
						   Style="{DynamicResource PageTitleLabel}"
						   Text="{l:Localize PersonalId}"
						   Grid.Column="1"
						   HorizontalOptions="End"/>
					<Label IsVisible="{Binding Organizational}"
						   Style="{DynamicResource PageTitleLabel}"
						   Text="{l:Localize OrganizationalId}"
						   Grid.Column="2"
						   HorizontalOptions="End"/>
				</Grid>

				<!--  Application Sent  -->
				<Border IsVisible="{Binding ApplicationSent}"
						  Style="{DynamicResource BorderSet}">
					<Grid>
						<VerticalStackLayout Spacing="{DynamicResource MediumSpacing}">
							<Label Style="{DynamicResource SectionTitleLabel}"
									 Text="{l:Localize Application}" />
							<Label Style="{DynamicResource InfoLabel}"
									 Text="{l:Localize IdApplicationSentDescription}" />
							<Label IsVisible="{Binding PeerReview}"
									 Style="{DynamicResource InfoLabel}"
									 Text="{l:Localize PeerReviewDescription}" />
							<Label IsVisible="{Binding PeerReview}"
									 Style="{DynamicResource InfoLabel}">
								<Label.FormattedText>
									<FormattedString>
										<Span Text="{l:Localize NrPeerReviews}" />
										<Span Text=" " />
										<Span FontAttributes="Bold"
												Text="{Binding NrReviews}" />
										<Span Text=" / " />
										<Span Text="{Binding NrReviewers}" />
									</FormattedString>
								</Label.FormattedText>
							</Label>

							<ActivityIndicator HorizontalOptions="Center"
													 IsRunning="{Binding IsBusy}"
													 IsVisible="{Binding IsBusy}"
													 VerticalOptions="Center" />

							<VerticalStackLayout
														Spacing="{DynamicResource SmallSpacing}">
								<controls:TextButton Command="{Binding ScanQrCodeCommand}"
															IsVisible="{Binding PeerReview}"
															LabelData="{l:Localize QrScanCode}"
															Style="{DynamicResource FilledTextButton}" />

								<controls:TextButton Command="{Binding RequestReviewCommand}"
															IsVisible="{Binding FeaturedPeerReviewers}"
															LabelData="{l:Localize FeaturedReviewers}"
															Style="{DynamicResource FilledTextButton}" />

								<controls:TextButton Command="{Binding RevokeApplicationCommand}"
															LabelData="{l:Localize RevokeApplication}"
															Style="{DynamicResource FilledTextButton}" />
							</VerticalStackLayout>
						</VerticalStackLayout>
					</Grid>
				</Border>

				<!--  Photos  -->
				<Border Style="{DynamicResource BorderSet}"
						IsVisible="{Binding ApplicationSent}">
					<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
						<Label Style="{DynamicResource SectionTitleLabel}"
								 Text="{l:Localize Photo}" />
						<Label Style="{DynamicResource InfoLabel}"
						       Text="{l:Localize PhotosSentDescription}" />
						<CarouselView ItemsSource="{Binding AllPhotos}"
						              HeightRequest="200" Loop="False" PeekAreaInsets="40"
										  IndicatorView="AllPhotosPhotosIndicator">
							<CarouselView.ItemTemplate>
								<DataTemplate>
									<Grid>
										<!--  Display the photo similar to the main photo display  -->
										<Border Padding="0"
										        HeightRequest="200"
										        Style="{DynamicResource OutlinedImageButtonBorder}"
										        WidthRequest="200">
											<Image Source="{Binding .}"
													 Aspect="AspectFill"
													 HeightRequest="200"
													 WidthRequest="200" />
										</Border>
									</Grid>
								</DataTemplate>
							</CarouselView.ItemTemplate>
						</CarouselView>
						<IndicatorView x:Name="AllPhotosPhotosIndicator"
						               Count="{Binding AdditionalPhotos.Count}"
						               IndicatorColor="LightGrey"
						               SelectedIndicatorColor="Black"
						               HorizontalOptions="Center" />
					</VerticalStackLayout>
				</Border>

				<Border Style="{DynamicResource BorderSet}"
						Margin="{DynamicResource SmallLeftRightTopMargins}"
				        IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}">
					<VerticalStackLayout Spacing="{DynamicResource MediumSpacing}">
						<Label Style="{DynamicResource SectionTitleLabel}"
							   Text="{l:Localize Photo}" />
						<Label Style="{DynamicResource InfoLabel}"
							   Text="{l:Localize PhotosDescription}" />
						<Grid ColumnDefinitions="*,auto,auto,*"
							  ColumnSpacing="{DynamicResource SmallSpacing}"
							  RowDefinitions="auto,auto,auto,*"
							  RowSpacing="{DynamicResource SmallSpacing}">
							<Border Grid.Row="0"
									  Grid.RowSpan="4"
									  Grid.Column="1"
									  Margin="0"
									  Padding="0"
									  BackgroundColor="{DynamicResource TnPDangerbgWL}"
									  HeightRequest="200"
									  Style="{DynamicResource OutlinedImageButtonBorder}"
									  VerticalOptions="Start"
									  WidthRequest="200">
								<Image Aspect="AspectFill">
									<Image.Triggers>
										<DataTrigger Binding="{Binding HasPhoto}"
														 TargetType="Image"
														 Value="True">
											<Setter Property="Source"
													  Value="{Binding Image}" />
											<Setter Property="Aspect"
													  Value="AspectFill" />

										</DataTrigger>
										<DataTrigger Binding="{Binding HasPhoto}"
														 TargetType="Image"
														 Value="False">
											<Setter Property="Source"
													  Value="photo_placeholder" />
											<Setter Property="Aspect"
													  Value="Center" />
										</DataTrigger>
									</Image.Triggers>
								</Image>
							</Border>

							<controls:ImageButton Grid.Row="0"
														 Grid.Column="2"
														 Command="{Binding TakePhotoCommand}"
														 PathData="{x:Static ui:Geometries.CameraPhotoButtonPath}"
														 Style="{DynamicResource OutlinedImageButton}" />

							<controls:ImageButton Grid.Row="1"
														 Grid.Column="2"
														 Command="{Binding PickPhotoCommand}"
														 PathData="{x:Static ui:Geometries.CameraImageButtonPath}"
														 Style="{DynamicResource OutlinedImageButton}" />

							<controls:ImageButton Grid.Row="2"
														 Grid.Column="2"
														 Command="{Binding RemovePhotoCommand}"
														 IsVisible="{Binding Path=HasPhoto}"
														 PathData="{x:Static ui:Geometries.TrashCanButtonPath}"
														 Style="{DynamicResource OutlinedImageButton}" />

						</Grid>
					</VerticalStackLayout>
				</Border>

				<!-- Identity Document Section -->
				<Border Style="{DynamicResource BorderSet}"
						IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}">
					<VerticalStackLayout Spacing="{DynamicResource MediumSpacing}">
						<Label Style="{DynamicResource SectionTitleLabel}"
							   Text="{l:Localize IdentityDocumentTitle}" />
						<Label Style="{DynamicResource InfoLabel}"
							   Text="{l:Localize IdentityDocumentDescription}" />

						<!-- Document Type Picker -->
						<controls:CompositePicker Style="{DynamicResource RegularCompositePicker}"
												  LabelText="{l:Localize SelectTypeOfDocument}"
												  ItemsSource="{Binding DocumentTypes}"
												  SelectedItem="{Binding DocumentType}"
												  ItemDisplayBinding="{Binding ., Converter={StaticResource IdentityDocumentTypeConverter}}" />

						<!-- Front Image Section -->
						<StackLayout IsVisible="{Binding DocumentType, Converter={StaticResource IdentityDocumentTypeToFrontVisibilityConverter}}">
							<Label Style="{DynamicResource SectionTitleLabel}"
									 Text="{l:Localize FrontOfDocument}" >
								<Label.Triggers>
									<!-- When MyEnumProperty equals YourEnumValue, set IsVisible to True -->
									<DataTrigger TargetType="Label"
									             Binding="{Binding DocumentType}"
									             Value="{x:Static viewmodel:IdentityDocumentType.Passport}">
										<Setter Property="IsVisible"
										        Value="False" />
									</DataTrigger>
								</Label.Triggers>
							</Label>
							<Label Style="{DynamicResource SectionTitleLabel}"
							       Text="{l:Localize FrontOfDocument_Passport}"
							       IsVisible="False">
								<Label.Triggers>
									<!-- When MyEnumProperty equals YourEnumValue, set IsVisible to True -->
									<DataTrigger TargetType="Label"
													 Binding="{Binding DocumentType}"
													 Value="{x:Static viewmodel:IdentityDocumentType.Passport}">
										<Setter Property="IsVisible"
										        Value="True" />
									</DataTrigger>
								</Label.Triggers>
							</Label>
							<Label Style="{DynamicResource InfoLabel}"
							       Text="{l:Localize IdentityDocumentDescription_Passport}"
							       IsVisible="False">
								<Label.Triggers>
									<!-- When MyEnumProperty equals YourEnumValue, set IsVisible to True -->
									<DataTrigger TargetType="Label"
									             Binding="{Binding DocumentType}"
									             Value="{x:Static viewmodel:IdentityDocumentType.Passport}">
										<Setter Property="IsVisible"
										        Value="True" />
									</DataTrigger>
								</Label.Triggers>
							</Label>
							<Grid ColumnDefinitions="200,Auto"
									ColumnSpacing="{DynamicResource SmallSpacing}"
									RowSpacing="{DynamicResource SmallSpacing}"
									HorizontalOptions="Center">
								<!-- Front Image -->
								<Border Grid.Column="0"
										  Margin="0"
										  Padding="0"
										  BackgroundColor="{DynamicResource TnPDangerbgWL}"
										  HeightRequest="200"
										  WidthRequest="200"
										  Style="{DynamicResource OutlinedImageButtonBorder}">
									<Grid ColumnDefinitions="*" RowDefinitions="*">
										<Image Aspect="AspectFill">
											<Image.Triggers>
												<DataTrigger Binding="{Binding HasProofOfIdFront}"
												             TargetType="Image"
												             Value="True">
													<Setter Property="Source"
													        Value="{Binding ProofOfIdFrontImage}" />
													<Setter Property="Aspect"
													        Value="AspectFill" />
												</DataTrigger>
											</Image.Triggers>
										</Image>
										<Path Data="{x:Static ui:Geometries.PassportPath}"
										      VerticalOptions="Center" HorizontalOptions="Center"
										      IsVisible="False" Aspect="Uniform"
												HeightRequest="64" WidthRequest="64">
											<Path.Fill>
												<SolidColorBrush Color="{DynamicResource InputFieldsContentSecondary}" />
											</Path.Fill>
											<Path.Triggers>
												<MultiTrigger TargetType="Path">
													<MultiTrigger.Conditions>
														<BindingCondition Binding="{Binding HasProofOfIdFront}"
														                  Value="False" />
														<BindingCondition Binding="{Binding DocumentType}"
														                  Value="{x:Static viewmodel:IdentityDocumentType.Passport}" />
													</MultiTrigger.Conditions>
													<Setter Property="IsVisible"
													        Value="True" />
												</MultiTrigger>
											</Path.Triggers>
										</Path>
									</Grid>

								</Border>
								<VerticalStackLayout Grid.Column="1"
															VerticalOptions="Start"
															Spacing="{DynamicResource SmallSpacing}">
									<controls:ImageButton Command="{Binding TakeProofOfIdFrontCommand}"
																 PathData="{x:Static ui:Geometries.CameraPhotoButtonPath}"
																 Style="{DynamicResource OutlinedImageButton}" />
									<controls:ImageButton Command="{Binding PickProofOfIdFrontCommand}"
																 PathData="{x:Static ui:Geometries.CameraImageButtonPath}"
																 Style="{DynamicResource OutlinedImageButton}" />
									<controls:ImageButton Command="{Binding RemoveProofOfIdFrontCommand}"
																 IsVisible="{Binding HasProofOfIdFront}"
																 PathData="{x:Static ui:Geometries.TrashCanButtonPath}"
																 Style="{DynamicResource OutlinedImageButton}" />
								</VerticalStackLayout>
							</Grid>
						</StackLayout>

						<!-- Back Image Section -->
						<StackLayout IsVisible="{Binding DocumentType, Converter={StaticResource IdentityDocumentTypeToBackVisibilityConverter}}">
							<Label Style="{DynamicResource SectionTitleLabel}"
									 Text="{l:Localize BackOfDocument}" />
							<Grid ColumnDefinitions="200,Auto"
									ColumnSpacing="{DynamicResource SmallSpacing}"
									RowSpacing="{DynamicResource SmallSpacing}"
									HorizontalOptions="Center">
								<!-- Back Image -->
								<Border Grid.Column="0"
										  Margin="0"
										  Padding="0"
										  BackgroundColor="{DynamicResource TnPDangerbgWL}"
										  HeightRequest="200"
										  WidthRequest="200"
										  Style="{DynamicResource OutlinedImageButtonBorder}">
									<Image Aspect="AspectFill">
										<Image.Triggers>
											<DataTrigger Binding="{Binding HasProofOfIdBack}"
															 TargetType="Image"
															 Value="True">
												<Setter Property="Source"
														  Value="{Binding ProofOfIdBackImage}" />
												<Setter Property="Aspect"
														  Value="AspectFill" />
											</DataTrigger>
										</Image.Triggers>
									</Image>
								</Border>
								<VerticalStackLayout Grid.Column="1"
															VerticalOptions="Start"
															Spacing="10">
									<controls:ImageButton Command="{Binding TakeProofOfIdBackCommand}"
																 PathData="{x:Static ui:Geometries.CameraPhotoButtonPath}"
																 Style="{DynamicResource OutlinedImageButton}" />
									<controls:ImageButton Command="{Binding PickProofOfIdBackCommand}"
																 PathData="{x:Static ui:Geometries.CameraImageButtonPath}"
																 Style="{DynamicResource OutlinedImageButton}" />
									<controls:ImageButton Command="{Binding RemoveProofOfIdBackCommand}"
																 IsVisible="{Binding HasProofOfIdBack}"
																 PathData="{x:Static ui:Geometries.TrashCanButtonPath}"
																 Style="{DynamicResource OutlinedImageButton}" />
								</VerticalStackLayout>
							</Grid>
						</StackLayout>

					</VerticalStackLayout>
				</Border>

				<Border Style="{DynamicResource BorderSet}"
						IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}">
					<Grid RowSpacing="{DynamicResource MediumSpacing}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<!-- Section Title -->
						<Label Grid.Row="0"
							Style="{DynamicResource SectionTitleLabel}"
							Text="{l:Localize AdditionalPhotosTitle}" />

						<!-- Description Label -->
						<Label Grid.Row="1"
							IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
							Style="{DynamicResource InfoLabel}"
							Text="{l:Localize AdditionalPhotosDescription}" />

						<!-- CarouselView for Additional Photos -->
						<CarouselView Grid.Row="2"
									ItemsSource="{Binding AdditionalPhotos}"
									PeekAreaInsets="25"
									IndicatorView="AdditionalPhotosIndicator"
									Loop="False" HeightRequest="200">
							<CarouselView.ItemTemplate>
								<DataTemplate x:DataType="viewmodel:ObservableAttachmentCard">
									<Grid>
										<Border Padding="0"
												HeightRequest="200"
												WidthRequest="200"
												Style="{DynamicResource OutlinedImageButtonBorder}">
											<Grid>
												<Image Aspect="AspectFill"
													Source="{Binding Image}" />
												<!-- Remove button overlay -->
												<controls:ImageButton Command="{Binding Path=RemoveAdditionalPhotoCommand, Source={RelativeSource AncestorType={x:Type viewmodel:ApplyIdViewModel}}}"
																	CommandParameter="{Binding .}"
																	PathData="{x:Static ui:Geometries.TrashCanButtonPath}"
																	Style="{DynamicResource OutlinedImageButton}"
																	HorizontalOptions="End"
																	VerticalOptions="Start" />
											</Grid>
										</Border>
									</Grid>
								</DataTemplate>
							</CarouselView.ItemTemplate>

						</CarouselView>

						<!-- IndicatorView for the Carousel -->
						<IndicatorView Grid.Row="3"
									x:Name="AdditionalPhotosIndicator"
									Count="{Binding AdditionalPhotos.Count}"
									IndicatorColor="LightGrey"
									SelectedIndicatorColor="Black"
									HorizontalOptions="Center" />

						<!-- Horizontal layout with buttons for adding photos -->
						<HorizontalStackLayout Grid.Row="4"
											HorizontalOptions="Center"
											Spacing="10">
							<controls:ImageButton Command="{Binding TakeAdditionalPhotoCommand}"
												PathData="{x:Static ui:Geometries.CameraPhotoButtonPath}"
												Style="{DynamicResource OutlinedImageButton}" />

							<controls:ImageButton Command="{Binding PickAdditionalPhotoCommand}"
												PathData="{x:Static ui:Geometries.CameraImageButtonPath}"
												Style="{DynamicResource OutlinedImageButton}" />
						</HorizontalStackLayout>
					</Grid>
				</Border>


				<!--  Personal Information  -->
				<Border Style="{DynamicResource BorderSet}">
					<VerticalStackLayout Spacing="{DynamicResource MediumSpacing}">
						<Label Style="{DynamicResource SectionTitleLabel}"
							   Text="{l:Localize PersonalInformation}"/>
						<Label IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
								 Style="{DynamicResource InfoLabel}"
								 Text="{l:Localize PersonalInformationDescription}" />
						<Label IsVisible="{Binding ApplicationSent}"
								 Style="{DynamicResource InfoLabel}"
								 Text="{l:Localize PersonalInformationSentDescription}" />

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout IsVisible="{Binding ApplicationSent}">
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize FirstName}" />
								<Label IsVisible="{Binding RequiresFirstName}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=FirstName}"
															 IsValid="{Binding FirstNameOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 LabelText="{l:Localize FirstName}"
															 Required="{Binding RequiresFirstName}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=FirstName, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout IsVisible="{Binding ApplicationSent}">
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize MiddleNames}" />
								<Label IsVisible="{Binding RequiresMiddleNames}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=MiddleNames}"
															 IsValid="{Binding MiddleNamesOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 LabelText="{l:Localize MiddleNames}"
															 Required="{Binding RequiresMiddleNames}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=MiddleNames, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout IsVisible="{Binding ApplicationSent}">
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize LastNames}" />
								<Label IsVisible="{Binding RequiresLastNames}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=LastNames}"
															 IsValid="{Binding LastNamesOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 LabelText="{l:Localize LastNames}"
															 Required="{Binding RequiresLastNames}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=LastNames, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout IsVisible="{Binding ApplicationSent}">
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize PersonalNumber}" />
								<Label IsVisible="{Binding RequiresPersonalNumber}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=PersonalNumber}"
															 IsValid="{Binding PersonalNumberOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 LabelText="{l:Localize PersonalNumber}"
															 Required="{Binding RequiresPersonalNumber}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=PersonalNumber, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout IsVisible="{Binding ApplicationSent}">
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize Address}" />
								<Label IsVisible="{Binding RequiresAddress}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=Address}"
															 IsValid="{Binding AddressOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 LabelText="{l:Localize Address}"
															 Required="{Binding RequiresAddress}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=Address, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout IsVisible="{Binding ApplicationSent}">
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize Address2}" />
								<Label IsVisible="{Binding RequiresAddress2}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=Address2}"
															 IsValid="{Binding Address2Ok}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 LabelText="{l:Localize Address2}"
															 Required="{Binding RequiresAddress2}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=Address2, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout IsVisible="{Binding ApplicationSent}">
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize ZipCode}" />
								<Label IsVisible="{Binding RequiresZipCode}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=ZipCode}"
															 IsValid="{Binding ZipCodeOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 LabelText="{l:Localize ZipCode}"
															 Required="{Binding RequiresZipCode}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=ZipCode, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout IsVisible="{Binding ApplicationSent}">
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize Area}" />
								<Label IsVisible="{Binding RequiresArea}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=Area}"
															 IsValid="{Binding AreaOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 LabelText="{l:Localize Area}"
															 Required="{Binding RequiresArea}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=Area, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout IsVisible="{Binding ApplicationSent}">
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize City}" />
								<Label IsVisible="{Binding RequiresCity}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=City}"
															 IsValid="{Binding CityOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 LabelText="{l:Localize City}"
															 Required="{Binding RequiresCity}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=City, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout IsVisible="{Binding ApplicationSent}">
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize Region}" />
								<Label IsVisible="{Binding RequiresRegion}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=Region}"
															 IsValid="{Binding RegionOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 LabelText="{l:Localize Region}"
															 Required="{Binding RequiresRegion}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=Region, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout>
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize Country}" />
								<Label IsVisible="{Binding RequiresCountry}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<Label Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=CountryCode, Converter={StaticResource CountryCodeToFlagAndNameHyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout>
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize Nationality}" />
								<Label IsVisible="{Binding RequiresNationality}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositePicker HorizontalOptions="Fill"
															  IsValid="{Binding NationalityOk}"
															  IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															  ItemsSource="{Binding Path=Countries}"
															  Placeholder="{l:Localize SelectNationality}"
															  SelectedItem="{Binding Path=Nationality}"
															  Style="{DynamicResource RegularCompositePicker}">
								<controls:CompositePicker.ItemDisplayBinding x:DataType="data:ISO_3166_Country">
									<Binding Converter="{converters:CountryCodeToFlagAndName}"
												Path="Alpha2" />
								</controls:CompositePicker.ItemDisplayBinding>
							</controls:CompositePicker>
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=NationalityCode, Converter={StaticResource CountryCodeToFlagAndNameHyphenIfEmpty}}" />
						</VerticalStackLayout>


						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout>
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize Gender}" />
								<Label IsVisible="{Binding RequiresGender}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositePicker HorizontalOptions="Fill"
															  IsValid="{Binding GenderOk}"
															  IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															  ItemsSource="{Binding Path=Genders}"
															  Placeholder="{l:Localize SelectGender}"
															  SelectedItem="{Binding Path=Gender}"
															  Style="{DynamicResource RegularCompositePicker}">
								<controls:CompositePicker.ItemDisplayBinding x:DataType="data:ISO_5218_Gender">
									<Binding Converter="{converters:GenderCodeToSymbolAndLabel}"
												Path="Code" />
								</controls:CompositePicker.ItemDisplayBinding>
							</controls:CompositePicker>
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=GenderCode, Converter={StaticResource GenderCodeToSymbolAndLabelHyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout>
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize BirthDate}" />
								<Label IsVisible="{Binding RequiresBirthDate}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeDatePicker HorizontalOptions="Fill"
																	IsValid="{Binding BirthDateOk}"
																	IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
																	MaximumDate="{Binding MaxBirthDate}"
																	MinimumDate="{Binding MinBirthDate}"
														  NullableDate="{Binding NullIfInvalidBirthDate}"
																	Placeholder="-"
																	Style="{DynamicResource RegularCompositeDatePicker}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=BirthDate, Converter={converters:DateToString}}" />
						</VerticalStackLayout>
					</VerticalStackLayout>
				</Border>

				<!--  Organizational Information  -->
				<Border IsVisible="{Binding Organizational}"
						Style="{DynamicResource BorderSet}">
					<VerticalStackLayout Spacing="{DynamicResource LargeSpacing}">
						<Label Style="{DynamicResource SectionTitleLabel}"
								 Text="{l:Localize OrganizationalInformation}" />
						<Label IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
								 Style="{DynamicResource InfoLabel}"
								 Text="{l:Localize OrganizationalInformationDescription}" />
						<Label IsVisible="{Binding ApplicationSent}"
								 Style="{DynamicResource InfoLabel}"
								 Text="{l:Localize OrganizationalInformationSentDescription}" />

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout>
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize OrgName}" />
								<Label IsVisible="{Binding RequiresOrgName}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=OrgName}"
															 IsValid="{Binding OrgNameOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=OrgName, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout>
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize OrgDepartment}" />
								<Label IsVisible="{Binding RequiresOrgDepartment}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=OrgDepartment}"
															 IsValid="{Binding OrgDepartmentOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=OrgDepartment, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout>
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize OrgRole}" />
								<Label IsVisible="{Binding RequiresOrgRole}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=OrgRole}"
															 IsValid="{Binding OrgRoleOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=OrgRole, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout>
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize OrgNumber}" />
								<Label IsVisible="{Binding RequiresOrgNumber}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=OrgNumber}"
															 IsValid="{Binding OrgNumberOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=OrgNumber, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout>
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize OrgAddress}" />
								<Label IsVisible="{Binding RequiresOrgAddress}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=OrgAddress}"
															 IsValid="{Binding OrgAddressOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=OrgAddress, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout>
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize OrgAddress2}" />
								<Label IsVisible="{Binding RequiresOrgAddress2}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=OrgAddress2}"
															 IsValid="{Binding OrgAddress2Ok}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=OrgAddress2, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout>
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize OrgZipCode}" />
								<Label IsVisible="{Binding RequiresOrgZipCode}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=OrgZipCode}"
															 IsValid="{Binding OrgZipCodeOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=OrgZipCode, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout>
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize OrgArea}" />
								<Label IsVisible="{Binding RequiresOrgArea}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=OrgArea}"
															 IsValid="{Binding OrgAreaOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=OrgArea, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout>
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize OrgCity}" />
								<Label IsVisible="{Binding RequiresOrgCity}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=OrgCity}"
															 IsValid="{Binding OrgCityOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 Style="{DynamicResource RegularCompositeEntry}" />
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=OrgCity, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout>
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize OrgRegion}" />
								<Label IsVisible="{Binding RequiresOrgRegion}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<controls:CompositeEntry EntryData="{Binding Path=OrgRegion}"
															 IsValid="{Binding OrgRegionOk}"
															 IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
															 Style="{DynamicResource RegularCompositeEntry}">
								<controls:CompositeEntry.Behaviors>
									<behaviors:HideKeyboardOnCompletedBehavior />
								</controls:CompositeEntry.Behaviors>
							</controls:CompositeEntry>
							<Label IsVisible="{Binding ApplicationSent}"
									 Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=OrgRegion, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<HorizontalStackLayout>
								<Label HorizontalOptions="Fill"
										 Text="{l:Localize OrgCountry}" />
								<Label IsVisible="{Binding RequiresOrgCountry}"
										 Style="{DynamicResource RequiredFieldMarker}" />
							</HorizontalStackLayout>
							<Label Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=OrgCountryCode, Converter={StaticResource CountryCodeToFlagAndNameHyphenIfEmpty}}" />
						</VerticalStackLayout>
					</VerticalStackLayout>
				</Border>

				<!--  Contact Information  -->
				<Border Style="{DynamicResource BorderSet}">
					<VerticalStackLayout Spacing="{DynamicResource MediumSpacing}">
						<Label Style="{DynamicResource SectionTitleLabel}"
							   Text="{l:Localize ContactInformation}" />
						<Label IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
							   Style="{DynamicResource InfoLabel}"
							   Text="{l:Localize ContactInformationDescription}" />
						<Label IsVisible="{Binding ApplicationSent}"
							   Style="{DynamicResource InfoLabel}"
							   Text="{l:Localize ContactInformationSentDescription}" />

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<Label HorizontalOptions="Fill"
								   Text="{l:Localize EMail}" />
							<Label Style="{DynamicResource BoldItemTitleLabel}"
								   Text="{Binding Path=EMail, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<Label HorizontalOptions="Fill"
									 Text="{l:Localize PhoneNr}" />
							<Label Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=PhoneNr, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<Label HorizontalOptions="Fill"
									 Text="{l:Localize NeuroAccessAccount}" />
							<Label Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=Jid, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>

						<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
							<Label HorizontalOptions="Fill"
									 Text="{l:Localize DeviceID}" />
							<Label Style="{DynamicResource BoldItemTitleLabel}"
									 Text="{Binding Path=DeviceId, Converter={converters:HyphenIfEmpty}}" />
						</VerticalStackLayout>
					</VerticalStackLayout>
				</Border>

				<!--  Apply  -->
				<Border Style="{DynamicResource BorderSet}">
					<Grid>
						<VerticalStackLayout IsVisible="{Binding ApplicationSent, Converter={StaticResource InvertedBoolConverter}}"
											 Spacing="{DynamicResource MediumSpacing}">
							<Label Style="{DynamicResource SectionTitleLabel}"
								   Text="{l:Localize Application}"/>
							<Label Style="{DynamicResource InfoLabel}"
									 Text="{l:Localize IdApplicationDescription}" />

							<Grid ColumnDefinitions="auto,*"
								  RowDefinitions="auto,auto"
								  RowSpacing="{DynamicResource MediumSpacing}">
								<CheckBox Grid.Row="0"
											 Grid.Column="0"
											 Margin="{DynamicResource SmallMargins}"
											 IsChecked="{Binding Consent}" />
								<Label Grid.Row="0"
										 Grid.Column="1"
										 Margin="{DynamicResource SmallLeftMargins}"
										 HorizontalOptions="Fill"
										 Text="{l:Localize ConsentDescription}">
									<Label.GestureRecognizers>
										<TapGestureRecognizer Command="{Binding ToggleConsentCommand}" />
									</Label.GestureRecognizers>
								</Label>

								<CheckBox Grid.Row="1"
											 Grid.Column="0"
											 Margin="{DynamicResource SmallMargins}"
											 IsChecked="{Binding Correct}" />
								<Label Grid.Row="1"
										 Grid.Column="1"
										 Margin="{DynamicResource SmallLeftMargins}"
										 HorizontalOptions="Fill"
										 Text="{l:Localize CorrectDescription}">
									<Label.GestureRecognizers>
										<TapGestureRecognizer Command="{Binding ToggleCorrectCommand}" />
									</Label.GestureRecognizers>
								</Label>
							</Grid>

							<ActivityIndicator HorizontalOptions="Center"
													 IsRunning="{Binding IsApplying}"
													 IsVisible="{Binding IsApplying}"
													 VerticalOptions="Center" />

							<controls:TextButton x:Name="ApplyButton"
														Command="{Binding ApplyCommand}"
														IsVisible="{Binding IsApplying, Converter={StaticResource InvertedBoolConverter}}"
														LabelData="{l:Localize SendApplication}"
														Style="{DynamicResource FilledTextButton}" />
						</VerticalStackLayout>
						<VerticalStackLayout IsVisible="{Binding ApplicationSent}"
											 Spacing="{DynamicResource MediumSpacing}">
							<Label Style="{DynamicResource SectionTitleLabel}"
								   Text="{l:Localize Application}"/>
							<Label Style="{DynamicResource InfoLabel}"
									 Text="{l:Localize IdApplicationSentDescription}" />
							<Label IsVisible="{Binding PeerReview}"
									 Style="{DynamicResource InfoLabel}"
									 Text="{l:Localize PeerReviewDescription}" />
							<Label IsVisible="{Binding PeerReview}"
									 Style="{DynamicResource InfoLabel}">
								<Label.FormattedText>
									<FormattedString>
										<Span Text="{l:Localize NrPeerReviews}" />
										<Span Text=" " />
										<Span FontAttributes="Bold"
												Text="{Binding NrReviews}" />
										<Span Text=" / " />
										<Span Text="{Binding NrReviewers}" />
									</FormattedString>
								</Label.FormattedText>
							</Label>

							<ActivityIndicator HorizontalOptions="Center"
													 IsRunning="{Binding IsBusy}"
													 IsVisible="{Binding IsBusy}"
													 VerticalOptions="Center" />

							<VerticalStackLayout Spacing="{DynamicResource SmallSpacing}">
								<controls:TextButton Command="{Binding ScanQrCodeCommand}"
															IsVisible="{Binding PeerReview}"
															LabelData="{l:Localize QrScanCode}"
															Style="{DynamicResource FilledTextButton}" />

								<controls:TextButton Command="{Binding RequestReviewCommand}"
															IsVisible="{Binding FeaturedPeerReviewers}"
															LabelData="{l:Localize FeaturedReviewers}"
															Style="{DynamicResource FilledTextButton}" />

								<controls:TextButton Command="{Binding RevokeApplicationCommand}"
															LabelData="{l:Localize RevokeApplication}"
															Style="{DynamicResource FilledTextButton}" />
							</VerticalStackLayout>
						</VerticalStackLayout>
					</Grid>
				</Border>
			</VerticalStackLayout>
		</ScrollView>
	</Grid>
</base:BaseContentPage>
