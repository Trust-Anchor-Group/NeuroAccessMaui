<?xml version="1.0" encoding="utf-8" ?>
<base:BaseContentPage
    x:Class="NeuroAccessMaui.UI.Pages.Identity.ViewIdentity.ViewIdentityPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:base="clr-namespace:NeuroAccessMaui.UI.Pages"
    xmlns:controls="clr-namespace:NeuroAccessMaui.UI.Controls"
    xmlns:converters="clr-namespace:NeuroAccessMaui.UI.Converters"
    xmlns:helpers="clr-namespace:NeuroAccessMaui.Helpers"
    xmlns:l="clr-namespace:NeuroAccessMaui.Services.Localization"
    xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:objectModel="clr-namespace:NeuroAccessMaui.UI.Pages.Identity.ObjectModel"
    xmlns:photos="clr-namespace:NeuroAccessMaui.Services.UI.Photos"
    xmlns:res="clr-namespace:NeuroAccessMaui.Resources.Languages;assembly=NeuroAccessMaui"
    xmlns:root="clr-namespace:NeuroAccessMaui"
    xmlns:skiaLottie="clr-namespace:SkiaSharp.Extended.UI.Controls;assembly=SkiaSharp.Extended.UI"
    xmlns:ui="clr-namespace:NeuroAccessMaui.UI"
    xmlns:viewmodel="clr-namespace:NeuroAccessMaui.UI.Pages.Identity.ViewIdentity"
    x:Name="ThisPage"
    x:DataType="viewmodel:ViewIdentityViewModel">

    <VisualElement.Resources>
        <Style
            x:Key="CardBorder"
            BasedOn="{StaticResource BorderSet}"
            TargetType="Border">
            <Setter Property="StrokeShape" Value="RoundRectangle 16" />
        </Style>
        <Style
            x:Key="FieldGroupBorder"
            BasedOn="{StaticResource BorderSubSet}"
            TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource SurfaceElevation2WL}" />
            <Setter Property="StrokeShape" Value="RoundRectangle 16" />
            <Setter Property="Margin" Value="16" />
            <Setter Property="Padding" Value="16" />
        </Style>
        <Style
            x:Key="QrBorder"
            BasedOn="{StaticResource BorderSet}"
            TargetType="Border">
            <Setter Property="Shadow" Value="{x:Null}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="StrokeShape" Value="RoundRectangle 16" />
            <Setter Property="WidthRequest" Value="175" />
            <Setter Property="HeightRequest" Value="175" />
            <Setter Property="TranslationY" Value="-85" />
        </Style>

        <Style
            x:Key="FriendlyNameLabel"
            ApplyToDerivedTypes="False"
            TargetType="Label">
            <Setter Property="FontFamily" Value="SpaceGroteskBold" />
            <Setter Property="FontSize" Value="26" />
            <Setter Property="LineBreakMode" Value="WordWrap" />
            <Setter Property="HorizontalTextAlignment" Value="Center" />
            <Setter Property="TextColor" Value="{DynamicResource ContentPrimaryWL}" />
        </Style>
        <Style
            x:Key="SubTextLabel"
            ApplyToDerivedTypes="False"
            BasedOn="{StaticResource FriendlyNameLabel}"
            TargetType="Label">
            <Setter Property="FontFamily" Value="SpaceGroteskMedium" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="LineBreakMode" Value="WordWrap" />
            <Setter Property="HorizontalTextAlignment" Value="Center" />
            <Setter Property="TextColor" Value="{DynamicResource ContentSecondaryWL}" />
        </Style>
        <Style
            x:Key="AgeLabel"
            ApplyToDerivedTypes="False"
            BasedOn="{StaticResource FriendlyNameLabel}"
            TargetType="Label">
            <Setter Property="FontFamily" Value="SpaceGroteskBold" />
            <Setter Property="FontSize" Value="27" />
            <Setter Property="LineBreakMode" Value="WordWrap" />
            <Setter Property="HorizontalTextAlignment" Value="Center" />
        </Style>

        <Style x:Key="StatusPillBorder" TargetType="Border">
            <Setter Property="BackgroundColor" Value="{DynamicResource TnPNeutralv300bgWL}" />
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup Name="StatusStates">

                        <VisualState Name="Created">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{DynamicResource TnPWarningbgWL}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState Name="Compromised">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{DynamicResource TnPWarningbgWL}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState Name="Approved">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{DynamicResource TnPSuccessbgWL}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState Name="Rejected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{DynamicResource TnPDangerbgWL}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState Name="Obsoleted">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{DynamicResource TnPDangerbgWL}" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>

            </Setter>
        </Style>
        <Style x:Key="StatusPillLabel" TargetType="Label">
            <Setter Property="FontSize" Value="10" />
            <Setter Property="FontFamily" Value="SpaceGroteskBold" />
            <Setter Property="TextColor" Value="{DynamicResource TnPNeutralv300ContentWL}" />
            <Setter Property="Text" Value="{l:Localize NotAvailable}" />
            <Style.Triggers>
                <DataTrigger
                    Binding="{Binding IdentityState}"
                    TargetType="Label"
                    Value="Created">
                    <Setter Property="Text" Value="{l:Localize IdentityState_Created}" />
                    <Setter Property="TextColor" Value="{DynamicResource TnPWarningContentWL}" />
                </DataTrigger>
                <DataTrigger
                    Binding="{Binding IdentityState}"
                    TargetType="Label"
                    Value="Compromised">
                    <Setter Property="Text" Value="{l:Localize IdentityState_Compromised}" />
                    <Setter Property="TextColor" Value="{DynamicResource TnPWarningContentWL}" />
                </DataTrigger>
                <DataTrigger
                    Binding="{Binding IdentityState}"
                    TargetType="Label"
                    Value="Approved">
                    <Setter Property="Text" Value="{l:Localize IdentityState_Approved}" />
                    <Setter Property="TextColor" Value="{DynamicResource TnPSuccessContentWL}" />
                </DataTrigger>
                <DataTrigger
                    Binding="{Binding IdentityState}"
                    TargetType="Label"
                    Value="Rejected">
                    <Setter Property="Text" Value="{l:Localize IdentityState_Rejected}" />
                    <Setter Property="TextColor" Value="{DynamicResource TnPDangerContentWL}" />
                </DataTrigger>
                <DataTrigger
                    Binding="{Binding IdentityState}"
                    TargetType="Label"
                    Value="Obsoleted">
                    <Setter Property="Text" Value="{l:Localize IdentityState_Obsoleted}" />
                    <Setter Property="TextColor" Value="{DynamicResource TnPDangerContentWL}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--  Field Styles  -->
        <Style x:Key="FieldKeyLabel" TargetType="Label">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="SpaceGroteskRegular" />
            <Setter Property="TextColor" Value="{DynamicResource ContentSecondaryWL}" />
        </Style>
        <Style x:Key="FieldValueLabel" TargetType="Label">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontFamily" Value="SpaceGroteskRegular" />
            <Setter Property="TextColor" Value="{DynamicResource ContentSecondaryWL}" />
        </Style>
        <Style x:Key="FieldTitleLabel" TargetType="Label">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="SpaceGroteskBold" />
            <Setter Property="TextColor" Value="{DynamicResource ContentSecondaryWL}" />
        </Style>

        <DataTemplate x:Key="DefaultFieldTemplate" x:DataType="objectModel:ObservableFieldItem">
            <VerticalStackLayout>
                <Label Style="{DynamicResource FieldKeyLabel}" Text="{Binding Label}" />
                <Label Style="{DynamicResource FieldValueLabel}" Text="{Binding Value}" />
            </VerticalStackLayout>
        </DataTemplate>

        <DataTemplate x:Key="ClickableFieldTemplate" x:DataType="objectModel:ObservableFieldItem">
            <Grid ColumnDefinitions="*, auto" RowDefinitions="auto, auto">
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding Source={x:Reference ThisPage}, Path=BindingContext.FieldTappedCommand}" CommandParameter="{Binding Value}" />
                </Grid.GestureRecognizers>

                <Label
                    Grid.Row="0"
                    Grid.Column="0"
                    Style="{DynamicResource FieldKeyLabel}"
                    Text="{Binding Label}" />
                <controls:SvgView
                    Grid.Row="0"
                    Grid.Column="1"
                    Aspect="AspectFit"
                    HeightRequest="16"
                    Source="content_copy.svg"
                    TintColor="{DynamicResource ContentSecondaryWL}"
                    WidthRequest="16" />
                <Label
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    Style="{DynamicResource FieldValueLabel}"
                    Text="{Binding Value}"
                    TextColor="{DynamicResource ContentLinkWL}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="CountryFieldTemplate" x:DataType="objectModel:ObservableFieldItem">
            <VerticalStackLayout>
                <Label Style="{DynamicResource FieldKeyLabel}" Text="{Binding Label}" />
                <Label Style="{DynamicResource FieldValueLabel}" Text="{Binding Value, Converter={converters:CountryCodeToFlagAndName}}" />
            </VerticalStackLayout>
        </DataTemplate>

        <DataTemplate x:Key="GenderFieldTemplate" x:DataType="objectModel:ObservableFieldItem">
            <VerticalStackLayout>
                <Label Style="{DynamicResource FieldKeyLabel}" Text="{Binding Label}" />
                <Label Style="{DynamicResource FieldValueLabel}" Text="{Binding Value, Converter={converters:GenderCodeToSymbolAndLabel}}" />
            </VerticalStackLayout>
        </DataTemplate>

        <viewmodel:ObservableFieldItemDictionarySelector x:Key="FieldSelector" DefaultTemplate="{StaticResource DefaultFieldTemplate}">
            <viewmodel:ObservableFieldItemDictionarySelector.Templates>
                <viewmodel:TemplateMapping Key="{x:Static root:Constants+CustomXmppProperties.Neuro_Id}" Template="{StaticResource ClickableFieldTemplate}" />
                <viewmodel:TemplateMapping Key="{x:Static root:Constants+XmppProperties.Jid}" Template="{StaticResource ClickableFieldTemplate}" />
                <viewmodel:TemplateMapping Key="{x:Static root:Constants+XmppProperties.DeviceId}" Template="{StaticResource ClickableFieldTemplate}" />
                <viewmodel:TemplateMapping Key="{x:Static root:Constants+XmppProperties.Country}" Template="{StaticResource CountryFieldTemplate}" />
                <viewmodel:TemplateMapping Key="{x:Static root:Constants+XmppProperties.Nationality}" Template="{StaticResource CountryFieldTemplate}" />
                <viewmodel:TemplateMapping Key="{x:Static root:Constants+XmppProperties.Gender}" Template="{StaticResource GenderFieldTemplate}" />
            </viewmodel:ObservableFieldItemDictionarySelector.Templates>

        </viewmodel:ObservableFieldItemDictionarySelector>

        <Style
            x:Key="IconBorder"
            ApplyToDerivedTypes="False"
            BasedOn="{StaticResource BorderSet}"
            TargetType="Border">
            <Setter Property="BackgroundColor" Value="{DynamicResource ButtonNeutralNavButtonsbgActiveWL}" />
            <Setter Property="Padding" Value="{DynamicResource MediumMargins}" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="WidthRequest" Value="40" />
            <Setter Property="HeightRequest" Value="40" />
            <Setter Property="HorizontalOptions" Value="Start" />
            <Setter Property="StrokeShape">
                <RoundRectangle CornerRadius="8" />
            </Setter>

        </Style>
    </VisualElement.Resources>

    <Grid BackgroundColor="{DynamicResource SurfaceBackgroundWL}">
        <Grid.RowDefinitions>
            <!--  top bar  -->
            <RowDefinition Height="auto" />
            <!--  ID CARD  -->
            <RowDefinition Height="*" />
            <RowDefinition Height="90" />
            <!--  Padding between Card and bottom  -->
            <RowDefinition Height="50" />
            <!--  Bottom sheet  -->
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <controls:Background Grid.Row="1" Grid.RowSpan="3" />

        <skiaLottie:SKLottieView
            x:Name="RainbowView"
            Grid.Row="0"
            Grid.RowSpan="5"
            AbsoluteLayout.LayoutBounds="0,0,1,1"
            AbsoluteLayout.LayoutFlags="All"
            HorizontalOptions="Center"
            IsVisible="{Binding IsApproved}"
            RepeatCount="-1"
            Rotation="90"
            Source="background.json" />
        <!--  TOP BAR  -->
        <Grid
            Grid.Row="0"
            Margin="16,16,16,8"
            ColumnDefinitions="auto,*,auto"
            RowDefinitions="auto">
            <controls:SvgButton
                Grid.Row="0"
                Grid.Column="0"
                Command="{Binding GoBackCommand}"
                Style="{DynamicResource IconButton}"
                SvgSource="close.svg" />

            <controls:UriImage
                Grid.Row="0"
                Grid.Column="1"
                Aspect="AspectFit"
                ErrorPlaceholder="neuro_b"
                HorizontalOptions="Center"
                Source="{Binding BannerUri}"
                WidthRequest="100"
				HeightRequest="24" />

            <controls:SvgButton
                Grid.Row="0"
                Grid.Column="2"
                Command="{Binding ShareCommand}"
                Style="{DynamicResource IconButton}"
                SvgSource="share.svg" />
        </Grid>

        <!--  QR Code Shadow  -->
        <Border
            Grid.Row="2"
            BackgroundColor="Transparent"
            HeightRequest="150"
            StrokeShape="RoundRectangle 16"
            Style="{DynamicResource BorderSet}"
            TranslationY="0"
            WidthRequest="150" />

        <!--  ID CARD  -->
        <Grid Grid.Row="1" Grid.RowSpan="2">
            <Border
                Margin="16,8,16,8"
                Padding="0"
                Style="{DynamicResource CardBorder}">
                <Grid>
                    <!--  BG  -->
                    <ContentView>
                        <AbsoluteLayout>
                            <controls:SvgView Scale="1.1" Source="id_background.svg" />
                        </AbsoluteLayout>
                    </ContentView>

                    <!--  TIMER  -->
                    <Border
                        Margin="16"
                        BackgroundColor="{DynamicResource SurfaceElevation1WL}"
                        HeightRequest="38"
                        HorizontalOptions="End"
                        IsVisible="{Binding HasTimer}"
                        StrokeShape="RoundRectangle 8"
                        VerticalOptions="End"
                        WidthRequest="50">
                        <Label
                            Margin="8,4,8,4"
                            FontFamily="SpaceGroteskBold"
                            HorizontalOptions="Center"
                            HorizontalTextAlignment="Center"
                            Style="{DynamicResource SubTextLabel}"
                            Text="{Binding TimerSeconds}"
                            VerticalOptions="Start" />
                    </Border>

                    <Border
                        Margin="16"
                        helpers:VisualStateProperties.State="{Binding IdentityState}"
                        HorizontalOptions="Start"
                        StrokeShape="RoundRectangle 16"
                        Style="{DynamicResource StatusPillBorder}"
                        VerticalOptions="End">

                        <Label
                            Margin="4,2"
                            HorizontalOptions="Center"
                            Style="{DynamicResource StatusPillLabel}"
                            VerticalOptions="Center" />
                    </Border>
                </Grid>
            </Border>
        </Grid>

        <!--  CARD CONTENT  -->
        <Grid
            Grid.Row="1"
            Margin="{DynamicResource MediumMargins}"
            Padding="0,16,0,8"
            RowDefinitions="auto, *"
            WidthRequest="250">
            <VerticalStackLayout
                Grid.Row="0"
                Margin="0"
                Padding="0"
                HorizontalOptions="Center"
                Spacing="{DynamicResource SmallSpacing}">
                <Grid HeightRequest="200" WidthRequest="200">
                    <controls:ConditionView Condition="{Binding LoadPhotosTask.IsRunning}">
                        <controls:ConditionView.True>
                            <ActivityIndicator
                                HeightRequest="50"
                                HorizontalOptions="Center"
                                IsRunning="True"
                                VerticalOptions="Center"
                                WidthRequest="50" />
                        </controls:ConditionView.True>
                        <controls:ConditionView.False>
                            <Border Background="{DynamicResource SurfaceElevation2WL}" StrokeShape="RoundRectangle 16">
                                <controls:ConditionView Condition="{Binding HasProfilePhoto}">
                                    <controls:ConditionView.True>
                                        <Image
                                            Aspect="AspectFit"
                                            HeightRequest="200"
                                            Source="{Binding ProfilePhoto}"
                                            WidthRequest="200" />
                                    </controls:ConditionView.True>
                                    <controls:ConditionView.False>
                                        <controls:SvgView
                                            Aspect="AspectFit"
                                            HeightRequest="70"
                                            Source="person.svg"
                                            WidthRequest="70" />
                                    </controls:ConditionView.False>
                                </controls:ConditionView>

                            </Border>
                        </controls:ConditionView.False>
                    </controls:ConditionView>
                    <!-- Water mark
					<Grid VerticalOptions="End"
						  HorizontalOptions="Start"
						  WidthRequest="50"
						  HeightRequest="50"
						  IsVisible="{Binding HasProfilePhoto}">
						<Border Background="{DynamicResource SurfaceElevation1}"
								StrokeShape="RoundRectangle 0 16 0 0">

						</Border>
					</Grid>-->
                    <Grid
                        HeightRequest="50"
                        HorizontalOptions="End"
                        IsVisible="{Binding HasAge}"
                        VerticalOptions="End"
                        WidthRequest="50">
                        <Border Background="{DynamicResource SurfaceElevation1WL}" StrokeShape="RoundRectangle 16 0 0 0">
                            <Label
                                HorizontalOptions="Center"
                                Style="{DynamicResource AgeLabel}"
                                Text="{Binding AgeText}"
                                VerticalOptions="Center" />
                        </Border>
                    </Grid>

                </Grid>

                <Label Style="{DynamicResource FriendlyNameLabel}" Text="{Binding FriendlyName}" />
                <Label Style="{DynamicResource SubTextLabel}" Text="{Binding SubText}" />

            </VerticalStackLayout>
            <VerticalStackLayout
                Grid.Row="1"
                Margin="0,0,0,4"
                VerticalOptions="End">
                <Label
                    FontSize="14"
                    Style="{DynamicResource SubTextLabel}"
                    Text="{l:Localize Path=ExpiresFormat,
                                      Arg={Binding ExpireDate}}" />
            </VerticalStackLayout>
        </Grid>

        <!--  QR Code  -->
        <Border
            Grid.Row="2"
            HeightRequest="150"
            Style="{DynamicResource QrBorder}"
            TranslationY="0"
            WidthRequest="150">
            <Image
                HorizontalOptions="Center"
                Source="{Binding QrCode}"
                TranslationX="0">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding QrTappedCommand}" NumberOfTapsRequired="1" />
                </Image.GestureRecognizers>
            </Image>
        </Border>

        <skiaLottie:SKConfettiView
            x:Name="ConfettiView"
            Grid.RowSpan="5"
            HorizontalOptions="Fill"
            InputTransparent="True"
            IsAnimationEnabled="{Binding ShouldCelebrate}"
            VerticalOptions="Fill" />

        <Grid Grid.Row="1" Grid.RowSpan="4">
            <controls:BottomSheetView
                x:Name="BottomSheet"
                MaxExpandedHeight="-1"
                VerticalOptions="End">
                <controls:BottomSheetView.HeaderContent>
                    <VerticalStackLayout Padding="2" Background="{DynamicResource SurfaceElevation1WL}">
                        <controls:SvgView
                            Aspect="Fill"
                            HeightRequest="24"
                            Source="swipe_up.svg"
                            TintColor="{DynamicResource ContentAccessWL}"
                            WidthRequest="24" />
                        <Label
                            FontFamily="SpaceGroteskBold"
                            FontSize="16"
                            HorizontalOptions="Center"
                            HorizontalTextAlignment="Center"
                            Text="{l:Localize SwipeForDetails}"
                            TextColor="{DynamicResource ContentAccessWL}" />
                    </VerticalStackLayout>
                </controls:BottomSheetView.HeaderContent>
                <controls:BottomSheetView.MainContent>
                    <ContentView>
                        <ScrollView HorizontalOptions="Fill" VerticalOptions="Fill">
                            <VerticalStackLayout>
                                <controls:TextButton
                                    Margin="16"
                                    Command="{Binding AddContactCommand}"
                                    HorizontalOptions="Fill"
                                    IsVisible="{Binding CanAddContact}"
                                    LabelData="{l:Localize AddContact}"
                                    Style="{DynamicResource FilledTextButton}" />

                                <controls:TextButton
                                    Margin="16"
                                    Command="{Binding RemoveContactCommand}"
                                    HorizontalOptions="Fill"
                                    IsVisible="{Binding CanRemoveContact}"
                                    LabelData="{l:Localize RemoveContact}"
                                    Style="{DynamicResource FilledTextButton}" />

								<controls:TextButton
									Margin="16,0,16,8"
									Command="{Binding OpenChatCommand}"
									IsVisible="{Binding IsThirdPartyIdentity}"
									HorizontalOptions="Fill"
									LabelData="{l:Localize Chat}"
									Style="{DynamicResource FilledTextButton}" />

                                <!--  Photos  -->
                                <Border IsVisible="{Binding HasPhotos}" Style="{DynamicResource FieldGroupBorder}">
                                    <Grid RowDefinitions="auto, auto" RowSpacing="16">
                                        <Label
                                            Grid.Row="0"
                                            Style="{DynamicResource FieldTitleLabel}"
                                            Text="{l:Localize Photos}" />
                                        <FlexLayout
                                            Grid.Row="1"
                                            AlignContent="Center"
                                            BindableLayout.ItemsSource="{Binding Photos}"
                                            Direction="Row"
                                            JustifyContent="Start"
                                            Wrap="Wrap">
                                            <BindableLayout.ItemTemplate>
                                                <DataTemplate x:DataType="photos:Photo">
                                                    <Image
                                                        Margin="2"
                                                        Aspect="Fill"
                                                        HeightRequest="64"
                                                        Rotation="{Binding Rotation}"
                                                        Source="{Binding Source}"
                                                        WidthRequest="64">
                                                        <Image.GestureRecognizers>
                                                            <TapGestureRecognizer Command="{Binding Source={x:Reference ThisPage}, Path=BindingContext.ImageTappedCommand}" CommandParameter="{Binding Attachment}" />
                                                        </Image.GestureRecognizers>
                                                    </Image>
                                                </DataTemplate>
                                            </BindableLayout.ItemTemplate>
                                        </FlexLayout>
                                    </Grid>
                                </Border>

                                <!--  FIELDS  -->
                                <!--  Should probably be virtualized with collectionview  -->
                                <Border IsVisible="{Binding HasPersonalFields}" Style="{DynamicResource FieldGroupBorder}">
                                    <!--  Title + BindableLayout  -->
                                    <VerticalStackLayout Spacing="16">
                                        <Label Style="{DynamicResource FieldTitleLabel}" Text="{l:Localize PersonalInformation}" />
                                        <VerticalStackLayout
                                            BindableLayout.ItemTemplateSelector="{DynamicResource FieldSelector}"
                                            BindableLayout.ItemsSource="{Binding PersonalFields}"
                                            HorizontalOptions="Fill"
                                            Spacing="16" />
                                    </VerticalStackLayout>
                                </Border>

                                <Border IsVisible="{Binding HasOrganizationFields}" Style="{DynamicResource FieldGroupBorder}">
                                    <!--  Title + BindableLayout  -->
                                    <VerticalStackLayout Spacing="16">
                                        <Label Style="{DynamicResource FieldTitleLabel}" Text="{l:Localize OrganizationalInformation}" />
                                        <VerticalStackLayout
                                            BindableLayout.ItemTemplateSelector="{DynamicResource FieldSelector}"
                                            BindableLayout.ItemsSource="{Binding OrganizationFields}"
                                            HorizontalOptions="Fill"
                                            Spacing="16" />
                                    </VerticalStackLayout>
                                </Border>

                                <Border IsVisible="{Binding HasTechnicalFields}" Style="{DynamicResource FieldGroupBorder}">
                                    <!--  Title + BindableLayout  -->
                                    <VerticalStackLayout Spacing="16">
                                        <Label Style="{DynamicResource FieldTitleLabel}" Text="{l:Localize Technical}" />
                                        <VerticalStackLayout
                                            BindableLayout.ItemTemplateSelector="{DynamicResource FieldSelector}"
                                            BindableLayout.ItemsSource="{Binding TechnicalFields}"
                                            HorizontalOptions="Fill"
                                            Spacing="16" />
                                    </VerticalStackLayout>
                                </Border>

                                <Border IsVisible="{Binding HasOtherFields}" Style="{DynamicResource FieldGroupBorder}">
                                    <!--  Title + BindableLayout  -->
                                    <VerticalStackLayout Spacing="16">
                                        <Label Style="{DynamicResource FieldTitleLabel}" Text="{l:Localize OtherInformation}" />
                                        <VerticalStackLayout
                                            BindableLayout.ItemTemplateSelector="{DynamicResource FieldSelector}"
                                            BindableLayout.ItemsSource="{Binding OtherFields}"
                                            HorizontalOptions="Fill"
                                            Spacing="16" />
                                    </VerticalStackLayout>
                                </Border>
                            </VerticalStackLayout>
                        </ScrollView>
                    </ContentView>
                </controls:BottomSheetView.MainContent>
            </controls:BottomSheetView>
        </Grid>
    </Grid>
</base:BaseContentPage>
