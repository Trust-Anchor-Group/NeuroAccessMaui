<?xml version="1.0" encoding="utf-8" ?>
<base:BaseContentPage x:Name="ThisPage"
					  x:Class="NeuroAccessMaui.UI.Pages.Identity.ViewIdentity.ViewIdentityPage"
					  x:DataType="viewmodel:ViewIdentityViewModel"
					  xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
					  xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
					  xmlns:l="clr-namespace:NeuroAccessMaui.Services.Localization"
					  xmlns:ui="clr-namespace:NeuroAccessMaui.UI"
					  xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
					  xmlns:base="clr-namespace:NeuroAccessMaui.UI.Pages"
					  xmlns:helpers="clr-namespace:NeuroAccessMaui.Helpers"
					  xmlns:controls="clr-namespace:NeuroAccessMaui.UI.Controls"
					  xmlns:converters="clr-namespace:NeuroAccessMaui.UI.Converters"
					  xmlns:viewmodel="clr-namespace:NeuroAccessMaui.UI.Pages.Identity.ViewIdentity"
					  xmlns:photos="clr-namespace:NeuroAccessMaui.Services.UI.Photos"
					  xmlns:objectModel="clr-namespace:NeuroAccessMaui.UI.Pages.Identity.ObjectModel"
					  xmlns:skiaLottie="clr-namespace:SkiaSharp.Extended.UI.Controls;assembly=SkiaSharp.Extended.UI"
					  xmlns:res="clr-namespace:NeuroAccessMaui.Resources.Languages;assembly=NeuroAccessMaui">

	<base:BaseContentPage.Resources>
		<Style x:Key="CardBorder"
			   TargetType="Border"
			   BasedOn="{StaticResource BorderSet}">
			<Setter Property="Background"
					Value="{AppThemeBinding Light={StaticResource SurfaceElevation1Light}, Dark={StaticResource SurfaceElevation1Dark}}" />
			<Setter Property="StrokeShape"
					Value="RoundRectangle 16" />
		</Style>
		<Style x:Key="FieldGroupBorder"
			   TargetType="Border"
			   BasedOn="{StaticResource BorderSubSet}">
			<Setter Property="Background"
					Value="{AppThemeBinding Light={StaticResource SurfaceElevation2GreyLight}, Dark={StaticResource SurfaceElevation2GreyDark}}" />
			<Setter Property="StrokeShape"
					Value="RoundRectangle 16" />
			<Setter Property="Margin"
					Value="16" />
			<Setter Property="Padding"
					Value="16" />
		</Style>
		<Style x:Key="QrBorder"
			   TargetType="Border"
			   BasedOn="{StaticResource BorderSet}">
			<Setter Property="Background"
					Value="{AppThemeBinding Light={StaticResource SurfaceElevation1Light}, Dark={StaticResource SurfaceElevation1Dark}}" />
			<Setter Property="Shadow"
					Value="{x:Null}" />
			<Setter Property="Padding"
					Value="0" />
			<Setter Property="Margin"
					Value="0" />
			<Setter Property="StrokeShape"
					Value="RoundRectangle 16" />
			<Setter Property="WidthRequest"
					Value="175" />
			<Setter Property="HeightRequest"
					Value="175" />
			<Setter Property="TranslationY"
					Value="-85" />
		</Style>

		<Style x:Key="FriendlyNameLabel"
			   ApplyToDerivedTypes="False"
			   TargetType="Label">
			<Setter Property="FontFamily"
					Value="SpaceGroteskBold" />
			<Setter Property="FontSize"
					Value="28" />
			<Setter Property="LineBreakMode"
					Value="WordWrap" />
			<Setter Property="HorizontalTextAlignment"
					Value="Center" />
			<Setter Property="TextColor"
					Value="{AppThemeBinding Light={StaticResource ContentPrimaryLight}, Dark={StaticResource ContentPrimaryDark}}" />
		</Style>
		<Style x:Key="SubTextLabel"
			   BasedOn="{StaticResource FriendlyNameLabel}"
			   ApplyToDerivedTypes="False"
			   TargetType="Label">
			<Setter Property="FontFamily"
					Value="SpaceGroteskMedium" />
			<Setter Property="FontSize"
					Value="20" />
			<Setter Property="LineBreakMode"
					Value="WordWrap" />
			<Setter Property="HorizontalTextAlignment"
					Value="Center" />
			<Setter Property="TextColor"
					Value="{AppThemeBinding Light={StaticResource ContentSecondaryLight}, Dark={StaticResource ContentSecondaryDark}}" />
		</Style>
		<Style x:Key="AgeLabel"
			   BasedOn="{StaticResource FriendlyNameLabel}"
			   ApplyToDerivedTypes="False"
			   TargetType="Label">
			<Setter Property="FontFamily"
					Value="SpaceGroteskBold" />
			<Setter Property="FontSize"
					Value="27" />
			<Setter Property="LineBreakMode"
					Value="WordWrap" />
			<Setter Property="HorizontalTextAlignment"
					Value="Center" />
		</Style>

		<Style x:Key="StatusPillBorder"
			   TargetType="Border">
			<Setter Property="VisualStateManager.VisualStateGroups">
				<VisualStateGroupList>
					<VisualStateGroup Name="StatusStates">

						<VisualState Name="Created">
							<VisualState.Setters>
								<Setter Property="BackgroundColor"
										Value="{AppThemeBinding Light={StaticResource FiguresStrokesOrangea20Light}, Dark={StaticResource FiguresStrokesOrangea20Dark}}" />

							</VisualState.Setters>
						</VisualState>

						<VisualState Name="Approved">
							<VisualState.Setters>
								<Setter Property="BackgroundColor"
										Value="{AppThemeBinding Light={StaticResource FiguresStrokesGreena20Light}, Dark={StaticResource FiguresStrokesGreena20Dark}}" />
							</VisualState.Setters>
						</VisualState>

						<VisualState Name="Rejected">
							<VisualState.Setters>
								<Setter Property="BackgroundColor"
										Value="{AppThemeBinding Light={StaticResource FiguresStrokesReda20Light}, Dark={StaticResource FiguresStrokesReda20Dark}}" />
							</VisualState.Setters>
						</VisualState>

					</VisualStateGroup>
				</VisualStateGroupList>

			</Setter>
		</Style>
		<Style x:Key="StatusPillLabel"
			   TargetType="Label">
			<Setter Property="FontSize"
					Value="14" />
			<Setter Property="FontFamily"
					Value="SpaceGroteskBold" />
			<Setter Property="Text"
					Value="Test" />
			<Style.Triggers>
				<DataTrigger TargetType="Label"
							 Binding="{Binding IdentityState}"
							 Value="Created">
					<Setter Property="Text"
							Value="{l:Localize IdentityState_Created}" />
					<Setter Property="TextColor"
							Value="Black" />
				</DataTrigger>
				<DataTrigger TargetType="Label"
							 Binding="{Binding IdentityState}"
							 Value="Approved">
					<Setter Property="Text"
							Value="{l:Localize IdentityState_Approved}" />
					<Setter Property="TextColor"
							Value="{AppThemeBinding Light={StaticResource ContentGreenLight},
                                       Dark={StaticResource ContentGreenDark}}" />
				</DataTrigger>
				<DataTrigger TargetType="Label"
							 Binding="{Binding IdentityState}"
							 Value="Rejected">
					<Setter Property="Text"
							Value="Rejected ID" />
					<Setter Property="TextColor"
							Value="White" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<!-- Field Styles -->
		<Style x:Key="FieldKeyLabel"
			   TargetType="Label">
			<Setter Property="FontSize"
					Value="14" />
			<Setter Property="FontFamily"
					Value="SpaceGroteskRegular" />
			<Setter Property="TextColor"
					Value="{AppThemeBinding Light={StaticResource ContentSecondaryLight}, Dark={StaticResource ContentSecondaryDark}}" />
		</Style>
		<Style x:Key="FieldValueLabel"
			   TargetType="Label">
			<Setter Property="FontSize"
					Value="16" />
			<Setter Property="FontFamily"
					Value="SpaceGroteskRegular" />
			<Setter Property="TextColor"
					Value="{AppThemeBinding Light={StaticResource ContentPrimaryLight}, Dark={StaticResource ContentPrimaryDark}}" />
		</Style>
		<Style x:Key="FieldTitleLabel"
			   TargetType="Label">
			<Setter Property="FontSize"
					Value="14" />
			<Setter Property="FontFamily"
					Value="SpaceGroteskBold" />
			<Setter Property="TextColor"
					Value="{AppThemeBinding Light={StaticResource ContentSecondaryLight}, Dark={StaticResource ContentSecondaryDark}}" />
		</Style>
	</base:BaseContentPage.Resources>

	<Grid BackgroundColor="{AppThemeBinding Light={StaticResource SurfaceBackgroundLight}, Dark={StaticResource SurfaceBackgroundDark}}">
		<Grid.RowDefinitions>
			<!-- top bar -->
			<RowDefinition Height="auto" />
			<!-- ID CARD -->
			<RowDefinition Height="*" />
			<RowDefinition Height="120" />
			<!-- Padding between Card and bottom -->
			<RowDefinition Height="50" />
			<!-- Bottom sheet -->
			<RowDefinition Height="50" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<controls:Background Grid.Row="1"
							 Grid.RowSpan="3" />

		<skiaLottie:SKLottieView Grid.Row="0"
								 Grid.RowSpan="5"
								 IsVisible="{Binding IsApproved}"
								 Source="background.json"
								 x:Name="RainbowView"
								 AbsoluteLayout.LayoutBounds="0,0,1,1"
								 AbsoluteLayout.LayoutFlags="All"
								 Rotation="90"
								 RepeatCount="-1"
								 HorizontalOptions="Center" />



		<HorizontalStackLayout Spacing="{StaticResource SmallSpacing}"
							   Margin="{StaticResource MediumSpacing}"
							   Grid.Row="0">

			<controls:ImageButton HorizontalOptions="Start"
								  Command="{Binding GoBackCommand}"
								  Style="{StaticResource ImageOnlyButton}"
								  PathData="{x:Static ui:Geometries.BackButtonPath}" />

			<Label Style="{StaticResource PageTitleLabel}"
				   Text="{l:Localize LegalId}" />
		</HorizontalStackLayout>

		<!-- QR Code Shadow-->
		<Border Grid.Row="2"
				WidthRequest="180"
				HeightRequest="180"
				TranslationY="0"
				BackgroundColor="Transparent"
				Style="{StaticResource BorderSet}"
				StrokeShape="RoundRectangle 16" />



		<!-- ID CARD -->
		<Grid Grid.Row="1"
			  Grid.RowSpan="2">
			<Border Style="{StaticResource CardBorder}"
					Margin="{StaticResource MediumMargins}"
					Padding="0">
				<Grid>
					<!-- BG -->
					<ContentView>
						<AbsoluteLayout>
							<controls:SvgView Source="id_background.svg"
											  Scale="1.1" />
						</AbsoluteLayout>
					</ContentView>
					<!-- TIMER -->
					<Border IsVisible="{Binding HasTimer}"
							VerticalOptions="End"
							HorizontalOptions="End"
							StrokeShape="RoundRectangle 8"
							WidthRequest="50"
							HeightRequest="38"
							Margin="16"
							BackgroundColor="{AppThemeBinding Light={StaticResource SurfaceElevation2GreyLight}, Dark={StaticResource Elevation2BackgroundDark}}">
						<Label Text="{Binding TimerSeconds}"
							   Margin="8,4,8,4"
							   Style="{StaticResource SubTextLabel}"
							   VerticalOptions="Start"
							   HorizontalOptions="Center"
							   HorizontalTextAlignment="Center"
							   FontFamily="SpaceGroteskBold" />
					</Border>
				</Grid>
			</Border>
		</Grid>


		<!-- CARD CONTENT -->
		<Grid Grid.Row="1"
			  Padding="0,32, 0, 8"
			  Margin="{StaticResource MediumMargins}"
			  WidthRequest="250"
			  RowDefinitions="auto, *">
			<VerticalStackLayout  Grid.Row="0"
								  HorizontalOptions="Center"
								  Spacing="{StaticResource SmallSpacing}"
								  Padding="0"
								  Margin="0">
				<Grid WidthRequest="250"
					  HeightRequest="250">

					<controls:ConditionView Condition="{Binding LoadPhotosTask.IsRunning}">
						<controls:ConditionView.True>
							<ActivityIndicator IsRunning="True"
											   WidthRequest="50"
											   HeightRequest="50"
											   VerticalOptions="Center"
											   HorizontalOptions="Center" />
						</controls:ConditionView.True>
						<controls:ConditionView.False>
							<Border StrokeShape="RoundRectangle 16"
									Background="{AppThemeBinding Light={StaticResource SurfaceElevation2GreyLight}, Dark={StaticResource SurfaceElevation2GreyDark}}">
								<controls:ConditionView Condition="{Binding HasProfilePhoto}">
									<controls:ConditionView.True>
										<Image Source="{Binding ProfilePhoto}"
											   WidthRequest="250"
											   HeightRequest="250"
											   Aspect="AspectFit" />
									</controls:ConditionView.True>
									<controls:ConditionView.False>
										<controls:SvgView Source="person.svg"
														  WidthRequest="70"
														  HeightRequest="70"
														  Aspect="AspectFit" />
									</controls:ConditionView.False>
								</controls:ConditionView>

							</Border>
						</controls:ConditionView.False>
					</controls:ConditionView>

					<Grid VerticalOptions="End"
						  HorizontalOptions="Start"
						  WidthRequest="50"
						  HeightRequest="50"
						  IsVisible="{Binding HasProfilePhoto}">
						<Border Background="{AppThemeBinding Light={StaticResource SurfaceElevation1Light}, Dark={StaticResource SurfaceElevation1Dark}}"
								StrokeShape="RoundRectangle 0 16 0 0">

						</Border>
					</Grid>
					<Grid VerticalOptions="End"
						  HorizontalOptions="End"
						  WidthRequest="50"
						  HeightRequest="50"
						  IsVisible="true">
						<Border Background="{AppThemeBinding Light={StaticResource SurfaceElevation1Light}, Dark={StaticResource SurfaceElevation1Dark}}"
								StrokeShape="RoundRectangle 16 0 0 0">
							<Label Style="{StaticResource AgeLabel}"
								   Text="{Binding AgeText}"
								   VerticalOptions="Center"
								   HorizontalOptions="Center" />
						</Border>
					</Grid>

				</Grid>

				<Label Style="{StaticResource FriendlyNameLabel}"
					   Text="{Binding FriendlyName}" />
				<Label Style="{StaticResource SubTextLabel}"
					   Text="{Binding SubText}" />

			</VerticalStackLayout>

			<Grid Grid.Row="1"
				  ColumnDefinitions="*"
				  RowDefinitions="*, auto"
				  Margin="0, 0, 0, 8">
				<Border Grid.Row="0"
						StrokeShape="RoundRectangle 16"
						VerticalOptions="End"
						BackgroundColor="LightGrey"
						Style="{StaticResource StatusPillBorder}"
						Padding="8,4"
						helpers:VisualStateProperties.State="{Binding IdentityState}"
						HorizontalOptions="Center">

					<Label Style="{StaticResource StatusPillLabel}"
						   HorizontalOptions="Center"
						   VerticalOptions="Center" />


				</Border>
				<VerticalStackLayout Grid.Row="1">
					<Label Style="{StaticResource SubTextLabel}"
						   FontSize="14"
						   Text="{l:Localize Path=ExpiresFormat, Arg={Binding ExpireDate}}" />
				</VerticalStackLayout>
			</Grid>
		</Grid>

		<!-- QR Code -->
		<Border Grid.Row="2"
				WidthRequest="180"
				HeightRequest="180"
				TranslationY="0"
				Style="{StaticResource QrBorder}">
			<Image HorizontalOptions="Center"
				   TranslationX="0"
				   Source="{Binding QrCode}">
				<Image.GestureRecognizers>
					<TapGestureRecognizer Command="{Binding QrTappedCommand}"
										  NumberOfTapsRequired="1" />
				</Image.GestureRecognizers>
			</Image>
		</Border>

		<skiaLottie:SKConfettiView x:Name="ConfettiView"
								   Grid.RowSpan="5"
								   IsAnimationEnabled="{Binding ShouldCelebrate}"
								   HorizontalOptions="Fill"
								   VerticalOptions="Fill" />
		<Grid Grid.Row="1"
			  Grid.RowSpan="4">
			<controls:BottomSheetView x:Name="BottomSheet"
									  VerticalOptions="End"
									  MaxExpandedHeight="-1">
				<controls:BottomSheetView.HeaderContent>
					<VerticalStackLayout BackgroundColor="#FFFCFCFC"
										 Padding="2">
						<controls:SvgView Source="swipe_up.svg"
										  Aspect="Fill"
										  HeightRequest="24"
										  WidthRequest="24" />
						<Label Text="Swipe for details"
							   HorizontalOptions="Center"
							   FontFamily="SpaceGroteskBold"
							   HorizontalTextAlignment="Center" />
					</VerticalStackLayout>
				</controls:BottomSheetView.HeaderContent>
				<controls:BottomSheetView.MainContent>
					<ContentView>
						<ScrollView VerticalOptions="Fill"
									HorizontalOptions="Fill">
							<VerticalStackLayout>
								<!-- Photos -->
								<Border Style="{StaticResource FieldGroupBorder}"
										IsVisible="{Binding HasPhotos}">
									<Grid RowDefinitions="auto, auto"
										  RowSpacing="16">
										<Label Text="{l:Localize Photos}"
											   Grid.Row="0"
											   Style="{StaticResource FieldTitleLabel}" />
										<FlexLayout Grid.Row="1"
													AlignContent="Center"
													BindableLayout.ItemsSource="{Binding Photos}"
													Direction="Row"
													Wrap="Wrap"
													JustifyContent="Start">
											<BindableLayout.ItemTemplate>
												<DataTemplate x:DataType="photos:Photo">
													<Image Margin="2"
														   Aspect="Fill"
														   WidthRequest="64"
														   HeightRequest="64"
														   Rotation="{Binding Rotation}"
														   Source="{Binding Source}">
														<Image.GestureRecognizers>
															<TapGestureRecognizer Command="{Binding Source={x:Reference ThisPage}, Path=BindingContext.ImageTappedCommand}"
																				  CommandParameter="{Binding Attachment}" />
														</Image.GestureRecognizers>
													</Image>
												</DataTemplate>
											</BindableLayout.ItemTemplate>
										</FlexLayout>
									</Grid>
								</Border>

								<!-- FIELDS -->
								<!-- Should probably be virtualized with collectionview -->
								<Border Style="{StaticResource FieldGroupBorder}"
										IsVisible="{Binding HasPersonalFields}">
									<!-- Title + BindableLayout-->
									<VerticalStackLayout Spacing="16">
										<Label Text="{l:Localize PersonalInformation}"
											   Style="{StaticResource FieldTitleLabel}" />
										<VerticalStackLayout HorizontalOptions="Fill"
															 Spacing="16"
															 BindableLayout.ItemsSource="{Binding PersonalFields}">
											<BindableLayout.ItemTemplate>
												<DataTemplate x:DataType="objectModel:ObservableFieldItem">
													<VerticalStackLayout>
														<Label Text="{Binding  Label}"
															   Style="{StaticResource FieldKeyLabel}" />
														<Label Text="{Binding Value}"
															   Style="{StaticResource FieldValueLabel}" />
													</VerticalStackLayout>

												</DataTemplate>
											</BindableLayout.ItemTemplate>
										</VerticalStackLayout>
									</VerticalStackLayout>
								</Border>
								
								<Border Style="{StaticResource FieldGroupBorder}"
										IsVisible="{Binding HasOrganizationFields}">
									<!-- Title + BindableLayout-->
									<VerticalStackLayout Spacing="16">
										<Label Text="{l:Localize OrganizationalInformation}"
											   Style="{StaticResource FieldTitleLabel}" />
										<VerticalStackLayout HorizontalOptions="Fill"
															 Spacing="16"
															 BindableLayout.ItemsSource="{Binding OrganizationFields}">
											<BindableLayout.ItemTemplate>
												<DataTemplate x:DataType="objectModel:ObservableFieldItem">
													<VerticalStackLayout>
														<Label Text="{Binding  Label}"
															   Style="{StaticResource FieldKeyLabel}" />
														<Label Text="{Binding Value}"
															   Style="{StaticResource FieldValueLabel}" />
													</VerticalStackLayout>

												</DataTemplate>
											</BindableLayout.ItemTemplate>
										</VerticalStackLayout>
									</VerticalStackLayout>
								</Border>

								<Border Style="{StaticResource FieldGroupBorder}"
										IsVisible="{Binding HasTechnicalFields}">
									<!-- Title + BindableLayout-->
									<VerticalStackLayout Spacing="16">
										<Label Text="{l:Localize Technical}"
											   Style="{StaticResource FieldTitleLabel}" />
										<VerticalStackLayout HorizontalOptions="Fill"
															 Spacing="16"
															 BindableLayout.ItemsSource="{Binding TechnicalFields}">
											<BindableLayout.ItemTemplate>
												<DataTemplate x:DataType="objectModel:ObservableFieldItem">
													<Grid RowDefinitions="auto, auto"
														  ColumnDefinitions="*, auto">
														<Grid.GestureRecognizers>
															<TapGestureRecognizer Command="{Binding Source={x:Reference ThisPage}, Path=BindingContext.FieldTappedCommand}"
																				  CommandParameter="{Binding Value}" />
														</Grid.GestureRecognizers>

														<Label Grid.Row="0"
															   Grid.Column="0"
															   Text="{Binding  Label}"
															   Style="{StaticResource FieldKeyLabel}" />
														<controls:SvgView Grid.Row="0"
																		  Grid.Column="1"
																		  Source="content_copy.svg"
																		  WidthRequest="16"
																		  HeightRequest="16"
																		  Aspect="AspectFit" />
														<Label Grid.Row="1"
															   Grid.ColumnSpan="2"
															   Text="{Binding Value}"
															   Style="{StaticResource FieldValueLabel}"
															   TextColor="{AppThemeBinding Light={StaticResource ContentBlueLight}, Dark={StaticResource ContentBlueDark}}"/>
													</Grid>

												</DataTemplate>
											</BindableLayout.ItemTemplate>
										</VerticalStackLayout>
									</VerticalStackLayout>
								</Border>

								<Border Style="{StaticResource FieldGroupBorder}"
										IsVisible="True">
									<!-- Title + BindableLayout-->
									<VerticalStackLayout Spacing="16">
										<Label Text="{l:Localize OrganizationalInformation}"
											   Style="{StaticResource FieldTitleLabel}" />
										<VerticalStackLayout HorizontalOptions="Fill"
															 Spacing="16"
															 BindableLayout.ItemsSource="{Binding OtherFields}">
											<BindableLayout.ItemTemplate>
												<DataTemplate x:DataType="objectModel:ObservableFieldItem">
													<VerticalStackLayout>
														<Label Text="{Binding  Label}"
															   Style="{StaticResource FieldKeyLabel}" />
														<Label Text="{Binding Value}"
															   Style="{StaticResource FieldValueLabel}" />
													</VerticalStackLayout>

												</DataTemplate>
											</BindableLayout.ItemTemplate>
										</VerticalStackLayout>
									</VerticalStackLayout>
								</Border>
							</VerticalStackLayout>
						</ScrollView>
					</ContentView>
				</controls:BottomSheetView.MainContent>
			</controls:BottomSheetView>
		</Grid>



	</Grid>
</base:BaseContentPage>
