<?xml version="1.0" encoding="utf-8" ?>
<base:BaseContentPage x:Name="ThisPage"
					  x:Class="NeuroAccessMaui.UI.Pages.Identity.ViewIdentity.ViewIdentityPage"
					  x:DataType="viewmodel:ViewIdentityViewModel"
					  xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
					  xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
					  xmlns:l="clr-namespace:NeuroAccessMaui.Services.Localization"
					  xmlns:ui="clr-namespace:NeuroAccessMaui.UI"
					  xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
					  xmlns:base="clr-namespace:NeuroAccessMaui.UI.Pages"
					  xmlns:helpers="clr-namespace:NeuroAccessMaui.Helpers"
					  xmlns:controls="clr-namespace:NeuroAccessMaui.UI.Controls"
					  xmlns:converters="clr-namespace:NeuroAccessMaui.UI.Converters"
					  xmlns:viewmodel="clr-namespace:NeuroAccessMaui.UI.Pages.Identity.ViewIdentity"
					  xmlns:photos="clr-namespace:NeuroAccessMaui.Services.UI.Photos"
					  xmlns:objectModel="clr-namespace:NeuroAccessMaui.UI.Pages.Identity.ObjectModel"
					  xmlns:root="clr-namespace:NeuroAccessMaui"
					  xmlns:skiaLottie="clr-namespace:SkiaSharp.Extended.UI.Controls;assembly=SkiaSharp.Extended.UI"
					  xmlns:res="clr-namespace:NeuroAccessMaui.Resources.Languages;assembly=NeuroAccessMaui">

	<VisualElement.Resources>
		<Style x:Key="CardBorder"
			   TargetType="Border"
			   BasedOn="{StaticResource BorderSet}">
			<Setter Property="StrokeShape"
					Value="RoundRectangle 16" />
		</Style>
		<Style x:Key="FieldGroupBorder"
			   TargetType="Border"
			   BasedOn="{StaticResource BorderSubSet}">
			<Setter Property="Background"
					Value="{AppThemeBinding Light={StaticResource SurfaceElevation2WLLight}, Dark={StaticResource SurfaceElevation2WLDark}}" />
			<Setter Property="StrokeShape"
					Value="RoundRectangle 16" />
			<Setter Property="Margin"
					Value="16" />
			<Setter Property="Padding"
					Value="16" />
		</Style>
		<Style x:Key="QrBorder"
			   TargetType="Border"
			   BasedOn="{StaticResource BorderSet}">
			<Setter Property="Shadow"
					Value="{x:Null}" />
			<Setter Property="Padding"
					Value="0" />
			<Setter Property="Margin"
					Value="0" />
			<Setter Property="StrokeShape"
					Value="RoundRectangle 16" />
			<Setter Property="WidthRequest"
					Value="175" />
			<Setter Property="HeightRequest"
					Value="175" />
			<Setter Property="TranslationY"
					Value="-85" />
		</Style>

		<Style x:Key="FriendlyNameLabel"
			   ApplyToDerivedTypes="False"
			   TargetType="Label">
			<Setter Property="FontFamily"
					Value="SpaceGroteskBold" />
			<Setter Property="FontSize"
					Value="26" />
			<Setter Property="LineBreakMode"
					Value="WordWrap" />
			<Setter Property="HorizontalTextAlignment"
					Value="Center" />
			<Setter Property="TextColor"
					Value="{AppThemeBinding Light={StaticResource ContentPrimaryWLLight}, Dark={StaticResource ContentPrimaryWLDark}}" />
		</Style>
		<Style x:Key="SubTextLabel"
			   BasedOn="{StaticResource FriendlyNameLabel}"
			   ApplyToDerivedTypes="False"
			   TargetType="Label">
			<Setter Property="FontFamily"
					Value="SpaceGroteskMedium" />
			<Setter Property="FontSize"
					Value="18" />
			<Setter Property="LineBreakMode"
					Value="WordWrap" />
			<Setter Property="HorizontalTextAlignment"
					Value="Center" />
			<Setter Property="TextColor"
					Value="{AppThemeBinding Light={StaticResource ContentSecondaryWLLight}, Dark={StaticResource ContentSecondaryWLDark}}" />
		</Style>
		<Style x:Key="AgeLabel"
			   BasedOn="{StaticResource FriendlyNameLabel}"
			   ApplyToDerivedTypes="False"
			   TargetType="Label">
			<Setter Property="FontFamily"
					Value="SpaceGroteskBold" />
			<Setter Property="FontSize"
					Value="27" />
			<Setter Property="LineBreakMode"
					Value="WordWrap" />
			<Setter Property="HorizontalTextAlignment"
					Value="Center" />
		</Style>

		<Style x:Key="StatusPillBorder"
			   TargetType="Border">
			<Setter Property="BackgroundColor"
					Value="{AppThemeBinding Light={StaticResource WLToastsAndPillsbgNeutralv300WLLight}, Dark={StaticResource WLToastsAndPillsbgNeutralv300WLDark}}" />
			<Setter Property="VisualStateManager.VisualStateGroups">
				<VisualStateGroupList>
					<VisualStateGroup Name="StatusStates">
						
						<VisualState Name="Created">
							<VisualState.Setters>
								<Setter Property="BackgroundColor"
										Value="{AppThemeBinding Light={StaticResource WLToastsAndPillsbgWarningWLLight}, Dark={StaticResource WLToastsAndPillsbgWarningWLDark}}" />
							</VisualState.Setters>
						</VisualState>
						<VisualState Name="Compromised">
							<VisualState.Setters>
								<Setter Property="BackgroundColor"
										Value="{AppThemeBinding Light={StaticResource WLToastsAndPillsbgWarningWLLight}, Dark={StaticResource WLToastsAndPillsbgWarningWLDark}}" />
							</VisualState.Setters>
						</VisualState>
						<VisualState Name="Approved">
							<VisualState.Setters>
								<Setter Property="BackgroundColor"
										Value="{AppThemeBinding Light={StaticResource WLToastsAndPillsbgSuccessWLLight}, Dark={StaticResource WLToastsAndPillsbgSuccessWLDark}}" />
							</VisualState.Setters>
						</VisualState>
						<VisualState Name="Rejected">
							<VisualState.Setters>
								<Setter Property="BackgroundColor"
										Value="{AppThemeBinding Light={StaticResource WLToastsAndPillsbgDangerWLLight}, Dark={StaticResource WLToastsAndPillsbgDangerWLDark}}" />
							</VisualState.Setters>
						</VisualState>
						<VisualState Name="Obsoleted">
							<VisualState.Setters>
								<Setter Property="BackgroundColor"
										Value="{AppThemeBinding Light={StaticResource WLToastsAndPillsbgDangerWLLight}, Dark={StaticResource WLToastsAndPillsbgDangerWLDark}}" />
							</VisualState.Setters>
						</VisualState>
					</VisualStateGroup>
				</VisualStateGroupList>

			</Setter>
		</Style>
		<Style x:Key="StatusPillLabel"
			   TargetType="Label">
			<Setter Property="FontSize"
					Value="10" />
			<Setter Property="FontFamily"
					Value="SpaceGroteskBold" />
			<Setter Property="TextColor"
					Value="{AppThemeBinding Light={StaticResource WLToastsAndPillsContentNeutralv300WLLight},
                                       Dark={StaticResource WLToastsAndPillsContentNeutralv300WLDark}}" />
			<Setter Property="Text"
					Value="{l:Localize NotAvailable}" />
			<Style.Triggers>
				<DataTrigger TargetType="Label"
							 Binding="{Binding IdentityState}"
							 Value="Created">
					<Setter Property="Text"
							Value="{l:Localize IdentityState_Created}" />
					<Setter Property="TextColor"
							Value="{AppThemeBinding Light={StaticResource WLToastsAndPillsContentWarningWLLight},
                                       Dark={StaticResource WLToastsAndPillsContentWarningWLDark}}" />
				</DataTrigger>
				<DataTrigger TargetType="Label"
							 Binding="{Binding IdentityState}"
							 Value="Compromised">
					<Setter Property="Text"
							Value="{l:Localize IdentityState_Compromised}" />
					<Setter Property="TextColor"
							Value="{AppThemeBinding Light={StaticResource WLToastsAndPillsContentWarningWLLight},
                                       Dark={StaticResource WLToastsAndPillsContentWarningWLDark}}" />
				</DataTrigger>
				<DataTrigger TargetType="Label"
							 Binding="{Binding IdentityState}"
							 Value="Approved">
					<Setter Property="Text"
							Value="{l:Localize IdentityState_Approved}" />
					<Setter Property="TextColor"
							Value="{AppThemeBinding Light={StaticResource WLToastsAndPillsContentSuccessWLLight},
                                       Dark={StaticResource WLToastsAndPillsContentSuccessWLLight}}" />
				</DataTrigger>
				<DataTrigger TargetType="Label"
							 Binding="{Binding IdentityState}"
							 Value="Rejected">
					<Setter Property="Text"
							Value="{l:Localize IdentityState_Rejected}" />
					<Setter Property="TextColor"
							Value="{AppThemeBinding Light={StaticResource WLToastsAndPillsContentDangerWLLight},
                                       Dark={StaticResource WLToastsAndPillsContentDangerWLDark}}" />
				</DataTrigger>
				<DataTrigger TargetType="Label"
							 Binding="{Binding IdentityState}"
							 Value="Obsoleted">
					<Setter Property="Text"
							Value="{l:Localize IdentityState_Obsoleted}" />
					<Setter Property="TextColor"
							Value="{AppThemeBinding Light={StaticResource WLToastsAndPillsContentDangerWLLight},
                                       Dark={StaticResource WLToastsAndPillsContentDangerWLDark}}" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<!-- Field Styles -->
		<Style x:Key="FieldKeyLabel"
			   TargetType="Label">
			<Setter Property="FontSize"
					Value="14" />
			<Setter Property="FontFamily"
					Value="SpaceGroteskRegular" />
			<Setter Property="TextColor"
					Value="{AppThemeBinding Light={StaticResource ContentSecondaryWLLight}, Dark={StaticResource ContentSecondaryWLDark}}" />
		</Style>
		<Style x:Key="FieldValueLabel"
			   TargetType="Label">
			<Setter Property="FontSize"
					Value="16" />
			<Setter Property="FontFamily"
					Value="SpaceGroteskRegular" />
			<Setter Property="TextColor"
					Value="{AppThemeBinding Light={StaticResource ContentSecondaryWLLight}, Dark={StaticResource ContentSecondaryWLDark}}" />
		</Style>
		<Style x:Key="FieldTitleLabel"
			   TargetType="Label">
			<Setter Property="FontSize"
					Value="14" />
			<Setter Property="FontFamily"
					Value="SpaceGroteskBold" />
			<Setter Property="TextColor"
					Value="{AppThemeBinding Light={StaticResource ContentSecondaryWLLight}, Dark={StaticResource ContentSecondaryWLDark}}" />
		</Style>

		<DataTemplate x:Key="DefaultFieldTemplate"
					  x:DataType="objectModel:ObservableFieldItem">
			<VerticalStackLayout>
				<Label Text="{Binding  Label}"
					   Style="{StaticResource FieldKeyLabel}" />
				<Label Text="{Binding Value}"
					   Style="{StaticResource FieldValueLabel}" />
			</VerticalStackLayout>
		</DataTemplate>

		<DataTemplate x:Key="ClickableFieldTemplate"
					  x:DataType="objectModel:ObservableFieldItem">
			<Grid RowDefinitions="auto, auto"
				  ColumnDefinitions="*, auto">
				<Grid.GestureRecognizers>
					<TapGestureRecognizer Command="{Binding Source={x:Reference ThisPage}, Path=BindingContext.FieldTappedCommand}"
										  CommandParameter="{Binding Value}" />
				</Grid.GestureRecognizers>

				<Label Grid.Row="0"
					   Grid.Column="0"
					   Text="{Binding  Label}"
					   Style="{StaticResource FieldKeyLabel}" />
				<controls:SvgView Grid.Row="0"
								  Grid.Column="1"
								  Source="content_copy.svg"
								  TintColor="{AppThemeBinding Light={StaticResource ContentSecondaryWLLight}, Dark={StaticResource ContentSecondaryWLDark}}"
								  WidthRequest="16"
								  HeightRequest="16"
								  Aspect="AspectFit" />
				<Label Grid.Row="1"
					   Grid.ColumnSpan="2"
					   Text="{Binding Value}"
					   Style="{StaticResource FieldValueLabel}"
					   TextColor="{AppThemeBinding Light={StaticResource ContentLinkWLLight}, Dark={StaticResource ContentLinkWLDark}}" />
			</Grid>
		</DataTemplate>

		<DataTemplate x:Key="CountryFieldTemplate"
					  x:DataType="objectModel:ObservableFieldItem">
			<VerticalStackLayout>
				<Label Text="{Binding  Label}"
					   Style="{StaticResource FieldKeyLabel}" />
				<Label Text="{Binding Value, Converter={converters:CountryCodeToFlagAndName}}"
					   Style="{StaticResource FieldValueLabel}" />
			</VerticalStackLayout>
		</DataTemplate>

		<DataTemplate x:Key="GenderFieldTemplate"
					  x:DataType="objectModel:ObservableFieldItem">
			<VerticalStackLayout>
				<Label Text="{Binding  Label}"
					   Style="{StaticResource FieldKeyLabel}" />
				<Label Text="{Binding Value, Converter={converters:GenderCodeToSymbolAndLabel}}"
					   Style="{StaticResource FieldValueLabel}" />
			</VerticalStackLayout>
		</DataTemplate>

		<viewmodel:ObservableFieldItemDictionarySelector x:Key="FieldSelector"
														 DefaultTemplate="{StaticResource DefaultFieldTemplate}">
			<viewmodel:ObservableFieldItemDictionarySelector.Templates>
				<viewmodel:TemplateMapping Key="{x:Static root:Constants+CustomXmppProperties.Neuro_Id}"
										   Template="{StaticResource ClickableFieldTemplate}" />
				<viewmodel:TemplateMapping Key="{x:Static root:Constants+XmppProperties.Jid}"
										   Template="{StaticResource ClickableFieldTemplate}" />
				<viewmodel:TemplateMapping Key="{x:Static root:Constants+XmppProperties.DeviceId}"
										   Template="{StaticResource ClickableFieldTemplate}" />
				<viewmodel:TemplateMapping Key="{x:Static root:Constants+XmppProperties.Country}"
										   Template="{StaticResource CountryFieldTemplate}" />
				<viewmodel:TemplateMapping Key="{x:Static root:Constants+XmppProperties.Nationality}"
										   Template="{StaticResource CountryFieldTemplate}" />
				<viewmodel:TemplateMapping Key="{x:Static root:Constants+XmppProperties.Gender}"
										   Template="{StaticResource GenderFieldTemplate}" />
			</viewmodel:ObservableFieldItemDictionarySelector.Templates>

		</viewmodel:ObservableFieldItemDictionarySelector>

		<Style x:Key="IconBorder"
			   ApplyToDerivedTypes="False"
			   TargetType="Border"
			   BasedOn="{StaticResource BorderSet}">
			<Setter Property="BackgroundColor"
					Value="{AppThemeBinding Light={StaticResource ButtonNeutralNavButtonsbgActiveWLLight}, Dark={StaticResource ButtonNeutralNavButtonsbgActiveWLDark}}" />
			<Setter Property="Padding"
					Value="{StaticResource MediumMargins}" />
			<Setter Property="Margin"
					Value="0" />
			<Setter Property="WidthRequest"
					Value="40" />
			<Setter Property="HeightRequest"
					Value="40" />
			<Setter Property="HorizontalOptions"
					Value="Start" />
			<Setter Property="StrokeShape">
				<RoundRectangle CornerRadius="8" />
			</Setter>

		</Style>
	</VisualElement.Resources>

	<Grid BackgroundColor="{AppThemeBinding Light={StaticResource SurfaceBackgroundLight}, Dark={StaticResource SurfaceBackgroundDark}}">
		<Grid.RowDefinitions>
			<!-- top bar -->
			<RowDefinition Height="auto" />
			<!-- ID CARD -->
			<RowDefinition Height="*" />
			<RowDefinition Height="90" />
			<!-- Padding between Card and bottom -->
			<RowDefinition Height="50" />
			<!-- Bottom sheet -->
			<RowDefinition Height="50" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<controls:Background Grid.Row="1"
							 Grid.RowSpan="3" />

		<skiaLottie:SKLottieView Grid.Row="0"
								 Grid.RowSpan="5"
								 IsVisible="{Binding IsApproved}"
								 Source="background.json"
								 x:Name="RainbowView"
								 AbsoluteLayout.LayoutBounds="0,0,1,1"
								 AbsoluteLayout.LayoutFlags="All"
								 Rotation="90"
								 RepeatCount="-1"
								 HorizontalOptions="Center" />
		<!-- TOP BAR -->
		<Grid Grid.Row="0"
			  ColumnDefinitions="*,*,*"
			  RowDefinitions="auto"
			  Margin="16,16,16,8">
			<controls:TemplatedButton Grid.Column="0"
									  HorizontalOptions="Start"
									  Command="{Binding GoBackCommand}">
				<Border Style="{StaticResource IconBorder}">
					<controls:SvgView WidthRequest="24"
									  HeightRequest="24"
									  Source="close.svg"
									  Aspect="AspectFit"
									  TintColor="{AppThemeBinding Light={StaticResource ButtonNeutralContentPressedLight}, Dark={StaticResource ButtonNeutralContentPressedDark}}" />
				</Border>
			</controls:TemplatedButton>
			<Image Grid.Column="1"
				   HorizontalOptions="Center"
				   Source="neuro_b"
				   MaximumHeightRequest="24"
				   Aspect="AspectFit" />

			<controls:TemplatedButton Grid.Column="2"
									  Command="{Binding ShareCommand}"
									  HorizontalOptions="End">
				<Border Style="{StaticResource IconBorder}">
					<controls:SvgView WidthRequest="24"
									  HeightRequest="24"
									  Source="share.svg"
									  Aspect="AspectFit"
									  TintColor="{AppThemeBinding Light={StaticResource ButtonNeutralContentPressedLight}, Dark={StaticResource ButtonNeutralContentPressedDark}}" />

				</Border>
			</controls:TemplatedButton>

		</Grid>

		<!-- QR Code Shadow-->
		<Border Grid.Row="2"
				WidthRequest="150"
				HeightRequest="150"
				TranslationY="0"
				BackgroundColor="Transparent"
				Style="{StaticResource BorderSet}"
				StrokeShape="RoundRectangle 16" />

		<!-- ID CARD -->
		<Grid Grid.Row="1"
			  Grid.RowSpan="2">
			<Border Style="{StaticResource CardBorder}"
					Margin="16,8,16,8"
					Padding="0">
				<Grid>
					<!-- BG -->
					<ContentView>
						<AbsoluteLayout>
							<controls:SvgView Source="id_background.svg"
											  Scale="1.1" />
						</AbsoluteLayout>
					</ContentView>
					
					<!-- TIMER -->
					<Border IsVisible="{Binding HasTimer}"
							VerticalOptions="End"
							HorizontalOptions="End"
							StrokeShape="RoundRectangle 8"
							WidthRequest="50"
							HeightRequest="38"
							Margin="16"
							BackgroundColor="{AppThemeBinding Light={StaticResource SurfaceElevation1WLLight}, Dark={StaticResource SurfaceElevation1WLDark}}">
						<Label Text="{Binding TimerSeconds}"
							   Margin="8,4,8,4"
							   Style="{StaticResource SubTextLabel}"
							   VerticalOptions="Start"
							   HorizontalOptions="Center"
							   HorizontalTextAlignment="Center"
							   FontFamily="SpaceGroteskBold" />
					</Border>

					<Border VerticalOptions="End"
							HorizontalOptions="Start"
							StrokeShape="RoundRectangle 16"
							Margin="16"
							helpers:VisualStateProperties.State="{Binding IdentityState}"
							Style="{StaticResource StatusPillBorder}">

						<Label Style="{StaticResource StatusPillLabel}" Margin="4,2"
								HorizontalOptions="Center"
								VerticalOptions="Center" />
					</Border>
				</Grid>
			</Border>
		</Grid>

		<!-- CARD CONTENT -->
		<Grid Grid.Row="1"
			  Padding="0,16, 0, 8"
			  Margin="{StaticResource MediumMargins}"
			  WidthRequest="250"
			  RowDefinitions="auto, *">
			<VerticalStackLayout  Grid.Row="0"
								  HorizontalOptions="Center"
								  Spacing="{StaticResource SmallSpacing}"
								  Padding="0"
								  Margin="0">
				<Grid WidthRequest="200"
					  HeightRequest="200">
					<controls:ConditionView Condition="{Binding LoadPhotosTask.IsRunning}">
						<controls:ConditionView.True>
							<ActivityIndicator IsRunning="True"
											   WidthRequest="50"
											   HeightRequest="50"
											   VerticalOptions="Center"
											   HorizontalOptions="Center" />
						</controls:ConditionView.True>
						<controls:ConditionView.False>
							<Border StrokeShape="RoundRectangle 16"
									Background="{AppThemeBinding Light={StaticResource SurfaceElevation2WLLight}, Dark={StaticResource SurfaceElevation2WLDark}}">
								<controls:ConditionView Condition="{Binding HasProfilePhoto}">
									<controls:ConditionView.True>
										<Image Source="{Binding ProfilePhoto}"
											   WidthRequest="200"
											   HeightRequest="200"
											   Aspect="AspectFit" />
									</controls:ConditionView.True>
									<controls:ConditionView.False>
										<controls:SvgView Source="person.svg"
														  WidthRequest="70"
														  HeightRequest="70"
														  Aspect="AspectFit" />
									</controls:ConditionView.False>
								</controls:ConditionView>

							</Border>
						</controls:ConditionView.False>
					</controls:ConditionView>
					<!-- Water mark
					<Grid VerticalOptions="End"
						  HorizontalOptions="Start"
						  WidthRequest="50"
						  HeightRequest="50"
						  IsVisible="{Binding HasProfilePhoto}">
						<Border Background="{AppThemeBinding Light={StaticResource SurfaceElevation1Light}, Dark={StaticResource SurfaceElevation1Dark}}"
								StrokeShape="RoundRectangle 0 16 0 0">

						</Border>
					</Grid> -->
					<Grid VerticalOptions="End"
						  HorizontalOptions="End"
						  WidthRequest="50"
						  HeightRequest="50"
						  IsVisible="{Binding HasAge}">
						<Border Background="{AppThemeBinding Light={StaticResource SurfaceElevation1WLLight}, Dark={StaticResource SurfaceElevation1WLDark}}"
								StrokeShape="RoundRectangle 16 0 0 0">
							<Label Style="{StaticResource AgeLabel}"
								   Text="{Binding AgeText}"
								   VerticalOptions="Center"
								   HorizontalOptions="Center" />
						</Border>
					</Grid>

				</Grid>

				<Label Style="{StaticResource FriendlyNameLabel}"
					   Text="{Binding FriendlyName}" />
				<Label Style="{StaticResource SubTextLabel}"
					   Text="{Binding SubText}" />

			</VerticalStackLayout>
			<VerticalStackLayout Grid.Row="1" Margin="0, 0, 0, 4" VerticalOptions="End">
				<Label Style="{StaticResource SubTextLabel}"
						FontSize="14"
						Text="{l:Localize Path=ExpiresFormat, Arg={Binding ExpireDate}}" />
			</VerticalStackLayout>
		</Grid>

		<!-- QR Code -->
		<Border Grid.Row="2"
				WidthRequest="150"
				HeightRequest="150"
				TranslationY="0"
				Style="{StaticResource QrBorder}">
			<Image HorizontalOptions="Center"
				   TranslationX="0"
				   Source="{Binding QrCode}">
				<Image.GestureRecognizers>
					<TapGestureRecognizer Command="{Binding QrTappedCommand}"
										  NumberOfTapsRequired="1" />
				</Image.GestureRecognizers>
			</Image>
		</Border>

		<skiaLottie:SKConfettiView x:Name="ConfettiView" InputTransparent="True"
								   Grid.RowSpan="5"
								   IsAnimationEnabled="{Binding ShouldCelebrate}"
								   HorizontalOptions="Fill"
								   VerticalOptions="Fill" />
		
		<Grid Grid.Row="1"
			  Grid.RowSpan="4">
			<controls:BottomSheetView x:Name="BottomSheet"
									  VerticalOptions="End"
									  MaxExpandedHeight="-1">
				<controls:BottomSheetView.HeaderContent>
					<VerticalStackLayout Background="{AppThemeBinding Light={StaticResource SurfaceElevation1WLLight}, Dark={StaticResource SurfaceElevation1WLDark}}"
										 Padding="2">
						<controls:SvgView Source="swipe_up.svg"
										  Aspect="Fill"
										  HeightRequest="24"
										  WidthRequest="24"
										  TintColor="{AppThemeBinding Light={StaticResource ContentAccessWLLight}, Dark={StaticResource ContentAccessWLDark}}" />
						<Label Text="{l:Localize SwipeForDetails}"
							   TextColor="{AppThemeBinding Light={StaticResource ContentAccessWLLight}, Dark={StaticResource ContentAccessWLDark}}"
							   FontSize="16"
							   HorizontalOptions="Center"
							   FontFamily="SpaceGroteskBold"
							   HorizontalTextAlignment="Center" />
					</VerticalStackLayout>
				</controls:BottomSheetView.HeaderContent>
				<controls:BottomSheetView.MainContent>
					<ContentView>
						<ScrollView VerticalOptions="Fill"
									HorizontalOptions="Fill">
							<VerticalStackLayout>
								<controls:TextButton Style="{StaticResource FilledTextButton}"
													 LabelData="{l:Localize AddContact}"
													 Command="{Binding AddContactCommand}"
													 IsVisible="{Binding CanAddContact}"
													 HorizontalOptions="Fill" Margin="16" />
								
								<controls:TextButton Style="{StaticResource FilledTextButton}"
													 LabelData="{l:Localize RemoveContact}"
													 Command="{Binding RemoveContactCommand}"
													 IsVisible="{Binding CanRemoveContact}"
													 HorizontalOptions="Fill"
													 Margin="16" />

								<!-- Photos -->
								<Border Style="{StaticResource FieldGroupBorder}"
										IsVisible="{Binding HasPhotos}">
									<Grid RowDefinitions="auto, auto"
										  RowSpacing="16">
										<Label Text="{l:Localize Photos}"
											   Grid.Row="0"
											   Style="{StaticResource FieldTitleLabel}" />
										<FlexLayout Grid.Row="1"
													AlignContent="Center"
													BindableLayout.ItemsSource="{Binding Photos}"
													Direction="Row"
													Wrap="Wrap"
													JustifyContent="Start">
											<BindableLayout.ItemTemplate>
												<DataTemplate x:DataType="photos:Photo">
													<Image Margin="2"
														   Aspect="Fill"
														   WidthRequest="64"
														   HeightRequest="64"
														   Rotation="{Binding Rotation}"
														   Source="{Binding Source}">
														<Image.GestureRecognizers>
															<TapGestureRecognizer Command="{Binding Source={x:Reference ThisPage}, Path=BindingContext.ImageTappedCommand}"
																				  CommandParameter="{Binding Attachment}" />
														</Image.GestureRecognizers>
													</Image>
												</DataTemplate>
											</BindableLayout.ItemTemplate>
										</FlexLayout>
									</Grid>
								</Border>

								<!-- FIELDS -->
								<!-- Should probably be virtualized with collectionview -->
								<Border Style="{StaticResource FieldGroupBorder}"
										IsVisible="{Binding HasPersonalFields}">
									<!-- Title + BindableLayout-->
									<VerticalStackLayout Spacing="16">
										<Label Text="{l:Localize PersonalInformation}"
											   Style="{StaticResource FieldTitleLabel}" />
										<VerticalStackLayout HorizontalOptions="Fill"
															 Spacing="16"
															 BindableLayout.ItemsSource="{Binding PersonalFields}"
															 BindableLayout.ItemTemplateSelector="{StaticResource FieldSelector}" />
									</VerticalStackLayout>
								</Border>

								<Border Style="{StaticResource FieldGroupBorder}"
										IsVisible="{Binding HasOrganizationFields}">
									<!-- Title + BindableLayout-->
									<VerticalStackLayout Spacing="16">
										<Label Text="{l:Localize OrganizationalInformation}"
											   Style="{StaticResource FieldTitleLabel}" />
										<VerticalStackLayout HorizontalOptions="Fill"
															 Spacing="16"
															 BindableLayout.ItemsSource="{Binding OrganizationFields}"
															 BindableLayout.ItemTemplateSelector="{StaticResource FieldSelector}" />
									</VerticalStackLayout>
								</Border>

								<Border Style="{StaticResource FieldGroupBorder}"
										IsVisible="{Binding HasTechnicalFields}">
									<!-- Title + BindableLayout-->
									<VerticalStackLayout Spacing="16">
										<Label Text="{l:Localize Technical}"
											   Style="{StaticResource FieldTitleLabel}" />
										<VerticalStackLayout HorizontalOptions="Fill"
															 Spacing="16"
															 BindableLayout.ItemsSource="{Binding TechnicalFields}"
															 BindableLayout.ItemTemplateSelector="{StaticResource FieldSelector}" />
									</VerticalStackLayout>
								</Border>

								<Border Style="{StaticResource FieldGroupBorder}"
										IsVisible="{Binding HasOtherFields}">
									<!-- Title + BindableLayout-->
									<VerticalStackLayout Spacing="16">
										<Label Text="{l:Localize OtherInformation}"
											   Style="{StaticResource FieldTitleLabel}" />
										<VerticalStackLayout HorizontalOptions="Fill"
															 Spacing="16"
															 BindableLayout.ItemsSource="{Binding OtherFields}"
															 BindableLayout.ItemTemplateSelector="{StaticResource FieldSelector}" />
									</VerticalStackLayout>
								</Border>
							</VerticalStackLayout>
						</ScrollView>
					</ContentView>
				</controls:BottomSheetView.MainContent>
			</controls:BottomSheetView>
		</Grid>
	</Grid>
</base:BaseContentPage>
